<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\professional\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Namespaces>
  <Namespace Name="SEIDR">
   <Messages>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.DataBase">
   <Messages>
    <Message Id="DataBase" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="NamespaceShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'DataBase' in namespace name 'SEIDR.DataBase' exists as a discrete term. If your usage is intended to be single word, case it as 'Database'.</Issue>
    </Message>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.DataBase' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.DataBase.Schema">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SEIDR.DataBase.Schema' with another namespace.</Issue>
    </Message>
    <Message Id="DataBase" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="NamespaceShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'DataBase' in namespace name 'SEIDR.DataBase.Schema' exists as a discrete term. If your usage is intended to be single word, case it as 'Database'.</Issue>
    </Message>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.DataBase.Schema' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.Doc">
   <Messages>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.Doc' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.Doc.DocQuery">
   <Messages>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.Doc.DocQuery' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.Doc.DocQuery.Predicates">
   <Messages>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.Doc.DocQuery.Predicates' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.META">
   <Messages>
    <Message Id="META" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'META' in namespace name 'SEIDR.META' by changing it to 'Meta'.</Issue>
    </Message>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.META' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.OperationServiceModels">
   <Messages>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.OperationServiceModels' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.OperationServiceModels.Status">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SEIDR.OperationServiceModels.Status' with another namespace.</Issue>
    </Message>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.OperationServiceModels.Status' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.Serialization">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SEIDR.Serialization' with another namespace.</Issue>
    </Message>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.Serialization' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SEIDR.ThreadManaging">
   <Messages>
    <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in namespace name 'SEIDR.ThreadManaging' by changing it to 'Seidr'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\bin\Debug\SEIDR.dll">
   <Modules>
    <Module Name="seidr.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'SEIDR.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="SEIDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'SEIDR' in assembly name 'SEIDR.dll' by changing it to 'Seidr'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'SEIDR.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="SEIDR">
       <Types>
        <Type Name="BaseExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddRange`1(System.Collections.Generic.List`1&lt;!!0&gt;,!!0[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="586">Change 'List&lt;T&gt;' in 'BaseExtensions.AddRange&lt;T&gt;(this List&lt;T&gt;, params T[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="587">In externally visible method 'BaseExtensions.AddRange&lt;T&gt;(this List&lt;T&gt;, params T[])', validate parameter 'list' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRangeLimited`1(System.Collections.Generic.List`1&lt;!!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="564">Change 'List&lt;T&gt;' in 'BaseExtensions.AddRangeLimited&lt;T&gt;(this List&lt;T&gt;, IEnumerable&lt;T&gt;, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="564">In method 'BaseExtensions.AddRangeLimited&lt;T&gt;(this List&lt;T&gt;, IEnumerable&lt;T&gt;, int)', correct the spelling of 'a' in parameter name 'aList' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="565">In externally visible method 'BaseExtensions.AddRangeLimited&lt;T&gt;(this List&lt;T&gt;, IEnumerable&lt;T&gt;, int)', validate parameter 'aList' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="572">In externally visible method 'BaseExtensions.AddRangeLimited&lt;T&gt;(this List&lt;T&gt;, IEnumerable&lt;T&gt;, int)', validate parameter 'range' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllMatches(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="480">Replace method 'BaseExtensions.AllMatches(this IEnumerable&lt;string&gt;, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="LIKE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="480">In member 'BaseExtensions.AllMatches(this IEnumerable&lt;string&gt;, string, bool)', correct the casing of 'LIKE' in parameter name 'LIKE' by changing it to 'like'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#And(System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1063">In method 'BaseExtensions.And(this bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1063">In method 'BaseExtensions.And(this bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AndNot(System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1072">In method 'BaseExtensions.AndNot(this bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1072">In method 'BaseExtensions.AndNot(this bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Byte,System.Byte,System.Byte,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="644">Replace method 'BaseExtensions.Between(this byte, byte, byte, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="644">In method 'BaseExtensions.Between(this byte, byte, byte, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="644">In method 'BaseExtensions.Between(this byte, byte, byte, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="644">In method 'BaseExtensions.Between(this byte, byte, byte, bool)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Int16,System.Int16,System.Int16,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="635">Replace method 'BaseExtensions.Between(this short, short, short, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="635">In method 'BaseExtensions.Between(this short, short, short, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="635">In method 'BaseExtensions.Between(this short, short, short, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="635">In method 'BaseExtensions.Between(this short, short, short, bool)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Int32,System.Int32,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="617">Replace method 'BaseExtensions.Between(this int, int, int, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="617">In method 'BaseExtensions.Between(this int, int, int, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="617">In method 'BaseExtensions.Between(this int, int, int, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="617">In method 'BaseExtensions.Between(this int, int, int, bool)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Int64,System.Int64,System.Int64,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="626">Replace method 'BaseExtensions.Between(this long, long, long, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="626">In method 'BaseExtensions.Between(this long, long, long, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="626">In method 'BaseExtensions.Between(this long, long, long, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="626">In method 'BaseExtensions.Between(this long, long, long, bool)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContainsAnySubstring(System.String,System.Boolean,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Case" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="680">In member 'BaseExtensions.ContainsAnySubstring(this string, bool, params string[])', correct the casing of 'Case' in parameter name 'CaseSensitive' by changing it to 'case'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="684">In externally visible method 'BaseExtensions.ContainsAnySubstring(this string, bool, params string[])', validate parameter 'value' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="682">In externally visible method 'BaseExtensions.ContainsAnySubstring(this string, bool, params string[])', validate parameter 'matches' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContainsAnySubstring(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="672">In externally visible method 'BaseExtensions.ContainsAnySubstring(this string, IEnumerable&lt;string&gt;)', validate parameter 'matches' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContainsAnySubstring(System.String,System.StringComparison,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="700">In externally visible method 'BaseExtensions.ContainsAnySubstring(this string, StringComparison, params string[])', validate parameter 'check' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CrossApply`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.Boolean&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Apply" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1169">In member 'BaseExtensions.CrossApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Action&lt;T&gt;)', correct the casing of 'Apply' in parameter name 'Apply' by changing it to 'apply'.</Issue>
            </Message>
            <Message Id="Predicate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1169">In member 'BaseExtensions.CrossApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Action&lt;T&gt;)', correct the casing of 'Predicate' in parameter name 'Predicate' by changing it to 'predicate'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CrossApply`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.Boolean&gt;,System.Func`2&lt;!!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1183">Consider a design where 'BaseExtensions.CrossApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)' doesn't nest generic type 'Func&lt;T, IEnumerable&lt;T&gt;&gt;'.</Issue>
            </Message>
            <Message Id="Apply" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1183">In member 'BaseExtensions.CrossApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)', correct the casing of 'Apply' in parameter name 'Apply' by changing it to 'apply'.</Issue>
            </Message>
            <Message Id="Predicate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1183">In member 'BaseExtensions.CrossApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)', correct the casing of 'Predicate' in parameter name 'Predicate' by changing it to 'predicate'.</Issue>
            </Message>
            <Message Id="l" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1185">'BaseExtensions.CrossApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)' declares a variable, 'l', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeNullifyStrings(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="De" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="167">Correct the casing of 'De' in member name 'BaseExtensions.DeNullifyStrings(this object)' by changing it to 'DE'.</Issue>
            </Message>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="167">In method 'BaseExtensions.DeNullifyStrings(this object)', consider providing a more meaningful name than parameter name 'j'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="168">In externally visible method 'BaseExtensions.DeNullifyStrings(this object)', validate parameter 'j' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exclude`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1075">Consider a design that does not require that 'ExcludedCount' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1075">Change 'List&lt;T&gt;' in 'BaseExtensions.Exclude&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, out int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1075">In member 'BaseExtensions.Exclude&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, out int)', correct the casing of 'Check' in parameter name 'Check' by changing it to 'check'.</Issue>
            </Message>
            <Message Id="Excluded" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1075">In member 'BaseExtensions.Exclude&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, out int)', correct the casing of 'Excluded' in parameter name 'ExcludedCount' by changing it to 'excluded'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1078">In externally visible method 'BaseExtensions.Exclude&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, out int)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1080">In externally visible method 'BaseExtensions.Exclude&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, out int)', validate parameter 'Check' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="655">In externally visible method 'BaseExtensions.Exists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="657">In externally visible method 'BaseExtensions.Exists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)', validate parameter 'check' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FirstMatch(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="455">Replace method 'BaseExtensions.FirstMatch(this IEnumerable&lt;string&gt;, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Escape" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="455">In member 'BaseExtensions.FirstMatch(this IEnumerable&lt;string&gt;, string, bool)', correct the casing of 'Escape' in parameter name 'EscapeRegex' by changing it to 'escape'.</Issue>
            </Message>
            <Message Id="LIKE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="455">In member 'BaseExtensions.FirstMatch(this IEnumerable&lt;string&gt;, string, bool)', correct the casing of 'LIKE' in parameter name 'LIKE' by changing it to 'like'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEach`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1094">In externally visible method 'BaseExtensions.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1096">In externally visible method 'BaseExtensions.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)', validate parameter 'myUpdateAction' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEach`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Update" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1100">In member 'BaseExtensions.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, int)', correct the casing of 'Update' in parameter name 'Update' by changing it to 'update'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1104">In externally visible method 'BaseExtensions.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, int)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1106">In externally visible method 'BaseExtensions.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, int)', validate parameter 'Update' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEachIndex`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`2&lt;!!0,System.Int32&gt;,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1149">Replace method 'BaseExtensions.ForEachIndex&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Interval" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1149">In member 'BaseExtensions.ForEachIndex&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int, int)', correct the casing of 'Interval' in parameter name 'Interval' by changing it to 'interval'.</Issue>
            </Message>
            <Message Id="Update" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1149">In member 'BaseExtensions.ForEachIndex&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int, int)', correct the casing of 'Update' in parameter name 'Update' by changing it to 'update'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1153">In externally visible method 'BaseExtensions.ForEachIndex&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int, int)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1156">In externally visible method 'BaseExtensions.ForEachIndex&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int, int)', validate parameter 'Update' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEachIndexLimited`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`2&lt;!!0,System.Int32&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Update" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1127">In member 'BaseExtensions.ForEachIndexLimited&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int)', correct the casing of 'Update' in parameter name 'Update' by changing it to 'update'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1131">In externally visible method 'BaseExtensions.ForEachIndexLimited&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1133">In externally visible method 'BaseExtensions.ForEachIndexLimited&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T, int&gt;, int)', validate parameter 'Update' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDescription(System.Enum)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="34">In externally visible method 'BaseExtensions.GetDescription(this Enum)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDescription(System.Reflection.MemberInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="18">In method 'BaseExtensions.GetDescription(this MemberInfo)', correct the spelling of 'val' in parameter name 'val' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="19">In externally visible method 'BaseExtensions.GetDescription(this MemberInfo)', validate parameter 'val' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLoopedIndex`1(System.Collections.Generic.IList`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="54">In externally visible method 'BaseExtensions.GetLoopedIndex&lt;T&gt;(this IList&lt;T&gt;, int)', validate parameter 'source' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasMinimumCount`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="l" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="934">'BaseExtensions.HasMinimumCount&lt;T&gt;(this IEnumerable&lt;T&gt;, int)' declares a variable, 'l', of type 'T', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasMinimumCount`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="960">In externally visible method 'BaseExtensions.HasMinimumCount&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, int)', validate parameter 'condition' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexOfAny(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="882">Replace method 'BaseExtensions.IndexOfAny(this string, IEnumerable&lt;string&gt;, int, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexOfAny(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Int32,System.String&amp;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="897">Consider a design that does not require that 'Chosen' be an out parameter.</Issue>
            </Message>
            <Message Id="Case" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="897">In member 'BaseExtensions.IndexOfAny(this string, IEnumerable&lt;string&gt;, int, out string, bool)', correct the casing of 'Case' in parameter name 'CaseInsensitive' by changing it to 'case'.</Issue>
            </Message>
            <Message Id="Chosen" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="897">In member 'BaseExtensions.IndexOfAny(this string, IEnumerable&lt;string&gt;, int, out string, bool)', correct the casing of 'Chosen' in parameter name 'Chosen' by changing it to 'chosen'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="899">In externally visible method 'BaseExtensions.IndexOfAny(this string, IEnumerable&lt;string&gt;, int, out string, bool)', validate parameter 'value' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="900">In externally visible method 'BaseExtensions.IndexOfAny(this string, IEnumerable&lt;string&gt;, int, out string, bool)', validate parameter 'words' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertWithExpansion`1(System.Collections.Generic.List`1&lt;!!0&gt;,System.Int32,!!0,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="308">Replace method 'BaseExtensions.InsertWithExpansion&lt;T&gt;(this List&lt;T&gt;, int, T, T)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="308">Change 'List&lt;T&gt;' in 'BaseExtensions.InsertWithExpansion&lt;T&gt;(this List&lt;T&gt;, int, T, T)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="309">In externally visible method 'BaseExtensions.InsertWithExpansion&lt;T&gt;(this List&lt;T&gt;, int, T, T)', validate parameter 'toFill' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSuperSet`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SuperSet" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="229">The compound word 'SuperSet' in member name 'BaseExtensions.IsSuperSet&lt;T&gt;(this IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;)' exists as a discrete term. If your usage is intended to be single word, case it as 'Superset' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="230">In externally visible method 'BaseExtensions.IsSuperSet&lt;T&gt;(this IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;)', validate parameter 'subList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LastMatch(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="468">Replace method 'BaseExtensions.LastMatch(this IEnumerable&lt;string&gt;, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="LIKE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="468">In member 'BaseExtensions.LastMatch(this IEnumerable&lt;string&gt;, string, bool)', correct the casing of 'LIKE' in parameter name 'LIKE' by changing it to 'like'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Like(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="486">Replace method 'BaseExtensions.Like(this IEnumerable&lt;string&gt;, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="486">In method 'BaseExtensions.Like(this IEnumerable&lt;string&gt;, string, bool)', correct the spelling of 'a' in parameter name 'aList' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="486">In method 'BaseExtensions.Like(this IEnumerable&lt;string&gt;, string, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Like(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="418">Replace method 'BaseExtensions.Like(this string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="418">In method 'BaseExtensions.Like(this string, string, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="418">In method 'BaseExtensions.Like(this string, string, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Map(System.Object,System.Object,System.Collections.Generic.Dictionary`2&lt;System.String,System.Reflection.PropertyInfo&gt;,System.Collections.Generic.List`1&lt;System.Reflection.PropertyInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="108">Change 'List&lt;PropertyInfo&gt;' in 'BaseExtensions.Map(this object, object, Dictionary&lt;string, PropertyInfo&gt;, List&lt;PropertyInfo&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="108">Change either member or parameter name 'map' so that one differs from the other.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="112">In externally visible method 'BaseExtensions.Map(this object, object, Dictionary&lt;string, PropertyInfo&gt;, List&lt;PropertyInfo&gt;)', validate parameter 'propertiesToWrite' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="109">In externally visible method 'BaseExtensions.Map(this object, object, Dictionary&lt;string, PropertyInfo&gt;, List&lt;PropertyInfo&gt;)', validate parameter 'propertiesToMap' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapInheritance`2(!!1,!!0,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="68">Replace method 'BaseExtensions.MapInheritance&lt;RT, IT&gt;(this IT, RT, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="68">On method 'BaseExtensions.MapInheritance&lt;RT, IT&gt;(this IT, RT, bool)', prefix generic type parameter name 'IT' with 'T'.</Issue>
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="68">On method 'BaseExtensions.MapInheritance&lt;RT, IT&gt;(this IT, RT, bool)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapInto`2(System.Collections.Generic.IList`1&lt;!!1&gt;,System.Collections.Generic.IDictionary`2&lt;!!0,!!1&gt;,System.Collections.Generic.IList`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="996">In member 'BaseExtensions.MapInto&lt;K, T&gt;(this IList&lt;T&gt;, IDictionary&lt;K, T&gt;, IList&lt;K&gt;)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="K" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="996">On method 'BaseExtensions.MapInto&lt;K, T&gt;(this IList&lt;T&gt;, IDictionary&lt;K, T&gt;, IList&lt;K&gt;)', consider providing a more meaningful name than generic type parameter name 'K'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="996">On method 'BaseExtensions.MapInto&lt;K, T&gt;(this IList&lt;T&gt;, IDictionary&lt;K, T&gt;, IList&lt;K&gt;)', prefix generic type parameter name 'K' with 'T'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="999">In externally visible method 'BaseExtensions.MapInto&lt;K, T&gt;(this IList&lt;T&gt;, IDictionary&lt;K, T&gt;, IList&lt;K&gt;)', validate parameter 'values' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="999">In externally visible method 'BaseExtensions.MapInto&lt;K, T&gt;(this IList&lt;T&gt;, IDictionary&lt;K, T&gt;, IList&lt;K&gt;)', validate parameter 'destination' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="997">In externally visible method 'BaseExtensions.MapInto&lt;K, T&gt;(this IList&lt;T&gt;, IDictionary&lt;K, T&gt;, IList&lt;K&gt;)', validate parameter 'Keys' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Matches`1(System.Collections.Generic.IList`1&lt;!!0&gt;,System.Collections.Generic.IList`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="212">In externally visible method 'BaseExtensions.Matches&lt;T&gt;(this IList&lt;T&gt;, IList&lt;T&gt;)', validate parameter 'left' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="212">In externally visible method 'BaseExtensions.Matches&lt;T&gt;(this IList&lt;T&gt;, IList&lt;T&gt;)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nLength(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="185">Correct the casing of 'n' in member name 'BaseExtensions.nLength(this string)' by changing it to 'N'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotExists`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1056">In externally visible method 'BaseExtensions.NotExists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1058">In externally visible method 'BaseExtensions.NotExists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)', validate parameter 'check' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotIn`1(!!0,!!0[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="601">In externally visible method 'BaseExtensions.NotIn&lt;T&gt;(this T, params T[])', validate parameter 'list' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="405">Correct the casing of 'n' in member name 'BaseExtensions.nString(this string)' by changing it to 'N'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ntLength(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="nt" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="359">Correct the casing of 'nt' in member name 'BaseExtensions.ntLength(this string)' by changing it to 'NT'.</Issue>
            </Message>
            <Message Id="nt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="359">Correct the spelling of 'nt' in member name 'BaseExtensions.ntLength(this string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nTrim(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="373">Correct the casing of 'n' in member name 'BaseExtensions.nTrim(this string)' by changing it to 'N'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nTrim(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="389">Correct the casing of 'n' in member name 'BaseExtensions.nTrim(this string, bool)' by changing it to 'N'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="394">In externally visible method 'BaseExtensions.nTrim(this string, bool)', validate parameter 'check' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NullifyStringProperties(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="147">In method 'BaseExtensions.NullifyStringProperties(this object)', consider providing a more meaningful name than parameter name 'j'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="157">Replace the call to 'string.operator ==(string, string)' in 'BaseExtensions.NullifyStringProperties(this object)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="149">In externally visible method 'BaseExtensions.NullifyStringProperties(this object)', validate parameter 'j' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Or(System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1064">In method 'BaseExtensions.Or(this bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1064">In method 'BaseExtensions.Or(this bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderedMap`2(System.Collections.Generic.IDictionary`2&lt;!!0,!!1&gt;,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="K" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On method 'BaseExtensions.OrderedMap&lt;K, T&gt;(this IDictionary&lt;K, T&gt;, IEnumerable&lt;K&gt;)', consider providing a more meaningful name than generic type parameter name 'K'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error">On method 'BaseExtensions.OrderedMap&lt;K, T&gt;(this IDictionary&lt;K, T&gt;, IEnumerable&lt;K&gt;)', prefix generic type parameter name 'K' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OuterApply`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.Boolean&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Apply" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1200">In member 'BaseExtensions.OuterApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Action&lt;T&gt;)', correct the casing of 'Apply' in parameter name 'Apply' by changing it to 'apply'.</Issue>
            </Message>
            <Message Id="Predicate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1200">In member 'BaseExtensions.OuterApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Action&lt;T&gt;)', correct the casing of 'Predicate' in parameter name 'Predicate' by changing it to 'predicate'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OuterApply`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.Boolean&gt;,System.Func`2&lt;!!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1215">Consider a design where 'BaseExtensions.OuterApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)' doesn't nest generic type 'Func&lt;T, IEnumerable&lt;T&gt;&gt;'.</Issue>
            </Message>
            <Message Id="Apply" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1215">In member 'BaseExtensions.OuterApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)', correct the casing of 'Apply' in parameter name 'Apply' by changing it to 'apply'.</Issue>
            </Message>
            <Message Id="Predicate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1215">In member 'BaseExtensions.OuterApply&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)', correct the casing of 'Predicate' in parameter name 'Predicate' by changing it to 'predicate'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWithExpansion`1(System.Collections.Generic.List`1&lt;!!0&gt;,System.Int32,!!0,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="335">Replace method 'BaseExtensions.SetWithExpansion&lt;T&gt;(this List&lt;T&gt;, int, T, T)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="335">Change 'List&lt;T&gt;' in 'BaseExtensions.SetWithExpansion&lt;T&gt;(this List&lt;T&gt;, int, T, T)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="336">In externally visible method 'BaseExtensions.SetWithExpansion&lt;T&gt;(this List&lt;T&gt;, int, T, T)', validate parameter 'toFill' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitByKeyword(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="KeyWords" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error">In member 'BaseExtensions.SplitByKeyword(this string, IEnumerable&lt;string&gt;, bool, bool)', the compound word 'KeyWords' in parameter name 'KeyWords' exists as a discrete term. If your usage is intended to be single word, case it as 'Keywords' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'BaseExtensions.SplitByKeyword(this string, IEnumerable&lt;string&gt;, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Ignore" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'BaseExtensions.SplitByKeyword(this string, IEnumerable&lt;string&gt;, bool, bool)', correct the casing of 'Ignore' in parameter name 'IgnoreCase' by changing it to 'ignore'.</Issue>
            </Message>
            <Message Id="Include" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'BaseExtensions.SplitByKeyword(this string, IEnumerable&lt;string&gt;, bool, bool)', correct the casing of 'Include' in parameter name 'IncludeKeywords' by changing it to 'include'.</Issue>
            </Message>
            <Message Id="Key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'BaseExtensions.SplitByKeyword(this string, IEnumerable&lt;string&gt;, bool, bool)', correct the casing of 'Key' in parameter name 'KeyWords' by changing it to 'key'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitByKeyword(System.String,System.String,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="KeyWord" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="851">In member 'BaseExtensions.SplitByKeyword(this string, string, bool, bool)', the compound word 'KeyWord' in parameter name 'KeyWord' exists as a discrete term. If your usage is intended to be single word, case it as 'Keyword' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="851">Replace method 'BaseExtensions.SplitByKeyword(this string, string, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Ignore" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="851">In member 'BaseExtensions.SplitByKeyword(this string, string, bool, bool)', correct the casing of 'Ignore' in parameter name 'IgnoreCase' by changing it to 'ignore'.</Issue>
            </Message>
            <Message Id="Key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="851">In member 'BaseExtensions.SplitByKeyword(this string, string, bool, bool)', correct the casing of 'Key' in parameter name 'KeyWord' by changing it to 'key'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitByQualifier(System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="787">Replace method 'BaseExtensions.SplitByQualifier(this string, string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="787">Change 'List&lt;string&gt;' in 'BaseExtensions.SplitByQualifier(this string, string, string, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="811">'BaseExtensions.SplitByQualifier(this string, string, string, bool)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="799">'BaseExtensions.SplitByQualifier(this string, string, string, bool)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="799">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, bool)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="800">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, bool)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitByQualifier(System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="708">Change 'List&lt;string&gt;' in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="722">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="723">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="745">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="746">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="724">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="747">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'BaseExtensions.SplitByQualifier(this string, string, string, string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitOnString(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="260">Change 'List&lt;string&gt;' in 'BaseExtensions.SplitOnString(this string, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Split" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="260">In member 'BaseExtensions.SplitOnString(this string, int)', correct the casing of 'Split' in parameter name 'SplitLength' by changing it to 'split'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitOnString(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="197">Change 'List&lt;string&gt;' in 'BaseExtensions.SplitOnString(this string, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TakeSubset`1(System.Collections.Generic.IList`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="502">In externally visible method 'BaseExtensions.TakeSubset&lt;T&gt;(this IList&lt;T&gt;, Predicate&lt;T&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="504">In externally visible method 'BaseExtensions.TakeSubset&lt;T&gt;(this IList&lt;T&gt;, Predicate&lt;T&gt;)', validate parameter 'selector' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnderMaximumCount`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="l" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1015">'BaseExtensions.UnderMaximumCount&lt;T&gt;(this IEnumerable&lt;T&gt;, int)' declares a variable, 'l', of type 'T', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnderMaximumCount`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="1039">In externally visible method 'BaseExtensions.UnderMaximumCount&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;, int)', validate parameter 'condition' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Union`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="285">Change 'List&lt;T&gt;' in 'BaseExtensions.Union&lt;T&gt;(this IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BaseExtensions.cs" Line="292">In externally visible method 'BaseExtensions.Union&lt;T&gt;(this IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;, bool)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BigValueFlag" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'BigValueFlag' to end in 'Collection'.</Issue>
          </Message>
          <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in type name 'BigValueFlag' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AverageFlaggedValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BigValueFlag.cs" Line="42">Method 'BigValueFlag.AverageFlaggedValue()' passes 'There are active flags which are too big for current implementation' as the 'paramName' argument to a 'ArgumentOutOfRangeException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.UInt64]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="BigValueFlag.cs" Line="56">Use an integral value or string as the parameter to indexer 'BigValueFlag.this[ulong]'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DateFormatter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="51">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.DateFormatter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="51">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.DateFormatter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="51">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.DateFormatter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="69">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.DateFormatter(params string[])' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="69">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.DateFormatter(params string[])' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="69">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.DateFormatter(params string[])' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="61">In externally visible method 'DateFormatter.DateFormatter(params string[])', validate parameter 'names' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkSanity" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DateFormatter.checkSanity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getFormat(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="139">Correct the casing of 'get' in member name 'DateFormatter.getFormat(int)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="143">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DateFormatter.getFormat(int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getFormat(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="123">Correct the casing of 'get' in member name 'DateFormatter.getFormat(string)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="126">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.getFormat(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="126">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.getFormat(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="126">In externally visible method 'DateFormatter.getFormat(string)', validate parameter 'columnName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Item(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="83">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.this.get(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="83">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.this.get(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="83">In externally visible method 'DateFormatter.this.get(string)', validate parameter 'column' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ParseFormat(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="172">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.ParseFormat(string, int)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="172">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DateFormatter.ParseFormat(string, int)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="172">In externally visible method 'DateFormatter.ParseFormat(string, int)', validate parameter 'original' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseOnce(System.String,System.DateTime&amp;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="291">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="291">Replace method 'DateFormatter.ParseOnce(string, out DateTime, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Sanity" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="291">In member 'DateFormatter.ParseOnce(string, out DateTime, bool)', correct the casing of 'Sanity' in parameter name 'SanityCheck' by changing it to 'sanity'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseOnceS(System.String,System.DateTime&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="303">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseString(System.Int32,System.String,System.DateTime&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="240">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="254">In externally visible method 'DateFormatter.ParseString(int, string, out DateTime)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseString(System.String,System.String,System.DateTime&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="226">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#size" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="size" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="DateFormatter.cs" Line="36">Correct the casing of 'size' in member name 'DateFormatter.size' by changing it to 'Size'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DerivedColumnInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="To" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="853">In member 'DerivedColumnInfo.DerivedColumnInfo(string)', correct the casing of 'To' in parameter name 'ToStringValue' by changing it to 'to'.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="853">In member 'DerivedColumnInfo.DerivedColumnInfo(string)', consider replacing the data type identifier 'String' in parameter name 'ToStringValue' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="857">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'DerivedColumnInfo.DerivedColumnInfo(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="858">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'DerivedColumnInfo.DerivedColumnInfo(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="855">In externally visible method 'DerivedColumnInfo.DerivedColumnInfo(string)', validate parameter 'ToStringValue' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#columnName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DerivedColumnInfo.columnName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#expression" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DerivedColumnInfo.expression' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="839">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DerivedColumnInfo.FileString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="839">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DerivedColumnInfo.FileString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#maxLength" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="802">Correct the casing of 'max' in member name 'DerivedColumnInfo.maxLength' by changing it to 'Max'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Set(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="828">In externally visible method 'DerivedColumnInfo.Set(string)', validate parameter 'line' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#value" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DerivedColumnInfo.value' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FixWidthConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'DELIMITER' and 'Delimiter' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="250">'FixWidthConverter.FixWidthConverter(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="235">'FixWidthConverter.FixWidthConverter(string, string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="237">'FixWidthConverter.FixWidthConverter(string, string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddPreAnchors(System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="603">'FixWidthConverter.AddPreAnchors(ref string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AnchorModDerivePulls" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="35">Change 'List&lt;Tuple&lt;int, string, int, int?&gt;&gt;' in 'FixWidthConverter.AnchorModDerivePulls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="35">Consider a design where 'FixWidthConverter.AnchorModDerivePulls' doesn't nest generic type 'List&lt;Tuple&lt;int, string, int, int?&gt;&gt;'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_AnchorModDerivePulls(System.Collections.Generic.List`1&lt;System.Tuple`4&lt;System.Int32,System.String,System.Int32,System.Nullable`1&lt;System.Int32&gt;&gt;&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="35">'FixWidthConverter.AnchorModDerivePulls.set(List&lt;Tuple&lt;int, string, int, int?&gt;&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#construct(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SetUp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="272">In member 'FixWidthConverter.construct(string, string)', the compound word 'SetUp' in parameter name 'SetUpFile' exists as a discrete term. If your usage is intended to be single word, case it as 'Setup' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="272">In member 'FixWidthConverter.construct(string, string)', correct the casing of 'Set' in parameter name 'SetUpFile' by changing it to 'set'.</Issue>
            </Message>
            <Message Id="construct" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="272">Correct the casing of 'construct' in member name 'FixWidthConverter.construct(string, string)' by changing it to 'Construct'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="295">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.construct(string, string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="340">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.construct(string, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="340">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.construct(string, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="286">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.construct(string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="290">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.construct(string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="300">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.construct(string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="304">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.construct(string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="308">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.construct(string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertFile()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="437">'FixWidthConverter.ConvertFile()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="428">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.ConvertFile()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="431">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.ConvertFile()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="452">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.ConvertFile()' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertIndexes(System.String,System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="589">Modify 'FixWidthConverter.ConvertIndexes(string, List&lt;int&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="577">Change 'List&lt;int&gt;' in 'FixWidthConverter.ConvertIndexes(string, List&lt;int&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="577">In member 'FixWidthConverter.ConvertIndexes(string, List&lt;int&gt;)', correct the casing of 'Field' in parameter name 'FieldLength' by changing it to 'field'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="594">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.ConvertIndexes(string, List&lt;int&gt;)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="578">In externally visible method 'FixWidthConverter.ConvertIndexes(string, List&lt;int&gt;)', validate parameter 'line' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="578">In externally visible method 'FixWidthConverter.ConvertIndexes(string, List&lt;int&gt;)', validate parameter 'FieldLength' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#customHeader" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_customHeader()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="414">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.customHeader.get()' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DerivedCols" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FixWidthConverter.DerivedCols' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fieldWidths" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="223">Change 'List&lt;int&gt;' in 'FixWidthConverter.fieldWidths' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="223">Correct the casing of 'field' in member name 'FixWidthConverter.fieldWidths' by changing it to 'Field'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_fieldWidths(System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="223">'FixWidthConverter.fieldWidths.set(List&lt;int&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#filterIn" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="219">Change 'List&lt;string&gt;' in 'FixWidthConverter.filterIn' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="filter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="219">Correct the casing of 'filter' in member name 'FixWidthConverter.filterIn' by changing it to 'Filter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#filterOut" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="215">Change 'List&lt;string&gt;' in 'FixWidthConverter.filterOut' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="filter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="215">Correct the casing of 'filter' in member name 'FixWidthConverter.filterOut' by changing it to 'Filter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FilterRecords(System.String[],System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="748">In externally visible method 'FixWidthConverter.FilterRecords(string[], bool)', validate parameter 'data' before using it.</Issue>
            </Message>
            <Message Id="hasHeader" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="745">'hasHeader', a parameter declared in 'FixWidthConverter.FilterRecords(string[], bool)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FilterWrite(System.String[],System.Boolean,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="625">'FixWidthConverter.FilterWrite(string[], bool, int, int)' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="736">Object 'sw' can be disposed more than once in method 'FixWidthConverter.FilterWrite(string[], bool, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 736</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="634">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.FilterWrite(string[], bool, int, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="651">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.FilterWrite(string[], bool, int, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="659">Replace the call to 'string.operator !=(string, string)' in 'FixWidthConverter.FilterWrite(string[], bool, int, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWorkSet(System.IO.StreamReader,System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="499">The 'this' parameter (or 'Me' in Visual Basic) of 'FixWidthConverter.GetWorkSet(StreamReader, out bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hasHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FixWidthConverter.hasHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HeaderDifferentIndexes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FixWidthConverter.HeaderDifferentIndexes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertDerived(SEIDR.DerivedColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="130">In externally visible method 'FixWidthConverter.InsertDerived(DerivedColumnInfo)', validate parameter 'dci' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertDerived(SEIDR.DerivedColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="138">In externally visible method 'FixWidthConverter.InsertDerived(params DerivedColumnInfo[])', validate parameter 'dci' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LineEnding_CR" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="68">Remove the underscores from member name 'FixWidthConverter.LineEnding_CR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LineEnding_LF" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="80">Remove the underscores from member name 'FixWidthConverter.LineEnding_LF'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#makeAnything(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="make" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="566">Correct the casing of 'make' in member name 'FixWidthConverter.makeAnything(string)' by changing it to 'Make'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="567">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.makeAnything(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="567">In externally visible method 'FixWidthConverter.makeAnything(string)', validate parameter 'input' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#makeDigits(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="make" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="544">Correct the casing of 'make' in member name 'FixWidthConverter.makeDigits(string, bool)' by changing it to 'Make'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="545">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.makeDigits(string, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="545">In externally visible method 'FixWidthConverter.makeDigits(string, bool)', validate parameter 'input' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#makeLetters(System.String,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="555">Replace method 'FixWidthConverter.makeLetters(string, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="make" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="555">Correct the casing of 'make' in member name 'FixWidthConverter.makeLetters(string, bool, bool)' by changing it to 'Make'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="556">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.makeLetters(string, bool, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="556">In externally visible method 'FixWidthConverter.makeLetters(string, bool, bool)', validate parameter 'input' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#makeSpaces(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="make" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="534">Correct the casing of 'make' in member name 'FixWidthConverter.makeSpaces(string)' by changing it to 'Make'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="535">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FixWidthConverter.makeSpaces(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="535">In externally visible method 'FixWidthConverter.makeSpaces(string)', validate parameter 'input' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FixWidthConverter.NewHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostAnchor" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FixWidthConverter.PostAnchor' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#qr" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FixWidthConverter.qr' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDelimiter(System.Char)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="FixWidthConverter.cs" Line="161">'FixWidthConverter.SetDelimiter(char)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FixWidthConverter+DELIMITER" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DELIMITER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DELIMITER' in type name 'FixWidthConverter.DELIMITER' by changing it to 'Delimiter'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#COMMA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="COMMA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'COMMA' in member name 'FixWidthConverter.DELIMITER.COMMA' by changing it to 'Comma'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PIPE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PIPE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PIPE' in member name 'FixWidthConverter.DELIMITER.PIPE' by changing it to 'Pipe'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TAB" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TAB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'TAB' in member name 'FixWidthConverter.DELIMITER.TAB' by changing it to 'Tab'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LikeExpressions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AllowRegex" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LikeExpressions.AllowRegex' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Compare(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Comparison" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="241">In member 'LikeExpressions.Compare(IEnumerable&lt;string&gt;, string)', correct the casing of 'Comparison' in parameter name 'Comparison' by changing it to 'comparison'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="242">In externally visible method 'LikeExpressions.Compare(IEnumerable&lt;string&gt;, string)', validate parameter 'lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Compare(System.String[],System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="216">In externally visible method 'LikeExpressions.Compare(string[], string)', validate parameter 'lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMatches(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="274">In externally visible method 'LikeExpressions.GetMatches(IEnumerable&lt;string&gt;, string)', validate parameter 'lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReverseCompare(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Comparison" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="256">In member 'LikeExpressions.ReverseCompare(IEnumerable&lt;string&gt;, string)', correct the casing of 'Comparison' in parameter name 'Comparison' by changing it to 'comparison'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReverseCompare(System.String[],System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="232">In externally visible method 'LikeExpressions.ReverseCompare(string[], string)', validate parameter 'lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SearchString(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="45">'LikeExpressions.SearchString(string, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="45">The 'this' parameter (or 'Me' in Visual Basic) of 'LikeExpressions.SearchString(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SearchStringWithCase(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="28">'LikeExpressions.SearchStringWithCase(string, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="LikeExpression.cs" Line="28">The 'this' parameter (or 'Me' in Visual Basic) of 'LikeExpressions.SearchStringWithCase(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Mailer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Net.Mail.MailAddress,System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="91">Replace method 'Mailer.Mailer(MailAddress, string, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Port" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="91">In member 'Mailer.Mailer(MailAddress, string, string, int)', correct the casing of 'Port' in parameter name 'Port' by changing it to 'port'.</Issue>
            </Message>
            <Message Id="Send" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="91">In member 'Mailer.Mailer(MailAddress, string, string, int)', correct the casing of 'Send' in parameter name 'SendTo' by changing it to 'send'.</Issue>
            </Message>
            <Message Id="Server" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="91">In member 'Mailer.Mailer(MailAddress, string, string, int)', correct the casing of 'Server' in parameter name 'Server' by changing it to 'server'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="76">Replace method 'Mailer.Mailer(string, string, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Port" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="76">In member 'Mailer.Mailer(string, string, string, int)', correct the casing of 'Port' in parameter name 'Port' by changing it to 'port'.</Issue>
            </Message>
            <Message Id="Send" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="76">In member 'Mailer.Mailer(string, string, string, int)', correct the casing of 'Send' in parameter name 'SendTo' by changing it to 'send'.</Issue>
            </Message>
            <Message Id="Server" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="76">In member 'Mailer.Mailer(string, string, string, int)', correct the casing of 'Server' in parameter name 'Server' by changing it to 'server'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="78">In externally visible method 'Mailer.Mailer(string, string, string, int)', validate parameter 'mailSender' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Domain" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Domain(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="38">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'Mailer.Domain.set(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="38">In externally visible method 'Mailer.Domain.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Sender" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Mailer.Sender' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMail(System.String,System.String,System.Boolean,System.String,System.Collections.Generic.IEnumerable`1&lt;System.Net.Mail.MailAddress&gt;,System.String,System.String,System.String,System.Collections.Generic.ICollection`1&lt;System.Net.Mail.Attachment&gt;,System.Net.Mail.MailPriority)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">Replace method 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="151">In method 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', object 'new MailMessage()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new MailMessage()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="BCC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">In member 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', correct the casing of 'BCC' in parameter name 'BCCList' by changing it to 'bcc'.</Issue>
            </Message>
            <Message Id="CC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">In member 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', correct the casing of 'CC' in parameter name 'CCList' by changing it to 'cc'.</Issue>
            </Message>
            <Message Id="Mail" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">In member 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', correct the casing of 'Mail' in parameter name 'MailBody' by changing it to 'mail'.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">In member 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', correct the casing of 'Multi' in parameter name 'MultiRecipient' by changing it to 'multi'.</Issue>
            </Message>
            <Message Id="Recipient" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">In member 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', correct the casing of 'Recipient' in parameter name 'RecipientList' by changing it to 'recipient'.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="139">In method 'Mailer.SendMail(string, string, bool, string, IEnumerable&lt;MailAddress&gt;, string, string, string, ICollection&lt;Attachment&gt;, MailPriority)', correct the spelling of 'Multi' in parameter name 'MultiRecipient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SMTPServer" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SMTP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="20">Correct the casing of 'SMTP' in member name 'Mailer.SMTPServer' by changing it to 'Smtp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UseSSL" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SSL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="24">Correct the casing of 'SSL' in member name 'Mailer.UseSSL' by changing it to 'Ssl'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UseSSLDefault" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SSL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="Mailer.cs" Line="25">Correct the casing of 'SSL' in member name 'Mailer.UseSSLDefault' by changing it to 'Ssl'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NumExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Num' in type name 'NumExtensions'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Average(System.Decimal,System.Decimal)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="338">In method 'NumExtensions.Average(this decimal, decimal)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="338">In method 'NumExtensions.Average(this decimal, decimal)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Decimal,System.Decimal,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="331">In member 'NumExtensions.Average(this decimal, decimal, int)', correct the casing of 'Count' in parameter name 'CountB' by changing it to 'count'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="331">In method 'NumExtensions.Average(this decimal, decimal, int)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="331">In method 'NumExtensions.Average(this decimal, decimal, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Decimal,System.Decimal,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="366">In member 'NumExtensions.Average(this decimal, decimal, long)', correct the casing of 'Count' in parameter name 'CountB' by changing it to 'count'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="366">In method 'NumExtensions.Average(this decimal, decimal, long)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="366">In method 'NumExtensions.Average(this decimal, decimal, long)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Decimal,System.Int32,System.Decimal,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="315">Replace method 'NumExtensions.Average(this decimal, int, decimal, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="315">In method 'NumExtensions.Average(this decimal, int, decimal, int)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="315">In method 'NumExtensions.Average(this decimal, int, decimal, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Decimal,System.Int64,System.Decimal)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="374">In method 'NumExtensions.Average(this decimal, long, decimal)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="374">In method 'NumExtensions.Average(this decimal, long, decimal)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Decimal,System.Int64,System.Decimal,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="350">In method 'NumExtensions.Average(this decimal, long, decimal, long)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="350">In method 'NumExtensions.Average(this decimal, long, decimal, long)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="276">In method 'NumExtensions.Average(this double, double)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="276">In method 'NumExtensions.Average(this double, double)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Double,System.Double,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="269">In member 'NumExtensions.Average(this double, double, int)', correct the casing of 'Count' in parameter name 'CountB' by changing it to 'count'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="269">In method 'NumExtensions.Average(this double, double, int)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="269">In method 'NumExtensions.Average(this double, double, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Double,System.Double,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="303">In member 'NumExtensions.Average(this double, double, long)', correct the casing of 'Count' in parameter name 'CountB' by changing it to 'count'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="303">In method 'NumExtensions.Average(this double, double, long)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="303">In method 'NumExtensions.Average(this double, double, long)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Double,System.Int32,System.Double,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="253">Replace method 'NumExtensions.Average(this double, int, double, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="253">In method 'NumExtensions.Average(this double, int, double, int)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="253">In method 'NumExtensions.Average(this double, int, double, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Double,System.Int64,System.Double,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="287">Replace method 'NumExtensions.Average(this double, long, double, long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="287">In method 'NumExtensions.Average(this double, long, double, long)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="287">In method 'NumExtensions.Average(this double, long, double, long)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="399">In method 'NumExtensions.Average(this int, int)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="399">In method 'NumExtensions.Average(this int, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="386">Replace method 'NumExtensions.Average(this int, int, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="386">In method 'NumExtensions.Average(this int, int, int, int)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="386">In method 'NumExtensions.Average(this int, int, int, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Int64,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="423">In method 'NumExtensions.Average(this long, long)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="423">In method 'NumExtensions.Average(this long, long)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Average(System.Int64,System.Int64,System.Int64,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="409">Replace method 'NumExtensions.Average(this long, long, long, long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="409">In method 'NumExtensions.Average(this long, long, long, long)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="409">In method 'NumExtensions.Average(this long, long, long, long)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Byte,System.Byte,System.Byte,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="154">Replace method 'NumExtensions.Between(this byte, byte, byte, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="154">In method 'NumExtensions.Between(this byte, byte, byte, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="154">In method 'NumExtensions.Between(this byte, byte, byte, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Byte,System.Int32,System.Int32,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="176">Replace method 'NumExtensions.Between(this byte, int, int, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="176">In method 'NumExtensions.Between(this byte, int, int, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="176">In method 'NumExtensions.Between(this byte, int, int, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="132">Replace method 'NumExtensions.Between(this decimal, decimal, decimal, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="132">In method 'NumExtensions.Between(this decimal, decimal, decimal, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="132">In method 'NumExtensions.Between(this decimal, decimal, decimal, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Double,System.Double,System.Double,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="45">Replace method 'NumExtensions.Between(this double, double, double, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="45">In method 'NumExtensions.Between(this double, double, double, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="45">In method 'NumExtensions.Between(this double, double, double, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Int16,System.Int16,System.Int16,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="110">Replace method 'NumExtensions.Between(this short, short, short, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="110">In method 'NumExtensions.Between(this short, short, short, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="110">In method 'NumExtensions.Between(this short, short, short, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="24">Replace method 'NumExtensions.Between(this int, int, int, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="24">In method 'NumExtensions.Between(this int, int, int, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="24">In method 'NumExtensions.Between(this int, int, int, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Int64,System.Int64,System.Int64,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="88">Replace method 'NumExtensions.Between(this long, long, long, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="88">In method 'NumExtensions.Between(this long, long, long, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="88">In method 'NumExtensions.Between(this long, long, long, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between(System.Single,System.Single,System.Single,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="67">Replace method 'NumExtensions.Between(this float, float, float, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="67">In method 'NumExtensions.Between(this float, float, float, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="67">In method 'NumExtensions.Between(this float, float, float, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between`2(!!0,!!1,!!1,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="198">Replace method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="N" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="198">On method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)', consider providing a more meaningful name than generic type parameter name 'N'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="198">In method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="198">In method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="198">On method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)', prefix generic type parameter name 'ET' with 'T'.</Issue>
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="198">On method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)', prefix generic type parameter name 'N' with 'T'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="240">Method 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' passes 'N' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="System.Convert.ToDecimal(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="237">Because the behavior of 'Convert.ToDecimal(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToDecimal(object, IFormatProvider)'. If the result of 'Convert.ToDecimal(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="237">Because the behavior of 'Convert.ToDecimal(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToDecimal(object, IFormatProvider)'. If the result of 'Convert.ToDecimal(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="237">Because the behavior of 'Convert.ToDecimal(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToDecimal(object, IFormatProvider)'. If the result of 'Convert.ToDecimal(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="218">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="218">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="218">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="222">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="222">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="222">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="210">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="210">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="210">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="227">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="227">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="227">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt64(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="214">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="214">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="214">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToSingle(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="232">Because the behavior of 'Convert.ToSingle(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToSingle(object, IFormatProvider)'. If the result of 'Convert.ToSingle(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="232">Because the behavior of 'Convert.ToSingle(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToSingle(object, IFormatProvider)'. If the result of 'Convert.ToSingle(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="NumExtensions.cs" Line="232">Because the behavior of 'Convert.ToSingle(object)' could vary based on the current user's locale settings, replace this call in 'NumExtensions.Between&lt;ET, N&gt;(this ET, N, N, bool, bool)' with a call to 'Convert.ToSingle(object, IFormatProvider)'. If the result of 'Convert.ToSingle(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserFriendlyDateRegex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Eval(System.String,System.Nullable`1&lt;System.DateTime&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="19">Replace method 'UserFriendlyDateRegex.Eval(string, DateTime?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Evaluation" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="19">In member 'UserFriendlyDateRegex.Eval(string, DateTime?)', correct the casing of 'Evaluation' in parameter name 'Evaluation' by changing it to 'evaluation'.</Issue>
            </Message>
            <Message Id="Eval" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="19">Correct the spelling of 'Eval' in member name 'UserFriendlyDateRegex.Eval(string, DateTime?)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="19">In method 'UserFriendlyDateRegex.Eval(string, DateTime?)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="22">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="24">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="25">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="21">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="23">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="26">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="27">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR" File="UserFriendlyDateRegex.cs" Line="28">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserFriendlyDateRegex.Eval(string, DateTime?)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.DataBase">
       <Types>
        <Type Name="DatabaseConnection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Server" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="102">In member 'DatabaseConnection.DatabaseConnection(string)', correct the casing of 'Server' in parameter name 'Server' by changing it to 'server'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catalog" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="102">In member 'DatabaseConnection.DatabaseConnection(string, string)', correct the casing of 'Catalog' in parameter name 'Catalog' by changing it to 'catalog'.</Issue>
            </Message>
            <Message Id="Server" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="102">In member 'DatabaseConnection.DatabaseConnection(string, string)', correct the casing of 'Server' in parameter name 'Server' by changing it to 'server'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApplicationName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ApplicationName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="131">In externally visible method 'DatabaseConnection.ApplicationName.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DEFAULT_DBNAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DBNAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DBNAME' in member name 'DatabaseConnection.DEFAULT_DBNAME' by changing it to 'Dbname'.</Issue>
            </Message>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseConnection.DEFAULT_DBNAME' by changing it to 'Default'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseConnection.DEFAULT_DBNAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_NAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseConnection.DEFAULT_NAME' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="NAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NAME' in member name 'DatabaseConnection.DEFAULT_NAME' by changing it to 'Name'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseConnection.DEFAULT_NAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefaultCatalog" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_DefaultCatalog(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="302">In externally visible method 'DatabaseConnection.DefaultCatalog.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FailoverPartner" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_FailoverPartner(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="405">Replace the call to 'string.operator ==(string, string)' in 'DatabaseConnection.FailoverPartner.set(string)' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FromString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="19">'DatabaseConnection.FromString(string)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="26">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseConnection.FromString(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String,System.Globalization.NumberStyles)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="43">Because the behavior of 'int.Parse(string, NumberStyles)' could vary based on the current user's locale settings, replace this call in 'DatabaseConnection.FromString(string)' with a call to 'int.Parse(string, NumberStyles, IFormatProvider)'. If the result of 'int.Parse(string, NumberStyles, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetServer()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="result" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="336">'DatabaseConnection.GetServer()' declares a variable, 'result', of type 'StringBuilder', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="357">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseConnection.GetServer()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReformatConnection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="436">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseConnection.ReformatConnection()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunCommand(System.Data.SqlClient.SqlCommand,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="461">Replace method 'DatabaseConnection.RunCommand(SqlCommand, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="462">In method 'DatabaseConnection.RunCommand(SqlCommand, bool)', object 's' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="469">In method 'DatabaseConnection.RunCommand(SqlCommand, bool)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="472">Object 'c' can be disposed more than once in method 'DatabaseConnection.RunCommand(SqlCommand, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 472</Issue>
            </Message>
            <Message Id="Dispose" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="461">In member 'DatabaseConnection.RunCommand(SqlCommand, bool)', correct the casing of 'Dispose' in parameter name 'Dispose' by changing it to 'dispose'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="462">Be sure to set the DataSet Locale property wherever 'DatabaseConnection.RunCommand(SqlCommand, bool)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="466">In externally visible method 'DatabaseConnection.RunCommand(SqlCommand, bool)', validate parameter 'cmd' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="486">'DatabaseConnection.RunCommand(SqlCommand, SqlConnection, bool)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="488">In method 'DatabaseConnection.RunCommand(SqlCommand, SqlConnection, bool)', object 'ds' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="497">In method 'DatabaseConnection.RunCommand(SqlCommand, SqlConnection, bool)', object 'sda' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="488">Be sure to set the DataSet Locale property wherever 'DatabaseConnection.RunCommand(SqlCommand, SqlConnection, bool)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Server" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Server(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="247">In externally visible method 'DatabaseConnection.Server.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#TimeoutSegment" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_TimeoutSegment()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="384">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseConnection.TimeoutSegment.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#useTrustedConnection" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="use" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseConnection.cs" Line="230">Correct the casing of 'use' in member name 'DatabaseConnection.useTrustedConnection' by changing it to 'Use'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddColumns`1(System.Data.DataTable,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="227">In method 'DatabaseExtensions.AddColumns&lt;RT&gt;(this DataTable, params string[])', object 'new DataColumn()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new DataColumn()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="213">Consider a design where 'DatabaseExtensions.AddColumns&lt;RT&gt;(this DataTable, params string[])' doesn't require explicit type parameter 'RT' in any call to it.</Issue>
            </Message>
            <Message Id="Ignored" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="213">In member 'DatabaseExtensions.AddColumns&lt;RT&gt;(this DataTable, params string[])', correct the casing of 'Ignored' in parameter name 'IgnoredProperties' by changing it to 'ignored'.</Issue>
            </Message>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="213">In method 'DatabaseExtensions.AddColumns&lt;RT&gt;(this DataTable, params string[])', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="213">On method 'DatabaseExtensions.AddColumns&lt;RT&gt;(this DataTable, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="216">Be sure to set the DataTable Locale property wherever 'DatabaseExtensions.AddColumns&lt;RT&gt;(this DataTable, params string[])' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRow`1(System.Data.DataTable,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="243">In method 'DatabaseExtensions.AddRow&lt;RT&gt;(this DataTable, RT)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="243">On method 'DatabaseExtensions.AddRow&lt;RT&gt;(this DataTable, RT)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRowRange`1(System.Data.DataTable,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="263">In method 'DatabaseExtensions.AddRowRange&lt;RT&gt;(this DataTable, IEnumerable&lt;RT&gt;)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="263">On method 'DatabaseExtensions.AddRowRange&lt;RT&gt;(this DataTable, IEnumerable&lt;RT&gt;)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataRow`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Record" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="126">In member 'DatabaseExtensions.CreateDataRow&lt;RT&gt;(RT)', correct the casing of 'Record' in parameter name 'Record' by changing it to 'record'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="126">On method 'DatabaseExtensions.CreateDataRow&lt;RT&gt;(RT)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataRowView`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Record" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="119">In member 'DatabaseExtensions.CreateDataRowView&lt;RT&gt;(RT)', correct the casing of 'Record' in parameter name 'Record' by changing it to 'record'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="119">On method 'DatabaseExtensions.CreateDataRowView&lt;RT&gt;(RT)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEachColumn(System.Data.DataRow,System.Action`1&lt;System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="267">In method 'DatabaseExtensions.ForEachColumn(this DataRow, Action&lt;object&gt;)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="268">In externally visible method 'DatabaseExtensions.ForEachColumn(this DataRow, Action&lt;object&gt;)', validate parameter 'r' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="270">In externally visible method 'DatabaseExtensions.ForEachColumn(this DataRow, Action&lt;object&gt;)', validate parameter 'apply' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFirstRowOrNull(System.Data.DataSet,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="345">In member 'DatabaseExtensions.GetFirstRowOrNull(this DataSet, int)', correct the casing of 'Table' in parameter name 'Table' by changing it to 'table'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFirstRowOrNull(System.Data.DataTable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="324">In method 'DatabaseExtensions.GetFirstRowOrNull(this DataTable)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReturnValue(System.Data.SqlClient.SqlCommand)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="370">In externally visible method 'DatabaseExtensions.GetReturnValue(this SqlCommand)', validate parameter 'cmd' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStringValue(System.Data.DataRow,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="381">In member 'DatabaseExtensions.GetStringValue(this DataRow, string)', correct the casing of 'Column' in parameter name 'Column' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="382">In externally visible method 'DatabaseExtensions.GetStringValue(this DataRow, string)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValue`1(System.Data.DataRow,System.String,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="375">Replace method 'DatabaseExtensions.GetValue&lt;T&gt;(this DataRow, string, T)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="375">In member 'DatabaseExtensions.GetValue&lt;T&gt;(this DataRow, string, T)', correct the casing of 'Column' in parameter name 'Column' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="def" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="375">In method 'DatabaseExtensions.GetValue&lt;T&gt;(this DataRow, string, T)', correct the spelling of 'def' in parameter name 'def' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="376">In externally visible method 'DatabaseExtensions.GetValue&lt;T&gt;(this DataRow, string, T)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Map(System.Object,System.Data.DataRow,System.Collections.Generic.Dictionary`2&lt;System.String,System.Reflection.PropertyInfo&gt;,System.Data.DataColumnCollection)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="169">Because the behavior of 'Convert.ChangeType(object, Type)' could vary based on the current user's locale settings, replace this call in 'DatabaseExtensions.Map(object, DataRow, Dictionary&lt;string, PropertyInfo&gt;, DataColumnCollection)' with a call to 'Convert.ChangeType(object, Type, IFormatProvider)'. If the result of 'Convert.ChangeType(object, Type, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapEachColumn(System.Data.DataRow,System.Func`2&lt;System.Data.DataColumn,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="279">In method 'DatabaseExtensions.MapEachColumn(this DataRow, Func&lt;DataColumn, object&gt;)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="280">In externally visible method 'DatabaseExtensions.MapEachColumn(this DataRow, Func&lt;DataColumn, object&gt;)', validate parameter 'r' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="282">In externally visible method 'DatabaseExtensions.MapEachColumn(this DataRow, Func&lt;DataColumn, object&gt;)', validate parameter 'map' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapEachColumn(System.Data.DataRow,System.Func`3&lt;System.Data.DataColumn,System.Object,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="291">In method 'DatabaseExtensions.MapEachColumn(this DataRow, Func&lt;DataColumn, object, object&gt;)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="292">In externally visible method 'DatabaseExtensions.MapEachColumn(this DataRow, Func&lt;DataColumn, object, object&gt;)', validate parameter 'r' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="295">In externally visible method 'DatabaseExtensions.MapEachColumn(this DataRow, Func&lt;DataColumn, object, object&gt;)', validate parameter 'mapUpdate' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapObjectsToColumns`1(System.Data.DataRow,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="299">In method 'DatabaseExtensions.MapObjectsToColumns&lt;RT&gt;(this DataRow, IEnumerable&lt;RT&gt;, Func&lt;RT, string&gt;)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="299">On method 'DatabaseExtensions.MapObjectsToColumns&lt;RT&gt;(this DataRow, IEnumerable&lt;RT&gt;, Func&lt;RT, string&gt;)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapObjectsToColumns`1(System.Data.DataRow,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.String&gt;,System.Func`2&lt;!!0,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="304">In method 'DatabaseExtensions.MapObjectsToColumns&lt;RT&gt;(this DataRow, IEnumerable&lt;RT&gt;, Func&lt;RT, string&gt;, Func&lt;RT, object&gt;)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="304">On method 'DatabaseExtensions.MapObjectsToColumns&lt;RT&gt;(this DataRow, IEnumerable&lt;RT&gt;, Func&lt;RT, string&gt;, Func&lt;RT, object&gt;)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToContentList`1(System.Data.DataSet,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="26">Replace method 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataSet, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="26">Change 'List&lt;RT&gt;' in 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataSet, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="26">In member 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataSet, int)', correct the casing of 'Table' in parameter name 'TableIndex' by changing it to 'table'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="26">On method 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataSet, int)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToContentList`1(System.Data.DataTable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="38">Change 'List&lt;RT&gt;' in 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataTable)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="38">In method 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataTable)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="38">On method 'DatabaseExtensions.ToContentList&lt;RT&gt;(this DataTable)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToContentRecord`1(System.Data.DataRow)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="97">On method 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataRow)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToContentRecord`1(System.Data.DataSet,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="74">Replace method 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataSet, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Row" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="74">In member 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataSet, int, int)', correct the casing of 'Row' in parameter name 'RowIndex' by changing it to 'row'.</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="74">In member 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataSet, int, int)', correct the casing of 'Table' in parameter name 'TableIndex' by changing it to 'table'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="74">On method 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataSet, int, int)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToContentRecord`1(System.Data.DataTable,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Row" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="84">In member 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataTable, int)', correct the casing of 'Row' in parameter name 'RowIndex' by changing it to 'row'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="84">On method 'DatabaseExtensions.ToContentRecord&lt;RT&gt;(this DataTable, int)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToTable`1(!!0,System.String,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="188">In member 'DatabaseExtensions.ToTable&lt;RT&gt;(this RT, string, params string[])', correct the casing of 'Table' in parameter name 'TableName' by changing it to 'table'.</Issue>
            </Message>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="188">In method 'DatabaseExtensions.ToTable&lt;RT&gt;(this RT, string, params string[])', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="188">On method 'DatabaseExtensions.ToTable&lt;RT&gt;(this RT, string, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToTable`1(!!0,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="184">In method 'DatabaseExtensions.ToTable&lt;RT&gt;(this RT, params string[])', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="184">On method 'DatabaseExtensions.ToTable&lt;RT&gt;(this RT, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToTable`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.String,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="198">In method 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, string, params string[])', object 'dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="197">In member 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, string, params string[])', correct the casing of 'Table' in parameter name 'TableName' by changing it to 'table'.</Issue>
            </Message>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="197">In method 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, string, params string[])', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="197">On method 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, string, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="198">Be sure to set the DataTable Locale property wherever 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, string, params string[])' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="200">In externally visible method 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, string, params string[])', validate parameter 'o' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToTable`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="193">In method 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, params string[])', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseExtensions.cs" Line="193">On method 'DatabaseExtensions.ToTable&lt;RT&gt;(this IEnumerable&lt;RT&gt;, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.DataBase.DatabaseConnection,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">Replace method 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Connection" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Connection' in parameter name 'Connection' by changing it to 'connection'.</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Default' in parameter name 'DefaultSchema' by changing it to 'default'.</Issue>
            </Message>
            <Message Id="Delete" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Delete' in parameter name 'DeleteFormat' by changing it to 'delete'.</Issue>
            </Message>
            <Message Id="Insert" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Insert' in parameter name 'InsertFormat' by changing it to 'insert'.</Issue>
            </Message>
            <Message Id="Save" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Save' in parameter name 'SaveFormat' by changing it to 'save'.</Issue>
            </Message>
            <Message Id="Select" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Select' in parameter name 'SelectListFormat' by changing it to 'select'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Select' in parameter name 'SelectRowFormat' by changing it to 'select'.</Issue>
            </Message>
            <Message Id="Update" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="95">In member 'DatabaseManager.DatabaseManager(DatabaseConnection, string, string, string, string, string, string, string)', correct the casing of 'Update' in parameter name 'UpdateFormat' by changing it to 'update'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckSuffix(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Insert(System.Int32,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="250">'DatabaseManager.CheckSuffix(string, string)' calls 'string.Insert(int, string)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="246">The 'this' parameter (or 'Me' in Visual Basic) of 'DatabaseManager.CheckSuffix(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Clone(System.Boolean,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="reThrow" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="148">In member 'DatabaseManager.Clone(bool, string)', the compound word 'reThrow' in parameter name 'reThrowException' exists as a discrete term. If your usage is intended to be single word, case it as 'rethrow' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="148">Replace method 'DatabaseManager.Clone(bool, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloneConnection(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="165">Replace method 'DatabaseManager.CloneConnection(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CommandTimeOut" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TimeOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="203">The compound word 'TimeOut' in member name 'DatabaseManager.CommandTimeOut' exists as a discrete term. If your usage is intended to be single word, case it as 'Timeout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_DELETE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseManager.DEFAULT_DELETE' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="DELETE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DELETE' in member name 'DatabaseManager.DEFAULT_DELETE' by changing it to 'Delete'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseManager.DEFAULT_DELETE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_INSERT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseManager.DEFAULT_INSERT' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="INSERT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INSERT' in member name 'DatabaseManager.DEFAULT_INSERT' by changing it to 'Insert'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseManager.DEFAULT_INSERT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_SAVE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseManager.DEFAULT_SAVE' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="SAVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SAVE' in member name 'DatabaseManager.DEFAULT_SAVE' by changing it to 'Save'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseManager.DEFAULT_SAVE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_SELECT_LIST" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseManager.DEFAULT_SELECT_LIST' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="LIST" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LIST' in member name 'DatabaseManager.DEFAULT_SELECT_LIST' by changing it to 'List'.</Issue>
            </Message>
            <Message Id="SELECT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SELECT' in member name 'DatabaseManager.DEFAULT_SELECT_LIST' by changing it to 'Select'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseManager.DEFAULT_SELECT_LIST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_SELECT_ROW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseManager.DEFAULT_SELECT_ROW' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="ROW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ROW' in member name 'DatabaseManager.DEFAULT_SELECT_ROW' by changing it to 'Row'.</Issue>
            </Message>
            <Message Id="SELECT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SELECT' in member name 'DatabaseManager.DEFAULT_SELECT_ROW' by changing it to 'Select'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseManager.DEFAULT_SELECT_ROW'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_UPDATE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DatabaseManager.DEFAULT_UPDATE' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="UPDATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'UPDATE' in member name 'DatabaseManager.DEFAULT_UPDATE' by changing it to 'Update'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DatabaseManager.DEFAULT_UPDATE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete`1(!!0,System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1042">Replace method 'DatabaseManager.Delete&lt;RT&gt;(RT, string, string, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1044">In method 'DatabaseManager.Delete&lt;RT&gt;(RT, string, string, string[])', call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1042">In member 'DatabaseManager.Delete&lt;RT&gt;(RT, string, string, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1042">In method 'DatabaseManager.Delete&lt;RT&gt;(RT, string, string, string[])', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1042">On method 'DatabaseManager.Delete&lt;RT&gt;(RT, string, string, string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1044">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Delete&lt;RT&gt;(RT, string, string, string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete`1(!!0,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="318">On method 'DatabaseManager.Delete&lt;RT&gt;(RT, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManager.DeleteFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute(SEIDR.DataBase.DatabaseManagerHelperModel,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="367">'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' has a cyclomatic complexity of 40. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="367">Replace method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="378">In method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', object 'new SqlCommand(proc)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(proc)' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="441">In method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', object 'new SqlCommand(proc)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(proc)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="371">In method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="387">In method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="450">In method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="491">Object 'c' can be disposed more than once in method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 491</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="421">Modify 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Commit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="367">In member 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', correct the casing of 'Commit' in parameter name 'CommitSuccess' by changing it to 'commit'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="367">In method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="378">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' could contain the following variables 'this._Schema', 'i.Schema', 'i.Procedure'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="441">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' could contain the following variables 'this._Schema', 'i.Schema', 'i.Procedure'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="371">Be sure to set the DataSet Locale property wherever 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="412">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="468">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="368">In externally visible method 'DatabaseManager.Execute(DatabaseManagerHelperModel, bool)', validate parameter 'i' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute(System.String,System.Object,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="503">Replace method 'DatabaseManager.Execute(string, object, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="506">In method 'DatabaseManager.Execute(string, object, bool)', object 'new SqlCommand(QualifiedProcedureName)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(QualifiedProcedureName)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="505">In method 'DatabaseManager.Execute(string, object, bool)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="516">In method 'DatabaseManager.Execute(string, object, bool)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="503">In member 'DatabaseManager.Execute(string, object, bool)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedureName' by changing it to 'qualified'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="503">In member 'DatabaseManager.Execute(string, object, bool)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="rv" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="519">'DatabaseManager.Execute(string, object, bool)' declares a variable, 'rv', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="506">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.Execute(string, object, bool)' could contain the following variables 'QualifiedProcedureName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="505">Be sure to set the DataSet Locale property wherever 'DatabaseManager.Execute(string, object, bool)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="530">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Execute(string, object, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(SEIDR.DataBase.DatabaseManagerHelperModel,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="547">'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' has a cyclomatic complexity of 39. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="547">Replace method 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="558">In method 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)', object 'new SqlCommand(proc)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(proc)' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="619">In method 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)', object 'new SqlCommand(proc)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(proc)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="600">Modify 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Commit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="547">In member 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)', correct the casing of 'Commit' in parameter name 'CommitSuccess' by changing it to 'commit'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="547">In method 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="558">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' could contain the following variables 'this._Schema', 'i.Schema', 'i.Procedure'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="619">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' could contain the following variables 'this._Schema', 'i.Schema', 'i.Procedure'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="591">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="662">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="549">In externally visible method 'DatabaseManager.ExecuteNonQuery(DatabaseManagerHelperModel, bool)', validate parameter 'i' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Int32&amp;,System.Object,System.Nullable`1&lt;System.Boolean&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="699">Consider a design that does not require that 'ReturnCode' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="699">Replace method 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="703">In method 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)', object 'new SqlCommand(QualifiedProcedureName)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(QualifiedProcedureName)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="699">In member 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedureName' by changing it to 'qualified'.</Issue>
            </Message>
            <Message Id="Retry" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="699">In member 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)', correct the casing of 'Retry' in parameter name 'RetryDeadlock' by changing it to 'retry'.</Issue>
            </Message>
            <Message Id="Return" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="699">In member 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)', correct the casing of 'Return' in parameter name 'ReturnCode' by changing it to 'return'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="699">In member 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="703">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)' could contain the following variables 'QualifiedProcedureName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="724">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.ExecuteNonQuery(string, out int, object, bool?, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Object,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="683">Replace method 'DatabaseManager.ExecuteNonQuery(string, object, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="683">In member 'DatabaseManager.ExecuteNonQuery(string, object, bool?)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedureName' by changing it to 'qualified'.</Issue>
            </Message>
            <Message Id="Retry" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="683">In member 'DatabaseManager.ExecuteNonQuery(string, object, bool?)', correct the casing of 'Retry' in parameter name 'RetryDeadlock' by changing it to 'retry'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="683">In member 'DatabaseManager.ExecuteNonQuery(string, object, bool?)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteText(SEIDR.DataBase.DatabaseManagerHelperModel,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="816">Replace method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="817">In method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="831">In method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="863">In method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="850">Object 'c' can be disposed more than once in method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 850</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="878">Modify 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Command" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="816">In member 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', correct the casing of 'Command' in parameter name 'CommandText' by changing it to 'command'.</Issue>
            </Message>
            <Message Id="Commit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="816">In member 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', correct the casing of 'Commit' in parameter name 'Commit' by changing it to 'commit'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="816">In method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="822">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)' could contain the following variables 'CommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="855">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)' could contain the following variables 'CommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="817">Be sure to set the DataSet Locale property wherever 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="818">In externally visible method 'DatabaseManager.ExecuteText(DatabaseManagerHelperModel, string, bool)', validate parameter 'i' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteText(System.String,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="780">Replace method 'DatabaseManager.ExecuteText(string, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="783">In method 'DatabaseManager.ExecuteText(string, bool?)', object 'new SqlCommand(CommandText)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(CommandText)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="781">In method 'DatabaseManager.ExecuteText(string, bool?)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="788">In method 'DatabaseManager.ExecuteText(string, bool?)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Command" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="780">In member 'DatabaseManager.ExecuteText(string, bool?)', correct the casing of 'Command' in parameter name 'CommandText' by changing it to 'command'.</Issue>
            </Message>
            <Message Id="Retry" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="780">In member 'DatabaseManager.ExecuteText(string, bool?)', correct the casing of 'Retry' in parameter name 'RetryDeadlock' by changing it to 'retry'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="783">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.ExecuteText(string, bool?)' could contain the following variables 'CommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="781">Be sure to set the DataSet Locale property wherever 'DatabaseManager.ExecuteText(string, bool?)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteTextNonQuery(System.String,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="748">Replace method 'DatabaseManager.ExecuteTextNonQuery(string, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="751">In method 'DatabaseManager.ExecuteTextNonQuery(string, bool?)', call System.IDisposable.Dispose on object 'new SqlCommand(CommandText)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Command" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="748">In member 'DatabaseManager.ExecuteTextNonQuery(string, bool?)', correct the casing of 'Command' in parameter name 'CommandText' by changing it to 'command'.</Issue>
            </Message>
            <Message Id="Retry" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="748">In member 'DatabaseManager.ExecuteTextNonQuery(string, bool?)', correct the casing of 'Retry' in parameter name 'RetryDeadlock' by changing it to 'retry'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="751">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.ExecuteTextNonQuery(string, bool?)' could contain the following variables 'CommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillCommandParameters(System.Data.SqlClient.SqlCommand,System.Object,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.String[],SEIDR.DataBase.ParamStore,System.Collections.Generic.Dictionary`2&lt;System.String,System.Action`4&lt;System.Data.SqlClient.SqlParameterCollection,System.Object,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.String[]&gt;&gt;&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1129">'DatabaseManager.FillCommandParameters(SqlCommand, object, Dictionary&lt;string, object&gt;, string[], ParamStore, ref Dictionary&lt;string, Action&lt;SqlParameterCollection, object, Dictionary&lt;string, object&gt;, string[]&gt;&gt;)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1188">Modify 'DatabaseManager.FillCommandParameters(SqlCommand, object, Dictionary&lt;string, object&gt;, string[], ParamStore, ref Dictionary&lt;string, Action&lt;SqlParameterCollection, object, Dictionary&lt;string, object&gt;, string[]&gt;&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="28">Replace method 'DatabaseManager.GetBasicHelper(bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="29">In method 'DatabaseManager.GetBasicHelper(bool)', object 'h' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'h' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="64">Replace method 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="65">In method 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, bool)', object 'h' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'h' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="64">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, bool)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="79">In method 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, object, string)', object 'new DatabaseManagerHelperModel(procedureName, Keys)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel(procedureName, Keys)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="78">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, object, string)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="78">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, object, string)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="72">In method 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string)', object 'new DatabaseManagerHelperModel(null, Keys)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel(null, Keys)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="71">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="71">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedure' by changing it to 'qualified'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="71">The 'this' parameter (or 'Me' in Visual Basic) of 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="56">Replace method 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="57">In method 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string, bool)', object 'h' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'h' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="56">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string, bool)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="Unqualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="56">In member 'DatabaseManager.GetBasicHelper(Dictionary&lt;string, object&gt;, string, bool)', correct the casing of 'Unqualified' in parameter name 'UnqualifiedProcedureName' by changing it to 'unqualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Object,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="35">Replace method 'DatabaseManager.GetBasicHelper(object, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="36">In method 'DatabaseManager.GetBasicHelper(object, bool)', object 'new DatabaseManagerHelperModel()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="35">In member 'DatabaseManager.GetBasicHelper(object, bool)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBasicHelper(System.Object,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="47">Replace method 'DatabaseManager.GetBasicHelper(object, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="48">In method 'DatabaseManager.GetBasicHelper(object, string, bool)', object 'h' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'h' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Unqualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="47">In member 'DatabaseManager.GetBasicHelper(object, string, bool)', correct the casing of 'Unqualified' in parameter name 'UnqualifiedProcedureName' by changing it to 'unqualified'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="47">In member 'DatabaseManager.GetBasicHelper(object, string, bool)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConnection()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="184">Change 'DatabaseManager.GetConnection()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSqlCommand(SEIDR.DataBase.DatabaseManagerHelperModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="351">In method 'DatabaseManager.GetSqlCommand(DatabaseManagerHelperModel)', object 'new SqlCommand(proc)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new SqlCommand(proc)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="340">In method 'DatabaseManager.GetSqlCommand(DatabaseManagerHelperModel)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="351">The query string passed to 'SqlCommand.SqlCommand(string)' in 'DatabaseManager.GetSqlCommand(DatabaseManagerHelperModel)' could contain the following variables 'this._Schema', 'i.Schema', 'i.Procedure'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="341">In externally visible method 'DatabaseManager.GetSqlCommand(DatabaseManagerHelperModel)', validate parameter 'i' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IncreaseCommandTimeOut(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TimeOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="211">In member 'DatabaseManager.IncreaseCommandTimeOut(int)', the compound word 'TimeOut' in parameter name 'NewTimeOut' exists as a discrete term. If your usage is intended to be single word, case it as 'Timeout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="211">The compound word 'TimeOut' in member name 'DatabaseManager.IncreaseCommandTimeOut(int)' exists as a discrete term. If your usage is intended to be single word, case it as 'Timeout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="New" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="211">In member 'DatabaseManager.IncreaseCommandTimeOut(int)', correct the casing of 'New' in parameter name 'NewTimeOut' by changing it to 'new'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Insert`1(!!0,System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1023">Replace method 'DatabaseManager.Insert&lt;RT&gt;(RT, string, string, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1024">In method 'DatabaseManager.Insert&lt;RT&gt;(RT, string, string, string[])', call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1023">In member 'DatabaseManager.Insert&lt;RT&gt;(RT, string, string, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1023">In method 'DatabaseManager.Insert&lt;RT&gt;(RT, string, string, string[])', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1023">On method 'DatabaseManager.Insert&lt;RT&gt;(RT, string, string, string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1024">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Insert&lt;RT&gt;(RT, string, string, string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Insert`1(!!0,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="310">On method 'DatabaseManager.Insert&lt;RT&gt;(RT, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManager.InsertFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save`1(!!0,System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1003">Replace method 'DatabaseManager.Save&lt;RT&gt;(RT, string, string, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1005">In method 'DatabaseManager.Save&lt;RT&gt;(RT, string, string, string[])', call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1003">In member 'DatabaseManager.Save&lt;RT&gt;(RT, string, string, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1003">In method 'DatabaseManager.Save&lt;RT&gt;(RT, string, string, string[])', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1003">On method 'DatabaseManager.Save&lt;RT&gt;(RT, string, string, string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1005">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Save&lt;RT&gt;(RT, string, string, string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save`1(!!0,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="306">On method 'DatabaseManager.Save&lt;RT&gt;(RT, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManager.SaveFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectList`1(SEIDR.DataBase.DatabaseManagerHelperModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="963">Change 'List&lt;RT&gt;' in 'DatabaseManager.SelectList&lt;RT&gt;(DatabaseManagerHelperModel)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="963">In method 'DatabaseManager.SelectList&lt;RT&gt;(DatabaseManagerHelperModel)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="963">On method 'DatabaseManager.SelectList&lt;RT&gt;(DatabaseManagerHelperModel)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="966">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.SelectList&lt;RT&gt;(DatabaseManagerHelperModel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="964">In externally visible method 'DatabaseManager.SelectList&lt;RT&gt;(DatabaseManagerHelperModel)', validate parameter 'i' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectList`1(System.Object,System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="946">Replace method 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="947">In method 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])', call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="946">Change 'List&lt;RT&gt;' in 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="946">In member 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="946">In method 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="946">On method 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="946">In member 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])', consider replacing the data type identifier 'Obj' in parameter name 'paramObj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="947">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.SelectList&lt;RT&gt;(object, string, string, string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectList`1(System.Object,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="322">On method 'DatabaseManager.SelectList&lt;RT&gt;(object, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="322">In member 'DatabaseManager.SelectList&lt;RT&gt;(object, params string[])', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectListFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManager.SelectListFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectRowFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManager.SelectRowFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectRowWithKey(System.String,System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1116">In member 'DatabaseManager.SelectRowWithKey(string, object, string)', correct the casing of 'Key' in parameter name 'Key' by changing it to 'key'.</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1116">In member 'DatabaseManager.SelectRowWithKey(string, object, string)', correct the casing of 'Table' in parameter name 'TableOrView' by changing it to 'table'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSingle`1(SEIDR.DataBase.DatabaseManagerHelperModel,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="908">Replace method 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Commit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="908">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)', correct the casing of 'Commit' in parameter name 'CommitSuccess' by changing it to 'commit'.</Issue>
            </Message>
            <Message Id="Require" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="908">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)', correct the casing of 'Require' in parameter name 'RequireSingleResult' by changing it to 'require'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="908">In method 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="908">On method 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="910">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="909">In externally visible method 'DatabaseManager.SelectSingle&lt;RT&gt;(DatabaseManagerHelperModel, bool, bool)', validate parameter 'i' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSingle`1(System.Object,System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Require" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="326">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(object, bool, params string[])', correct the casing of 'Require' in parameter name 'RequireSingle' by changing it to 'require'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="326">In method 'DatabaseManager.SelectSingle&lt;RT&gt;(object, bool, params string[])', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="326">On method 'DatabaseManager.SelectSingle&lt;RT&gt;(object, bool, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="326">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(object, bool, params string[])', consider replacing the data type identifier 'Obj' in parameter name 'paramObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSingle`1(System.Object,System.String,System.String,System.String[],System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="934">Replace method 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Require" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="934">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)', correct the casing of 'Require' in parameter name 'RequireSingle' by changing it to 'require'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="934">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="934">In method 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="934">On method 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="934">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)', consider replacing the data type identifier 'Obj' in parameter name 'paramObj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="935">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.SelectSingle&lt;RT&gt;(object, string, string, string[], bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSingle`1(System.Object,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="328">On method 'DatabaseManager.SelectSingle&lt;RT&gt;(object, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="328">In member 'DatabaseManager.SelectSingle&lt;RT&gt;(object, params string[])', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectWithKey(System.String,System.Object,System.String,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1067">Replace method 'DatabaseManager.SelectWithKey(string, object, string, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1075">In method 'DatabaseManager.SelectWithKey(string, object, string, int, int)', object 'dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1087">In method 'DatabaseManager.SelectWithKey(string, object, string, int, int)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1097">In method 'DatabaseManager.SelectWithKey(string, object, string, int, int)', call System.IDisposable.Dispose on object 'sda' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1100">Object 'conn' can be disposed more than once in method 'DatabaseManager.SelectWithKey(string, object, string, int, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1100</Issue>
            </Message>
            <Message Id="Key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1067">In member 'DatabaseManager.SelectWithKey(string, object, string, int, int)', correct the casing of 'Key' in parameter name 'Key' by changing it to 'key'.</Issue>
            </Message>
            <Message Id="Page" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1067">In member 'DatabaseManager.SelectWithKey(string, object, string, int, int)', correct the casing of 'Page' in parameter name 'Page' by changing it to 'page'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1067">In member 'DatabaseManager.SelectWithKey(string, object, string, int, int)', correct the casing of 'Page' in parameter name 'PageSize' by changing it to 'page'.</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1067">In member 'DatabaseManager.SelectWithKey(string, object, string, int, int)', correct the casing of 'Table' in parameter name 'TableOrView' by changing it to 'table'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1091">The query string passed to 'SqlCommand.CommandText.set(string)' in 'DatabaseManager.SelectWithKey(string, object, string, int, int)' could contain the following variables 'sb'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1075">Be sure to set the DataTable Locale property wherever 'DatabaseManager.SelectWithKey(string, object, string, int, int)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1091">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.SelectWithKey(string, object, string, int, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="1077">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.SelectWithKey(string, object, string, int, int)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeOut" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TimeOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="195">The compound word 'TimeOut' in member name 'DatabaseManager.TimeOut' exists as a discrete term. If your usage is intended to be single word, case it as 'Timeout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update`1(!!0,System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="992">Replace method 'DatabaseManager.Update&lt;RT&gt;(RT, string, string, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="993">In method 'DatabaseManager.Update&lt;RT&gt;(RT, string, string, string[])', call System.IDisposable.Dispose on object 'new DatabaseManagerHelperModel()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="992">In member 'DatabaseManager.Update&lt;RT&gt;(RT, string, string, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="992">In method 'DatabaseManager.Update&lt;RT&gt;(RT, string, string, string[])', correct the spelling of 'param' in parameter name 'paramObj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="992">On method 'DatabaseManager.Update&lt;RT&gt;(RT, string, string, string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="993">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DatabaseManager.Update&lt;RT&gt;(RT, string, string, string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update`1(!!0,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManager.cs" Line="314">On method 'DatabaseManager.Update&lt;RT&gt;(RT, params string[])', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManager.UpdateFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseManagerExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetGetters(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="t" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="35">In method 'DatabaseManagerExtensions.GetGetters(this Type)', consider providing a more meaningful name than parameter name 't'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="36">In externally visible method 'DatabaseManagerExtensions.GetGetters(this Type)', validate parameter 't' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMappedName(System.Reflection.PropertyInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="23">Consider changing the type of parameter 'prop' in 'DatabaseManagerExtensions.GetMappedName(this PropertyInfo)' from 'PropertyInfo' to its base type 'MemberInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="26">In externally visible method 'DatabaseManagerExtensions.GetMappedName(this PropertyInfo)', validate parameter 'prop' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MappingIgnored(System.Reflection.PropertyInfo,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="48">Consider changing the type of parameter 'prop' in 'DatabaseManagerExtensions.MappingIgnored(this PropertyInfo, bool)' from 'PropertyInfo' to its base type 'MemberInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseManagerFieldMappingAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'DatabaseManagerFieldMappingAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'Map' of Attribute 'DatabaseManagerFieldMappingAttribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Map" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="106">In member 'DatabaseManagerFieldMappingAttribute.DatabaseManagerFieldMappingAttribute(string)', correct the casing of 'Map' in parameter name 'Map' by changing it to 'map'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MappedName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManagerFieldMappingAttribute.MappedName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseManagerHelperModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedure' by changing it to 'qualified'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Object,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="143">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="143">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="143">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Object,System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="146">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="146">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="146">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="146">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Object,System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ignore" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;, params string[])', correct the casing of 'Ignore' in parameter name 'Ignore' by changing it to 'ignore'.</Issue>
            </Message>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;, params string[])', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;, params string[])', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;, params string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="23">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string, Dictionary&lt;string, object&gt;, params string[])', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Object,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ignore" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="134">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string[])', correct the casing of 'Ignore' in parameter name 'Ignore' by changing it to 'ignore'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="134">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="134">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(object, string, string[])', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Unqualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="94">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string)', correct the casing of 'Unqualified' in parameter name 'UnqualifiedProcedure' by changing it to 'unqualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="110">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, Dictionary&lt;string, object&gt;)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="Unqualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="110">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, Dictionary&lt;string, object&gt;)', correct the casing of 'Unqualified' in parameter name 'UnqualifiedProcedureName' by changing it to 'unqualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Unqualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="116">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, object)', correct the casing of 'Unqualified' in parameter name 'UnqualifiedProcedure' by changing it to 'unqualified'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="116">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, object)', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="98">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, string)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Keys" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="104">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, string, Dictionary&lt;string, object&gt;)', correct the casing of 'Keys' in parameter name 'Keys' by changing it to 'keys'.</Issue>
            </Message>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="104">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, string, Dictionary&lt;string, object&gt;)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Object,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="132">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, string, object, string[])', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="132">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, string, object, string[])', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="132">In member 'DatabaseManagerHelperModel.DatabaseManagerHelperModel(string, string, object, string[])', consider replacing the data type identifier 'Obj' in parameter name 'mapObj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddDataRowAsKeys(System.Data.DataRow)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="183">In method 'DatabaseManagerHelperModel.AddDataRowAsKeys(DataRow)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="184">In externally visible method 'DatabaseManagerHelperModel.AddDataRowAsKeys(DataRow)', validate parameter 'r' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddKey(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="205">In member 'DatabaseManagerHelperModel.AddKey(string, object)', correct the casing of 'Name' in parameter name 'Name' by changing it to 'name'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Item(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="308">In externally visible method 'DatabaseManagerHelperModel.this.get(string)', validate parameter 'key' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Item(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="317">In externally visible method 'DatabaseManagerHelperModel.this.set(string, object)', validate parameter 'key' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OpenConnection(SEIDR.DataBase.DatabaseManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="367">In method 'DatabaseManagerHelperModel.OpenConnection(DatabaseManager)', correct the spelling of 'dm' in parameter name 'dm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParameterMap" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatabaseManagerHelperModel.ParameterMap' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyIgnore" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="294">Change 'List&lt;string&gt;' in 'DatabaseManagerHelperModel.PropertyIgnore' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QualifiedProcedure" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_QualifiedProcedure(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="239">In externally visible method 'DatabaseManagerHelperModel.QualifiedProcedure.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#RemoveKey(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="217">In member 'DatabaseManagerHelperModel.RemoveKey(string)', correct the casing of 'Key' in parameter name 'Key' by changing it to 'key'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetDeadlockLimit(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="52">Replace method 'DatabaseManagerHelperModel.ResetDeadlockLimit(bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetKeys(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="164">Replace method 'DatabaseManagerHelperModel.ResetKeys(Dictionary&lt;string, object&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Parameter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="164">In member 'DatabaseManagerHelperModel.ResetKeys(Dictionary&lt;string, object&gt;)', correct the casing of 'Parameter' in parameter name 'ParameterKeys' by changing it to 'parameter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Savepoint" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Savepoint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="68">Correct the spelling of 'Savepoint' in member name 'DatabaseManagerHelperModel.Savepoint' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetConnection(SEIDR.DataBase.DatabaseManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="344">In method 'DatabaseManagerHelperModel.SetConnection(DatabaseManager)', correct the spelling of 'dm' in parameter name 'dm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetKey(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="192">In member 'DatabaseManagerHelperModel.SetKey(string, object)', correct the casing of 'Name' in parameter name 'Name' by changing it to 'name'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPropertyIgnore(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerHelperModel.cs" Line="155">In member 'DatabaseManagerHelperModel.SetPropertyIgnore(params string[])', correct the casing of 'Property' in parameter name 'PropertyList' by changing it to 'property'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseManagerIgnoreMappingAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'DatabaseManagerIgnoreMappingAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'directionToIgnore' of Attribute 'DatabaseManagerIgnoreMappingAttribute'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'DatabaseManagerIgnoreMappingAttribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ignoreReadOut" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ReadOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="70">The compound word 'ReadOut' in member name 'DatabaseManagerIgnoreMappingAttribute.ignoreReadOut' exists as a discrete term. If your usage is intended to be single word, case it as 'Readout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="ignore" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="70">Correct the casing of 'ignore' in member name 'DatabaseManagerIgnoreMappingAttribute.ignoreReadOut' by changing it to 'Ignore'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ignoreSet" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ignore" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseManagerExtensions.cs" Line="66">Correct the casing of 'ignore' in member name 'DatabaseManagerIgnoreMappingAttribute.ignoreSet' by changing it to 'Ignore'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseManagerIgnoreOutParameterAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'DatabaseManagerIgnoreOutParameterAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'DatabaseManagerIgnoreOutParameterAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DatabaseObject" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'DatabaseObject' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CloneConnection(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.cs" Line="34">Replace method 'DatabaseObject.CloneConnection(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatabaseObject`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'DatabaseObject&lt;RT&gt;' to protected.</Issue>
          </Message>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'DatabaseObject&lt;RT&gt;', prefix generic type parameter name 'RT' with 'T'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.DataBase.DatabaseManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dbm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="21">In method 'DatabaseObject&lt;RT&gt;.DatabaseObject(DatabaseManager)', correct the spelling of 'dbm' in parameter name 'dbm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteProcedure(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="31">In member 'DatabaseObject&lt;RT&gt;.ExecuteProcedure(string)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedure' by changing it to 'qualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteProcedure(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="46">In member 'DatabaseObject&lt;RT&gt;.ExecuteProcedure(string, string)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="46">In member 'DatabaseObject&lt;RT&gt;.ExecuteProcedure(string, string)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetList(SEIDR.DataBase.DatabaseManager,SEIDR.DataBase.DatabaseManagerHelperModel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="105">Remove 'DatabaseObject&lt;RT&gt;.GetList(DatabaseManager, DatabaseManagerHelperModel)' from 'DatabaseObject&lt;RT&gt;' or make it an instance member.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="105">Change 'List&lt;RT&gt;' in 'DatabaseObject&lt;RT&gt;.GetList(DatabaseManager, DatabaseManagerHelperModel)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="106">In externally visible method 'DatabaseObject&lt;RT&gt;.GetList(DatabaseManager, DatabaseManagerHelperModel)', validate parameter 'manager' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRecord(SEIDR.DataBase.DatabaseManager,SEIDR.DataBase.DatabaseManagerHelperModel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="93">Remove 'DatabaseObject&lt;RT&gt;.GetRecord(DatabaseManager, DatabaseManagerHelperModel)' from 'DatabaseObject&lt;RT&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="94">In externally visible method 'DatabaseObject&lt;RT&gt;.GetRecord(DatabaseManager, DatabaseManagerHelperModel)', validate parameter 'manager' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRow(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="121">In member 'DatabaseObject&lt;RT&gt;.GetRow(string)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedure' by changing it to 'qualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRow(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="129">In member 'DatabaseObject&lt;RT&gt;.GetRow(string, string)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="129">In member 'DatabaseObject&lt;RT&gt;.GetRow(string, string)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PassToProcedure(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="53">In member 'DatabaseObject&lt;RT&gt;.PassToProcedure(string)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedure' by changing it to 'qualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PassToProcedure(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="70">In member 'DatabaseObject&lt;RT&gt;.PassToProcedure(string, string)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="70">In member 'DatabaseObject&lt;RT&gt;.PassToProcedure(string, string)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PassToProcedureForTable(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Qualified" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="77">In member 'DatabaseObject&lt;RT&gt;.PassToProcedureForTable(string)', correct the casing of 'Qualified' in parameter name 'QualifiedProcedure' by changing it to 'qualified'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PassToProcedureForTable(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Procedure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="84">In member 'DatabaseObject&lt;RT&gt;.PassToProcedureForTable(string, string)', correct the casing of 'Procedure' in parameter name 'Procedure' by changing it to 'procedure'.</Issue>
            </Message>
            <Message Id="Schema" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="DatabaseObject.Methods.cs" Line="84">In member 'DatabaseObject&lt;RT&gt;.PassToProcedureForTable(string, string)', correct the casing of 'Schema' in parameter name 'Schema' by changing it to 'schema'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ParamStore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Param' in type name 'ParamStore'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#FillParameterCollection(System.Data.SqlClient.SqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="ParamStore.cs" Line="50">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ParamStore.FillParameterCollection(SqlCommand)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="ParamStore.cs" Line="42">In externally visible method 'ParamStore.FillParameterCollection(SqlCommand)', validate parameter 'cmd' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove(System.Data.SqlClient.SqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="ParamStore.cs" Line="27">Consider changing the type of parameter 'cmd' in 'ParamStore.Remove(SqlCommand)' from 'SqlCommand' to its base type 'DbCommand'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="ParamStore.cs" Line="28">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ParamStore.Remove(SqlCommand)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="ParamStore.cs" Line="28">In externally visible method 'ParamStore.Remove(SqlCommand)', validate parameter 'cmd' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.DataBase.Schema">
       <Types>
        <Type Name="COLUMN" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(System.String,System.Type,System.Byte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="292">'COLUMN.COLUMN(string, Type, byte)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FOREIGN_KEY" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'FOREIGN_KEY' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="QualifiedForeignTable" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="250">Parameter 'QualifiedForeignTable' of 'FOREIGN_KEY.FOREIGN_KEY(string, string, params string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="UnqualifiedTableOwner" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="250">Parameter 'UnqualifiedTableOwner' of 'FOREIGN_KEY.FOREIGN_KEY(string, string, params string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String[],System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="QualifiedForeignTable" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="257">Parameter 'QualifiedForeignTable' of 'FOREIGN_KEY.FOREIGN_KEY(string, string, string[], string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="UnqualifiedTableOwner" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="257">Parameter 'UnqualifiedTableOwner' of 'FOREIGN_KEY.FOREIGN_KEY(string, string, string[], string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PRIMARY_KEY" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ADD_SCRIPT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ADD_SCRIPT()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="274">'PRIMARY_KEY.ADD_SCRIPT.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#KeyCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_KeyCount()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="273">'PRIMARY_KEY.KeyCount.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SingleCol" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_SingleCol()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="271">'PRIMARY_KEY.SingleCol.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Schema" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'Schema' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Schema' conflicts in whole or in part with the namespace name 'System.Xml.Schema' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#TryConvertDBType(System.Type,System.Data.SqlDbType&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Converted" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="17">In member 'Schema.TryConvertDBType(Type, out SqlDbType)', correct the casing of 'Converted' in parameter name 'Converted' by changing it to 'converted'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TABLE" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#cols" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_cols(System.Collections.Generic.List`1&lt;SEIDR.DataBase.Schema.COLUMN&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="178">'TABLE.cols.set(List&lt;COLUMN&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#fks" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_fks(System.Collections.Generic.IEnumerable`1&lt;SEIDR.DataBase.Schema.FOREIGN_KEY&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="177">'TABLE.fks.set(IEnumerable&lt;FOREIGN_KEY&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FromObject(System.Object,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="180">'TABLE.FromObject(object, string, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCreateTableScript()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="210">'TABLE.GetCreateTableScript()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Byte.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="219">Because the behavior of 'byte.ToString()' could vary based on the current user's locale settings, replace this call in 'TABLE.GetCreateTableScript()' with a call to 'byte.ToString(IFormatProvider)'. If the result of 'byte.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="232">Because the behavior of 'byte.ToString()' could vary based on the current user's locale settings, replace this call in 'TABLE.GetCreateTableScript()' with a call to 'byte.ToString(IFormatProvider)'. If the result of 'byte.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="232">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'TABLE.GetCreateTableScript()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IS_HEAP" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_IS_HEAP()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="137">'TABLE.IS_HEAP.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Name" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Name(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="148">'TABLE.Name.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Schema" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Schema(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\DataBase" File="Schema.cs" Line="161">'TABLE.Schema.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.Doc">
       <Types>
        <Type Name="ColumnDateFormatter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="51">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ColumnDateFormatter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="51">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ColumnDateFormatter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="51">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ColumnDateFormatter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="69">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ColumnDateFormatter(params string[])' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="69">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ColumnDateFormatter(params string[])' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="69">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ColumnDateFormatter(params string[])' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="61">In externally visible method 'ColumnDateFormatter.ColumnDateFormatter(params string[])', validate parameter 'names' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkSanity" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ColumnDateFormatter.checkSanity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getFormat(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="139">Correct the casing of 'get' in member name 'ColumnDateFormatter.getFormat(int)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="143">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.getFormat(int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getFormat(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="123">Correct the casing of 'get' in member name 'ColumnDateFormatter.getFormat(string)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="126">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.getFormat(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="126">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.getFormat(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="126">In externally visible method 'ColumnDateFormatter.getFormat(string)', validate parameter 'columnName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Item(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="83">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.this.get(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="83">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.this.get(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="83">In externally visible method 'ColumnDateFormatter.this.get(string)', validate parameter 'column' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ParseFormat(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="172">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ParseFormat(string, int)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="172">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ColumnDateFormatter.ParseFormat(string, int)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="172">In externally visible method 'ColumnDateFormatter.ParseFormat(string, int)', validate parameter 'original' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseOnce(System.String,System.DateTime&amp;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="291">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="291">Replace method 'ColumnDateFormatter.ParseOnce(string, out DateTime, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Sanity" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="291">In member 'ColumnDateFormatter.ParseOnce(string, out DateTime, bool)', correct the casing of 'Sanity' in parameter name 'SanityCheck' by changing it to 'sanity'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseString(System.Int32,System.String,System.DateTime&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="240">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="254">In externally visible method 'ColumnDateFormatter.ParseString(int, string, out DateTime)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseString(System.String,System.String,System.DateTime&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="226">Consider a design that does not require that 'result' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#size" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="size" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ColumnDateFormatter.cs" Line="36">Correct the casing of 'size' in member name 'ColumnDateFormatter.size' by changing it to 'Size'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ColumnOverflowException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'ColumnOverflowException': protected ColumnOverflowException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'ColumnOverflowException': public ColumnOverflowException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'ColumnOverflowException': public ColumnOverflowException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'ColumnOverflowException': public ColumnOverflowException(String, Exception).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'ColumnOverflowException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="28">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnOverflowException.ColumnOverflowException(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="28">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnOverflowException.ColumnOverflowException(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Expected" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="24">In member 'ColumnOverflowException.ColumnOverflowException(int, int, int)', correct the casing of 'Expected' in parameter name 'ExpectedColumnCount' by changing it to 'expected'.</Issue>
            </Message>
            <Message Id="Record" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="24">In member 'ColumnOverflowException.ColumnOverflowException(int, int, int)', correct the casing of 'Record' in parameter name 'RecordLength' by changing it to 'record'.</Issue>
            </Message>
            <Message Id="ExpectedColumnCount+1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="38">Correct the potential overflow in the operation 'ExpectedColumnCount+1' in 'ColumnOverflowException.ColumnOverflowException(int, int, int)'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="34">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnOverflowException.ColumnOverflowException(int, int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="34">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnOverflowException.ColumnOverflowException(int, int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="MissingColumnException.cs" Line="34">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ColumnOverflowException.ColumnOverflowException(int, int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedDocumentReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'DelimitedDocumentReader' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32,System.String,System.Nullable`1&lt;System.Char&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="261">In method 'DelimitedDocumentReader.DelimitedDocumentReader(int, string, char?)', object 'new FileReader(FilePath, false)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new FileReader(FilePath, false)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Int32,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="144">Replace method 'DelimitedDocumentReader.DelimitedDocumentReader(string, int, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="279">In method 'DelimitedDocumentReader.DelimitedDocumentReader(string, int, string[])', object 'new FileReader(FilePath)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new FileReader(FilePath)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="294">Modify 'DelimitedDocumentReader.DelimitedDocumentReader(string, int, string[])' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="144">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, int, string[])', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Header" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="144">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, int, string[])', correct the casing of 'Header' in parameter name 'Header' by changing it to 'header'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Nullable`1&lt;System.Char&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="320">Replace method 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="320">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, int)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="320">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, int)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Nullable`1&lt;System.Char&gt;,System.String[],System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="348">Replace method 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, string[], int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="348">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, string[], int)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="Filepath" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="348">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, string[], int)', correct the casing of 'Filepath' in parameter name 'Filepath' by changing it to 'filepath'.</Issue>
            </Message>
            <Message Id="Header" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="348">In member 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, string[], int)', correct the casing of 'Header' in parameter name 'Header' by changing it to 'header'.</Issue>
            </Message>
            <Message Id="Filepath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="348">In method 'DelimitedDocumentReader.DelimitedDocumentReader(string, char?, string[], int)', correct the spelling of 'Filepath' in parameter name 'Filepath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddHeader(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="246">'DelimitedDocumentReader.AddHeader(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="Header" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="244">In member 'DelimitedDocumentReader.AddHeader(string)', correct the casing of 'Header' in parameter name 'Header' by changing it to 'header'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ALIAS" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DelimitedDocumentReader.ALIAS' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPage" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="71">Change 'DelimitedDocumentReader.CurrentPage' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EMPTY" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EMPTY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="19">Correct the casing of 'EMPTY' in member name 'DelimitedDocumentReader.EMPTY' by changing it to 'Empty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHeader(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="36">Replace method 'DelimitedDocumentReader.GetHeader(bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHeader(System.Char,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="170">Replace method 'DelimitedDocumentReader.GetHeader(char, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#maxRecord" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="231">Correct the casing of 'max' in member name 'DelimitedDocumentReader.maxRecord' by changing it to 'Max'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#minRecord" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="227">Correct the casing of 'min' in member name 'DelimitedDocumentReader.minRecord' by changing it to 'Min'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="SameType" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="150">The property name 'DelimitedDocumentReader.Page' is confusing given the existence of method 'DelimitedDocumentReader.GetPage(int)'. Rename or remove one of these members.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pageRecordCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="page" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="223">Correct the casing of 'page' in member name 'DelimitedDocumentReader.pageRecordCount' by changing it to 'Page'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PageSize" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_PageSize(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
               <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="213">'DelimitedDocumentReader.PageSize.set(int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Reset()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="57">In method 'DelimitedDocumentReader.Reset()', object 'new FileReader(f)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new FileReader(f)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedDocumentWriter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'DelimitedDocumentWriter' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="53">Replace method 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, bool, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Append" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="53">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, bool, string[])', correct the casing of 'Append' in parameter name 'AppendIfExists' by changing it to 'append'.</Issue>
            </Message>
            <Message Id="Filepath" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="53">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, bool, string[])', correct the casing of 'Filepath' in parameter name 'Filepath' by changing it to 'filepath'.</Issue>
            </Message>
            <Message Id="Header" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="53">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, bool, string[])', correct the casing of 'Header' in parameter name 'HeaderList' by changing it to 'header'.</Issue>
            </Message>
            <Message Id="Filepath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="53">In method 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, bool, string[])', correct the spelling of 'Filepath' in parameter name 'Filepath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Char,System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="25">Replace method 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, bool, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Append" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="25">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, bool, string[])', correct the casing of 'Append' in parameter name 'AppendIfExists' by changing it to 'append'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="25">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, bool, string[])', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Header" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="25">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, bool, string[])', correct the casing of 'Header' in parameter name 'HeaderList' by changing it to 'header'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Char,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="39">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, string[])', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="Headers" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="39">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, string[])', correct the casing of 'Headers' in parameter name 'Headers' by changing it to 'headers'.</Issue>
            </Message>
            <Message Id="filepath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="39">In method 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, char, string[])', correct the spelling of 'filepath' in parameter name 'filepath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="66">Replace method 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="66">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, string[])', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Header" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="66">In member 'DelimitedDocumentWriter.DelimitedDocumentWriter(string, string[])', correct the casing of 'Header' in parameter name 'HeaderList' by changing it to 'header'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRecord(SEIDR.Doc.DelimitedRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="117">In externally visible method 'DelimitedDocumentWriter.AddRecord(DelimitedRecord)', validate parameter 'record' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRecordBatch(SEIDR.Doc.DelimitedRecord[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="128">In externally visible method 'DelimitedDocumentWriter.AddRecordBatch(params DelimitedRecord[])', validate parameter 'recordBatch' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRecordMerge(SEIDR.Doc.DelimitedRecord[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="102">Method 'DelimitedDocumentWriter.AddRecordMerge(params DelimitedRecord[])' passes parameter name 'toMerge' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="102">Method 'DelimitedDocumentWriter.AddRecordMerge(params DelimitedRecord[])' passes 'No Records to add!' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="101">In externally visible method 'DelimitedDocumentWriter.AddRecordMerge(params DelimitedRecord[])', validate parameter 'toMerge' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delimiter" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DelimitedDocumentWriter.Delimiter' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="140">Change 'DelimitedDocumentWriter.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="140">Modify 'DelimitedDocumentWriter.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Flush(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="166">In method 'DelimitedDocumentWriter.Flush(bool)', call System.IDisposable.Dispose on object 'File.Create(this.filePath)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Header" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="16">Change 'DelimitedDocumentWriter.Header' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxBatchSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DelimitedDocumentWriter.MaxBatchSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reset(System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="191">Replace method 'DelimitedDocumentWriter.Reset(bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="201">In method 'DelimitedDocumentWriter.Reset(bool?)', call System.IDisposable.Dispose on object 'File.Create(this.filePath)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Include" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentWriter.cs" Line="191">In member 'DelimitedDocumentWriter.Reset(bool?)', correct the casing of 'Include' in parameter name 'IncludeHeader' by changing it to 'include'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedFileIndexInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="38">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="42">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Nullable`1&lt;System.Char&gt;,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="54">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, char?, params string[])', correct the casing of 'Column' in parameter name 'ColumnList' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="54">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, char?, params string[])', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="Index" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="54">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, char?, params string[])', correct the casing of 'Index' in parameter name 'IndexFilePath' by changing it to 'index'.</Issue>
            </Message>
            <Message Id="Raw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="54">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, char?, params string[])', correct the casing of 'Raw' in parameter name 'RawFilePath' by changing it to 'raw'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="67">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, params string[])', correct the casing of 'Column' in parameter name 'ColumnList' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Index" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="67">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, params string[])', correct the casing of 'Index' in parameter name 'IndexFilePath' by changing it to 'index'.</Issue>
            </Message>
            <Message Id="Raw" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="67">In member 'DelimitedFileIndexInfo.DelimitedFileIndexInfo(string, string, params string[])', correct the casing of 'Raw' in parameter name 'RawFilePath' by changing it to 'raw'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Columns" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="34">Change 'DelimitedFileIndexInfo.Columns' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FILE_EXTENSION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXTENSION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXTENSION' in member name 'DelimitedFileIndexInfo.FILE_EXTENSION' by changing it to 'Extension'.</Issue>
            </Message>
            <Message Id="FILE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FILE' in member name 'DelimitedFileIndexInfo.FILE_EXTENSION' by changing it to 'File'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DelimitedFileIndexInfo.FILE_EXTENSION'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedIndex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'DelimitedIndex' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'DelimitedIndex' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DelimitedFileIndexInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="159">In externally visible method 'DelimitedIndex.DelimitedIndex(DelimitedFileIndexInfo)', validate parameter 'setupInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Index" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="94">In member 'DelimitedIndex.DelimitedIndex(string)', correct the casing of 'Index' in parameter name 'IndexFile' by changing it to 'index'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateIndex()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="271">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DelimitedIndex.CreateIndex()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="272">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DelimitedIndex.CreateIndex()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="197">Change 'DelimitedIndex.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="197">Modify 'DelimitedIndex.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetFilter(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedIndex.cs" Line="119">In externally visible method 'DelimitedIndex.SetFilter(Dictionary&lt;string, string&gt;)', validate parameter 'filters' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedRecord" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocRecordColumnInfo[],System.Nullable`1&lt;System.Char&gt;,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Delimiter" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="486">Parameter 'Delimiter' of 'DelimitedRecord.DelimitedRecord(DocRecordColumnInfo[], char?, string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String[],System.Nullable`1&lt;System.Char&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="501">In externally visible method 'DelimitedRecord.DelimitedRecord(string[], char?)', validate parameter 'Content' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String[],System.String,System.Int32,System.Nullable`1&lt;System.Char&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="544">In externally visible method 'DelimitedRecord.DelimitedRecord(string[], string, int, char?, string)', validate parameter 'Header' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String[],System.String[],System.Int32,System.Nullable`1&lt;System.Char&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="519">In externally visible method 'DelimitedRecord.DelimitedRecord(string[], string[], int, char?, string)', validate parameter 'Header' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddColumn(SEIDR.Doc.DocRecordColumnInfo,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="338">In externally visible method 'DelimitedRecord.AddColumn(DocRecordColumnInfo, string)', validate parameter 'Column' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToType`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="573">Because the behavior of 'Convert.ChangeType(object, Type)' could vary based on the current user's locale settings, replace this call in 'DelimitedRecord.ConvertToType&lt;T&gt;()' with a call to 'Convert.ChangeType(object, Type, IFormatProvider)'. If the result of 'Convert.ChangeType(object, Type, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="584">Because the behavior of 'Convert.ChangeType(object, Type)' could vary based on the current user's locale settings, replace this call in 'DelimitedRecord.ConvertToType&lt;T&gt;()' with a call to 'Convert.ChangeType(object, Type, IFormatProvider)'. If the result of 'Convert.ChangeType(object, Type, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPartialHash(System.Boolean,System.Boolean,System.Boolean,SEIDR.Doc.DocRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="174">In externally visible method 'DelimitedRecord.GetPartialHash(bool, bool, bool, params DocRecordColumnInfo[])', validate parameter 'columnsToHash' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPartialHash(System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="143">In externally visible method 'DelimitedRecord.GetPartialHash(bool, params string[])', validate parameter 'columnsToHash' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSubset(SEIDR.Doc.DelimitedRecord,System.Collections.Generic.IList`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="464">In externally visible method 'DelimitedRecord.GetSubset(DelimitedRecord, IList&lt;DocRecordColumnInfo&gt;)', validate parameter 'work' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="464">In externally visible method 'DelimitedRecord.GetSubset(DelimitedRecord, IList&lt;DocRecordColumnInfo&gt;)', validate parameter 'columns' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValue`1(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ChangeType(System.Object,System.TypeCode)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="394">Because the behavior of 'Convert.ChangeType(object, TypeCode)' could vary based on the current user's locale settings, replace this call in 'DelimitedRecord.GetValue&lt;T&gt;(int)' with a call to 'Convert.ChangeType(object, TypeCode, IFormatProvider)'. If the result of 'Convert.ChangeType(object, TypeCode, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValue`1(System.String,System.String,!!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="372">Because the behavior of 'Convert.ChangeType(object, Type)' could vary based on the current user's locale settings, replace this call in 'DelimitedRecord.GetValue&lt;T&gt;(string, string, T)' with a call to 'Convert.ChangeType(object, Type, IFormatProvider)'. If the result of 'Convert.ChangeType(object, Type, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Merge(SEIDR.Doc.DelimitedRecord,SEIDR.Doc.DelimitedRecord)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="420">Method 'DelimitedRecord.Merge(DelimitedRecord, DelimitedRecord)' passes parameter name 'left' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="422">Method 'DelimitedRecord.Merge(DelimitedRecord, DelimitedRecord)' passes parameter name 'right' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="420">Method 'DelimitedRecord.Merge(DelimitedRecord, DelimitedRecord)' passes 'Not set up for using headers!' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="422">Method 'DelimitedRecord.Merge(DelimitedRecord, DelimitedRecord)' passes 'Not set up for using headers!' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="424">In externally visible method 'DelimitedRecord.Merge(DelimitedRecord, DelimitedRecord)', validate parameter 'left' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="424">In externally visible method 'DelimitedRecord.Merge(DelimitedRecord, DelimitedRecord)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MergeEmpty(System.Collections.Generic.IList`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;,SEIDR.Doc.DelimitedRecord)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="444">Method 'DelimitedRecord.MergeEmpty(IList&lt;DocRecordColumnInfo&gt;, DelimitedRecord)' passes parameter name 'record' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="444">Method 'DelimitedRecord.MergeEmpty(IList&lt;DocRecordColumnInfo&gt;, DelimitedRecord)' passes 'Not set up for using headers!' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="445">In externally visible method 'DelimitedRecord.MergeEmpty(IList&lt;DocRecordColumnInfo&gt;, DelimitedRecord)', validate parameter 'columns' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="445">In externally visible method 'DelimitedRecord.MergeEmpty(IList&lt;DocRecordColumnInfo&gt;, DelimitedRecord)', validate parameter 'record' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SEIDR.Doc.IRecord.Item[System.Int32]" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#SEIDR.Doc.IRecord.set_Item(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="249">Make 'DelimitedRecord' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IRecord.this.set(int, string)' and is visible to derived classes.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SEIDR.Doc.IRecord.Item[System.String,System.String]" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#SEIDR.Doc.IRecord.set_Item(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedRecord.cs" Line="254">Make 'DelimitedRecord' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IRecord.this.set(string, string, string)' and is visible to derived classes.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DocExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddAttributes(System.IO.FileInfo,System.IO.FileAttributes[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="181">Consider changing the type of parameter 'f' in 'DocExtensions.AddAttributes(this FileInfo, params FileAttributes[])' from 'FileInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="Attributes" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="181">In member 'DocExtensions.AddAttributes(this FileInfo, params FileAttributes[])', correct the casing of 'Attributes' in parameter name 'AttributesToAdd' by changing it to 'attributes'.</Issue>
            </Message>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="181">In method 'DocExtensions.AddAttributes(this FileInfo, params FileAttributes[])', consider providing a more meaningful name than parameter name 'f'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="182">In externally visible method 'DocExtensions.AddAttributes(this FileInfo, params FileAttributes[])', validate parameter 'f' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeSerializeFile`1(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DeSerialize" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="36">The compound word 'DeSerialize' in member name 'DocExtensions.DeSerializeFile&lt;RT&gt;(string)' exists as a discrete term. If your usage is intended to be single word, case it as 'Deserialize' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="De" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="36">Correct the casing of 'De' in member name 'DocExtensions.DeSerializeFile&lt;RT&gt;(string)' by changing it to 'DE'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="36">In member 'DocExtensions.DeSerializeFile&lt;RT&gt;(string)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="36">On method 'DocExtensions.DeSerializeFile&lt;RT&gt;(string)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeserializeXML`1(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="67">Correct the casing of 'XML' in member name 'DocExtensions.DeserializeXML&lt;RT&gt;(this string)' by changing it to 'Xml'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="67">In member 'DocExtensions.DeserializeXML&lt;RT&gt;(this string)', correct the casing of 'XML' in parameter name 'XML' by changing it to 'xml'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="67">On method 'DocExtensions.DeserializeXML&lt;RT&gt;(this string)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileDate(SEIDR.Doc.DocMetaData,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="metaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="379">In member 'DocExtensions.GetFileDate(this DocMetaData, string)', the compound word 'metaData' in parameter name 'metaData' exists as a discrete term. If your usage is intended to be single word, case it as 'metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="380">In externally visible method 'DocExtensions.GetFileDate(this DocMetaData, string)', validate parameter 'metaData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileHash(System.IO.FileInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="149">Consider changing the type of parameter 'file' in 'DocExtensions.GetFileHash(this FileInfo)' from 'FileInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="150">In externally visible method 'DocExtensions.GetFileHash(this FileInfo)', validate parameter 'file' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileHash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="166">In method 'DocExtensions.GetFileHash(this string)', call System.IDisposable.Dispose on object 'new SHA512Managed()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileName(System.String,System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dOffset" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="244">'DocExtensions.GetFileName(this string, DateTime)' declares a variable, 'dOffset', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="278">'DocExtensions.GetFileName(this string, DateTime)' declares a variable, 'dOffset', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="229">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="251">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="252">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="253">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="285">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="286">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="287">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="306">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="231">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="234">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="238">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="241">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="245">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="248">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="265">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="268">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="272">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="275">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="279">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="282">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.GetFileName(this string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileSize(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="200">In member 'DocExtensions.GetFileSize(this string)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GuessDelimiter(System.Collections.Generic.IList`1&lt;System.String&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="105">Replace method 'DocExtensions.GuessDelimiter(this IList&lt;string&gt;, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="106">In externally visible method 'DocExtensions.GuessDelimiter(this IList&lt;string&gt;, int)', validate parameter 'lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GuessDelimiter(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="89">In externally visible method 'DocExtensions.GuessDelimiter(this string)', validate parameter 'line' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseDate(System.String,System.String,System.DateTime&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="397">Consider a design that does not require that 'FileDate' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="490">Modify 'DocExtensions.ParseDate(this string, string, out DateTime)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="397">In member 'DocExtensions.ParseDate(this string, string, out DateTime)', correct the casing of 'File' in parameter name 'FileDate' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="403">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="404">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="437">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="455">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="416">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="426">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="424">Replace the call to 'string.operator !=(string, string)' in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="412">Replace the call to 'string.operator ==(string, string)' in 'DocExtensions.ParseDate(this string, string, out DateTime)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="403">In externally visible method 'DocExtensions.ParseDate(this string, string, out DateTime)', validate parameter 'fileName' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="401">In externally visible method 'DocExtensions.ParseDate(this string, string, out DateTime)', validate parameter 'dateFormat' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseDateRegex(System.String,System.String,System.DateTime&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="329">Consider a design that does not require that 'fileDate' be a reference parameter.</Issue>
            </Message>
            <Message Id="td" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="342">'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' declares a variable, 'td', of type 'DateTime', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="362">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="363">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="364">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="344">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="347">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="351">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="354">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="357">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="360">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="341">In externally visible method 'DocExtensions.ParseDateRegex(this string, string, ref DateTime)', validate parameter 'dateFormat' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveAttributes(System.IO.FileInfo,System.IO.FileAttributes[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="193">Consider changing the type of parameter 'f' in 'DocExtensions.RemoveAttributes(this FileInfo, params FileAttributes[])' from 'FileInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="193">In method 'DocExtensions.RemoveAttributes(this FileInfo, params FileAttributes[])', consider providing a more meaningful name than parameter name 'f'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="194">In externally visible method 'DocExtensions.RemoveAttributes(this FileInfo, params FileAttributes[])', validate parameter 'f' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerializeToFile(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="22">In member 'DocExtensions.SerializeToFile(this object, string)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="23">In externally visible method 'DocExtensions.SerializeToFile(this object, string)', validate parameter 'toFile' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerializeToXML(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="51">Correct the casing of 'XML' in member name 'DocExtensions.SerializeToXML(this object)' by changing it to 'Xml'.</Issue>
            </Message>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="53">Because the behavior of 'StringWriter.StringWriter()' could vary based on the current user's locale settings, replace this call in 'DocExtensions.SerializeToXML(this object)' with a call to 'StringWriter.StringWriter(IFormatProvider)'. If the result of 'StringWriter.StringWriter(IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="52">In externally visible method 'DocExtensions.SerializeToXML(this object)', validate parameter 'toString' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitOutsideQuotes(System.String,System.Char,System.Char)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="517">Replace method 'DocExtensions.SplitOutsideQuotes(this string, char, char)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="517">In member 'DocExtensions.SplitOutsideQuotes(this string, char, char)', correct the casing of 'Text' in parameter name 'TextQual' by changing it to 'text'.</Issue>
            </Message>
            <Message Id="Qual" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="517">In method 'DocExtensions.SplitOutsideQuotes(this string, char, char)', correct the spelling of 'Qual' in parameter name 'TextQual' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="519">In externally visible method 'DocExtensions.SplitOutsideQuotes(this string, char, char)', validate parameter 'line' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitOutsideQuotes(System.String,System.Char,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="542">In member 'DocExtensions.SplitOutsideQuotes(this string, char, string)', correct the casing of 'Text' in parameter name 'TextQual' by changing it to 'text'.</Issue>
            </Message>
            <Message Id="Qual" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="542">In method 'DocExtensions.SplitOutsideQuotes(this string, char, string)', correct the spelling of 'Qual' in parameter name 'TextQual' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="543">In externally visible method 'DocExtensions.SplitOutsideQuotes(this string, char, string)', validate parameter 'line' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartsWithByteSet(System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'DocExtensions.StartsWithByteSet(this byte[], params byte[])', validate parameter 'check' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'DocExtensions.StartsWithByteSet(this byte[], params byte[])', validate parameter 'startSet' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartsWithByteSet(System.Char[],System.Text.Encoding,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocExtensions.cs" Line="581">In externally visible method 'DocExtensions.StartsWithByteSet(this char[], Encoding, params byte[])', validate parameter 'encodingType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocMetaData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MetaData' in type name 'DocMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="87">Replace method 'DocMetaData.DocMetaData(string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="287">Replace method 'DocMetaData.DocMetaData(string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Directory" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="287">In member 'DocMetaData.DocMetaData(string, string, string)', correct the casing of 'Directory' in parameter name 'DirectoryPath' by changing it to 'directory'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="287">In member 'DocMetaData.DocMetaData(string, string, string)', correct the casing of 'File' in parameter name 'FileName' by changing it to 'file'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddColumn(System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="430">Replace method 'DocMetaData.AddColumn(string, int?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="430">In member 'DocMetaData.AddColumn(string, int?)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="430">In member 'DocMetaData.AddColumn(string, int?)', correct the casing of 'Max' in parameter name 'MaxLength' by changing it to 'max'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddDelimitedColumns(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="342">In externally visible method 'DocMetaData.AddDelimitedColumns(params string[])', validate parameter 'columnNames' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddDetailedColumn(SEIDR.Doc.DocRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="355">In externally visible method 'DocMetaData.AddDetailedColumn(params DocRecordColumnInfo[])', validate parameter 'column' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddDetailedColumnCollection(SEIDR.Doc.DocRecordColumnCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="379">In externally visible method 'DocMetaData.AddDetailedColumnCollection(DocRecordColumnCollection)', validate parameter 'columnCollection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddMultiLineEndDelimiter(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="195">The compound word 'MultiLine' in member name 'DocMetaData.AddMultiLineEndDelimiter(params string[])' exists as a discrete term. If your usage is intended to be single word, case it as 'Multiline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="195">Correct the spelling of 'Multi' in member name 'DocMetaData.AddMultiLineEndDelimiter(params string[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Alias" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocMetaData.Alias' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearMultiLineEndDelimiter()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="160">The compound word 'MultiLine' in member name 'DocMetaData.ClearMultiLineEndDelimiter()' exists as a discrete term. If your usage is intended to be single word, case it as 'Multiline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="160">Correct the spelling of 'Multi' in member name 'DocMetaData.ClearMultiLineEndDelimiter()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloneForNewFile(System.String,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="67">Replace method 'DocMetaData.CloneForNewFile(string, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="New" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="67">In member 'DocMetaData.CloneForNewFile(string, bool?)', correct the casing of 'New' in parameter name 'NewFilePath' by changing it to 'new'.</Issue>
            </Message>
            <Message Id="Write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="67">In member 'DocMetaData.CloneForNewFile(string, bool?)', correct the casing of 'Write' in parameter name 'WriteMode' by changing it to 'write'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyDetailedColumnCollection(SEIDR.Doc.DocRecordColumnCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="417">In externally visible method 'DocMetaData.CopyDetailedColumnCollection(DocRecordColumnCollection)', validate parameter 'columnCollection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT_PAGE_SIZE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'DocMetaData.DEFAULT_PAGE_SIZE' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="PAGE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PAGE' in member name 'DocMetaData.DEFAULT_PAGE_SIZE' by changing it to 'Page'.</Issue>
            </Message>
            <Message Id="SIZE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SIZE' in member name 'DocMetaData.DEFAULT_PAGE_SIZE' by changing it to 'Size'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DocMetaData.DEFAULT_PAGE_SIZE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FilePath" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocMetaData.FilePath' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHeader()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="303">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DocMetaData.GetHeader()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="302">Change 'DocMetaData.GetHeader()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_PAGE_SIZE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'DocMetaData.MIN_PAGE_SIZE' by changing it to 'Min'.</Issue>
            </Message>
            <Message Id="PAGE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PAGE' in member name 'DocMetaData.MIN_PAGE_SIZE' by changing it to 'Page'.</Issue>
            </Message>
            <Message Id="SIZE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SIZE' in member name 'DocMetaData.MIN_PAGE_SIZE' by changing it to 'Size'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'DocMetaData.MIN_PAGE_SIZE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiLineEndDelimiter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="156">The compound word 'MultiLine' in member name 'DocMetaData.MultiLineEndDelimiter' exists as a discrete term. If your usage is intended to be single word, case it as 'Multiline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="156">Correct the spelling of 'Multi' in member name 'DocMetaData.MultiLineEndDelimiter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="156">Change 'DocMetaData.MultiLineEndDelimiter' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocMetaData):SEIDR.Doc.DocRecordColumnCollection" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="20">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'DocMetaData.implicit operator DocRecordColumnCollection(DocMetaData)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="21">In externally visible method 'DocMetaData.implicit operator DocRecordColumnCollection(DocMetaData)', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadWithMultiLineEndDelimiter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="187">The compound word 'MultiLine' in member name 'DocMetaData.ReadWithMultiLineEndDelimiter' exists as a discrete term. If your usage is intended to be single word, case it as 'Multiline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="187">Correct the spelling of 'Multi' in member name 'DocMetaData.ReadWithMultiLineEndDelimiter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveColumn(SEIDR.Doc.DocRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="392">In externally visible method 'DocMetaData.RemoveColumn(params DocRecordColumnInfo[])', validate parameter 'toRemove' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveColumn(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="406">Replace method 'DocMetaData.RemoveColumn(string, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="406">In member 'DocMetaData.RemoveColumn(string, string, int)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColumnMatchStrictMode(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="367">Replace method 'DocMetaData.SetColumnMatchStrictMode(bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMultiLineEndDelimiters(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="166">The compound word 'MultiLine' in member name 'DocMetaData.SetMultiLineEndDelimiters(params string[])' exists as a discrete term. If your usage is intended to be single word, case it as 'Multiline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="166">Correct the spelling of 'Multi' in member name 'DocMetaData.SetMultiLineEndDelimiters(params string[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPageSize(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="120">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DocMetaData.SetPageSize(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TESTMODE" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TESTMODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocMetaData.cs" Line="29">Correct the casing of 'TESTMODE' in member name 'DocMetaData.TESTMODE' by changing it to 'Testmode'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'DocReader' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Nullable`1&lt;System.Char&gt;,System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="47">Replace method 'DocReader.DocReader(string, string, char?, string, int?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="47">In member 'DocReader.DocReader(string, string, char?, string, int?)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="47">In member 'DocReader.DocReader(string, string, char?, string, int?)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Line" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="47">In member 'DocReader.DocReader(string, string, char?, string, int?)', correct the casing of 'Line' in parameter name 'LineEnd' by changing it to 'line'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Nullable`1&lt;System.Char&gt;,System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="58">Replace method 'DocReader.DocReader(string, string, string, char?, string, int?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="58">In member 'DocReader.DocReader(string, string, string, char?, string, int?)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="Directory" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="58">In member 'DocReader.DocReader(string, string, string, char?, string, int?)', correct the casing of 'Directory' in parameter name 'Directory' by changing it to 'directory'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="58">In member 'DocReader.DocReader(string, string, string, char?, string, int?)', correct the casing of 'File' in parameter name 'FileName' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Line" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="58">In member 'DocReader.DocReader(string, string, string, char?, string, int?)', correct the casing of 'Line' in parameter name 'LineEnd' by changing it to 'line'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPage(System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="67">Replace method 'DocReader.GetPage(int, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="67">Change 'List&lt;DocRecord&gt;' in 'DocReader.GetPage(int, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="68">In member 'DocReader.GetPage(int, bool)', change parameter name 'useCache' to 'cached' in order to match the identifier as it has been declared in 'DocReader&lt;DocRecord&gt;.GetPage(int, bool)'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="77">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocReader.GetPage(int, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="77">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocReader.GetPage(int, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocReader):SEIDR.Doc.DocMetaData" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="20">In method 'DocReader.implicit operator DocMetaData(DocReader)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="20">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'DocReader.implicit operator DocMetaData(DocReader)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="21">In externally visible method 'DocReader.implicit operator DocMetaData(DocReader)', validate parameter 'r' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocReader):SEIDR.Doc.DocRecordColumnCollection" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="24">In method 'DocReader.implicit operator DocRecordColumnCollection(DocReader)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="24">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'DocReader.implicit operator DocRecordColumnCollection(DocReader)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="25">In externally visible method 'DocReader.implicit operator DocRecordColumnCollection(DocReader)', validate parameter 'r' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocReader`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'DocReader&lt;ReadType&gt;', prefix generic type parameter name 'ReadType' with 'T'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'DocReader&lt;ReadType&gt;' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="141">'DocReader&lt;ReadType&gt;.DocReader(DocMetaData)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;DocReader&lt;ReadType&gt;..ctor(DocMetaData)&#xD;&#xA;DocReader&lt;ReadType&gt;.SetupStream():Void&#xD;&#xA;DocReader&lt;ReadType&gt;.Dispose(Boolean):Void</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="133">Method 'DocReader&lt;ReadType&gt;.DocReader(DocMetaData)' passes parameter name 'info' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="133">Method 'DocReader&lt;ReadType&gt;.DocReader(DocMetaData)' passes 'Not Configured for read mode' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Nullable`1&lt;System.Char&gt;,System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="141">Replace method 'DocReader&lt;ReadType&gt;.DocReader(string, string, char?, string, int?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="141">'DocReader&lt;ReadType&gt;.DocReader(string, string, char?, string, int?)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;DocReader&lt;ReadType&gt;..ctor(String, String, Nullable&lt;Char&gt;, String, Nullable&lt;Int32&gt;)&#xD;&#xA;DocReader&lt;ReadType&gt;.SetupStream():Void&#xD;&#xA;DocReader&lt;ReadType&gt;.Dispose(Boolean):Void</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="141">In member 'DocReader&lt;ReadType&gt;.DocReader(string, string, char?, string, int?)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="141">In member 'DocReader&lt;ReadType&gt;.DocReader(string, string, char?, string, int?)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Line" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="141">In member 'DocReader&lt;ReadType&gt;.DocReader(string, string, char?, string, int?)', correct the casing of 'Line' in parameter name 'LineEnd' by changing it to 'line'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckLineNumber(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Page" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="531">In member 'DocReader&lt;ReadType&gt;.CheckLineNumber(int, int)', correct the casing of 'Page' in parameter name 'Page' by changing it to 'page'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="531">In member 'DocReader&lt;ReadType&gt;.CheckLineNumber(int, int)', correct the casing of 'Page' in parameter name 'PageLine' by changing it to 'page'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Configure(SEIDR.Doc.DocMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="metaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="480">In member 'DocReader&lt;ReadType&gt;.Configure(DocMetaData)', the compound word 'metaData' in parameter name 'metaData' exists as a discrete term. If your usage is intended to be single word, case it as 'metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="485">Method 'DocReader&lt;ReadType&gt;.Configure(DocMetaData)' passes parameter name 'metaData' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="485">Method 'DocReader&lt;ReadType&gt;.Configure(DocMetaData)' passes 'Not Configured for read mode' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPage" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.CurrentPage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;ReadType&gt;' in 'DocReader&lt;ReadType&gt;.CurrentPage' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPage(System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="700">Replace method 'DocReader&lt;ReadType&gt;.GetPage(int, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="700">Change 'List&lt;ReadType&gt;' in 'DocReader&lt;ReadType&gt;.GetPage(int, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="710">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocReader&lt;ReadType&gt;.GetPage(int, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="710">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocReader&lt;ReadType&gt;.GetPage(int, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPagePositions(System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="607">In externally visible method 'DocReader&lt;ReadType&gt;.GetPagePositions(IEnumerable&lt;long&gt;)', validate parameter 'lineNumberList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSpecificLines(System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'DocReader&lt;ReadType&gt;.GetSpecificLines(IEnumerable&lt;long&gt;)', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSpecificRecords(System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'DocReader&lt;ReadType&gt;.GetSpecificRecords(IEnumerable&lt;long&gt;)', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int32,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="634">Redesign indexer 'DocReader&lt;ReadType&gt;.this[int, int]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lastPage" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.lastPage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#md" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.md' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MetaData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="106">The compound word 'MetaData' in member name 'DocReader&lt;ReadType&gt;.MetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReConfigure()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ReConfigure" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="145">The compound word 'ReConfigure' in member name 'DocReader&lt;ReadType&gt;.ReConfigure()' exists as a discrete term. If your usage is intended to be single word, case it as 'Reconfigure' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Re" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="145">Correct the casing of 'Re' in member name 'DocReader&lt;ReadType&gt;.ReConfigure()' by changing it to 'RE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setupPageMetaData(System.Int64&amp;,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="244">'DocReader&lt;ReadType&gt;.setupPageMetaData(ref long, ref int)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="314">'DocReader&lt;ReadType&gt;.setupPageMetaData(ref long, ref int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="BufferSize" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="314">Correct the spelling of the unrecognized token 'BufferSize' in the literal '"BufferSize too small - may be missing LineEndDelimiter"'.</Issue>
            </Message>
            <Message Id="LineEndDelimiter" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="314">Correct the spelling of the unrecognized token 'LineEndDelimiter' in the literal '"BufferSize too small - may be missing LineEndDelimiter"'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="431">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocReader&lt;ReadType&gt;.setupPageMetaData(ref long, ref int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="298">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'DocReader&lt;ReadType&gt;.setupPageMetaData(ref long, ref int)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="305">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'DocReader&lt;ReadType&gt;.setupPageMetaData(ref long, ref int)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="291">Replace the call to 'string.operator !=(string, string)' in 'DocReader&lt;ReadType&gt;.setupPageMetaData(ref long, ref int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetupStream()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="FixedWidth" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="159">Correct the spelling of the unrecognized token 'FixedWidth' in the literal '") is smaller than FixedWidth line Length ("'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocReader.cs" Line="159">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DocReader&lt;ReadType&gt;.SetupStream()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocReader`1+PageHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'DocReader&lt;ReadType&gt;.PageHelper'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EndPosition" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.PageHelper.EndPosition' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fullness" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.PageHelper.Fullness' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Length" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.PageHelper.Length' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RecordCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.PageHelper.RecordCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartPosition" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocReader&lt;ReadType&gt;.PageHelper.StartPosition' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocRecord" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocRecordColumnCollection,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="317">In externally visible method 'DocRecord.DocRecord(DocRecordColumnCollection, bool)', validate parameter 'owner' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(SEIDR.Doc.DocRecordColumnCollection,System.Boolean,System.Collections.Generic.IList`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Parsed" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="327">In member 'DocRecord.DocRecord(DocRecordColumnCollection, bool, IList&lt;string&gt;)', correct the casing of 'Parsed' in parameter name 'ParsedContent' by changing it to 'parsed'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddMissingContent(SEIDR.Doc.DocRecord,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="158">Replace method 'DocRecord.AddMissingContent(DocRecord, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="158">In method 'DocRecord.AddMissingContent(DocRecord, string)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="159">In externally visible method 'DocRecord.AddMissingContent(DocRecord, string)', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddToStringBuilder(System.Text.StringBuilder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="265">In method 'DocRecord.AddToStringBuilder(StringBuilder)', correct the spelling of 'sb' in parameter name 'sb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Columns" Kind="Field" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocRecord.Columns' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Configure(SEIDR.Doc.DocRecordColumnCollection,System.Nullable`1&lt;System.Boolean&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="349">Replace method 'DocRecord.Configure(DocRecordColumnCollection, bool?, IList&lt;string&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBestMatch(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="451">Replace method 'DocRecord.GetBestMatch(string, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="451">In member 'DocRecord.GetBestMatch(string, string, int)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="456">Replace the call to 'string.operator ==(string, string)' in 'DocRecord.GetBestMatch(string, string, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetColumns(System.Predicate`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Test" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="124">In member 'DocRecord.GetColumns(Predicate&lt;DocRecordColumnInfo&gt;)', correct the casing of 'Test' in parameter name 'Test' by changing it to 'test'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPartialHash(System.Boolean,System.Boolean,System.Boolean,SEIDR.Doc.DocRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="110">Replace the call to 'string.operator ==(string, string)' in 'DocRecord.GetPartialHash(bool, bool, bool, params DocRecordColumnInfo[])' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="103">In externally visible method 'DocRecord.GetPartialHash(bool, bool, bool, params DocRecordColumnInfo[])', validate parameter 'columnsToHash' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPartialHash(System.Boolean,System.Collections.Generic.IList`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rolling" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="68">In member 'DocRecord.GetPartialHash(bool, IList&lt;string&gt;)', correct the casing of 'Rolling' in parameter name 'RollingHash' by changing it to 'rolling'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="72">In externally visible method 'DocRecord.GetPartialHash(bool, IList&lt;string&gt;)', validate parameter 'columnsToHash' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPartialHash(System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rolling" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="59">In member 'DocRecord.GetPartialHash(bool, params string[])', correct the casing of 'Rolling' in parameter name 'RollingHash' by changing it to 'rolling'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPartialHash(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Columns" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="51">In member 'DocRecord.GetPartialHash(params string[])', correct the casing of 'Columns' in parameter name 'ColumnsToHash' by changing it to 'columns'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasColumn(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="185">In member 'DocRecord.HasColumn(string)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasColumn(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="179">In member 'DocRecord.HasColumn(string, string)', change parameter name 'Alias' to 'alias' in order to match the identifier as it has been declared in 'IRecord.HasColumn(string, string)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="179">In member 'DocRecord.HasColumn(string, string)', change parameter name 'ColumnName' to 'Column' in order to match the identifier as it has been declared in 'IRecord.HasColumn(string, string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[SEIDR.Doc.DocRecordColumnInfo]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="486">Use an integral value or string as the parameter to indexer 'DocRecord.this[DocRecordColumnInfo]'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="490">Replace the call to 'string.operator ==(string, string)' in 'DocRecord.this.get(DocRecordColumnInfo)' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="489">In externally visible method 'DocRecord.this.get(DocRecordColumnInfo)', validate parameter 'column' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Item(SEIDR.Doc.DocRecordColumnInfo,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="500">In externally visible method 'DocRecord.this.set(DocRecordColumnInfo, string)', validate parameter 'column' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[SEIDR.Doc.IRecordColumnInfo]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="521">Use an integral value or string as the parameter to indexer 'DocRecord.this[IRecordColumnInfo]'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(SEIDR.Doc.IRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="525">In externally visible method 'DocRecord.this.get(IRecordColumnInfo)', validate parameter 'column' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Item(SEIDR.Doc.IRecordColumnInfo,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="533">In externally visible method 'DocRecord.this.set(IRecordColumnInfo, string)', validate parameter 'column' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="544">In member 'DocRecord.this[int]', change parameter name 'columnIndex' to 'index' in order to match the identifier as it has been declared in 'IRecord.this[int]'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="547">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocRecord.this.get(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Item(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="556">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocRecord.this.set(int, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.String,System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="419">In member 'DocRecord.this[string, string]', change parameter name 'ColumnName' to 'column' in order to match the identifier as it has been declared in 'IRecord.this[string, string]'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="422">Replace the call to 'string.operator ==(string, string)' in 'DocRecord.this.get(string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="379">In member 'DocRecord.this[string]', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="385">Replace the call to 'string.operator ==(string, string)' in 'DocRecord.this.get(string)' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Merge(SEIDR.Doc.DocRecordColumnCollection,SEIDR.Doc.DocRecord,SEIDR.Doc.DocRecord,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="136">Replace method 'DocRecord.Merge(DocRecordColumnCollection, DocRecord, DocRecord, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="138">In externally visible method 'DocRecord.Merge(DocRecordColumnCollection, DocRecord, DocRecord, bool)', validate parameter 'left' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="144">In externally visible method 'DocRecord.Merge(DocRecordColumnCollection, DocRecord, DocRecord, bool)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetBestMatch(System.String,System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="469">Replace method 'DocRecord.SetBestMatch(string, string, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="469">In member 'DocRecord.SetBestMatch(string, string, string, int)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="473">Replace the call to 'string.operator ==(string, string)' in 'DocRecord.SetBestMatch(string, string, string, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetParsedContent(System.Collections.Generic.IList`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message Id="Parsed" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="336">In member 'DocRecord.SetParsedContent(IList&lt;string&gt;)', correct the casing of 'Parsed' in parameter name 'ParsedContent' by changing it to 'parsed'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="337">In externally visible method 'DocRecord.SetParsedContent(IList&lt;string&gt;)', validate parameter 'ParsedContent' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetValue(System.Int32,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="576">In externally visible method 'DocRecord.SetValue(int, object)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetValue(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="600">In externally visible method 'DocRecord.SetValue(string, object)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetValue(System.String,System.String,System.Int32,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="584">In externally visible method 'DocRecord.SetValue(string, string, int, object)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetValue(System.String,System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="592">In externally visible method 'DocRecord.SetValue(string, string, object)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="200">'DocRecord.ToString()' creates an exception of type 'InvalidOperationException'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecord.cs" Line="202">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DocRecord.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocRecordColumnCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Char,SEIDR.Doc.DocRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Delim" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="352">In member 'DocRecordColumnCollection.DocRecordColumnCollection(char, params DocRecordColumnInfo[])', correct the casing of 'Delim' in parameter name 'Delim' by changing it to 'delim'.</Issue>
            </Message>
            <Message Id="Delim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="352">In method 'DocRecordColumnCollection.DocRecordColumnCollection(char, params DocRecordColumnInfo[])', correct the spelling of 'Delim' in parameter name 'Delim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Char,System.Collections.Generic.List`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="16">Change 'List&lt;DocRecordColumnInfo&gt;' in 'DocRecordColumnCollection.DocRecordColumnCollection(char, List&lt;DocRecordColumnInfo&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="16">In member 'DocRecordColumnCollection.DocRecordColumnCollection(char, List&lt;DocRecordColumnInfo&gt;)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="16">Change 'List&lt;DocRecordColumnInfo&gt;' in 'DocRecordColumnCollection.DocRecordColumnCollection(List&lt;DocRecordColumnInfo&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="16">Replace method 'DocRecordColumnCollection.DocRecordColumnCollection(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddColumn(SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="737">In externally visible method 'DocRecordColumnCollection.AddColumn(DocRecordColumnInfo)', validate parameter 'column' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddColumn(System.String,System.Nullable`1&lt;System.Int32&gt;,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="586">Replace method 'DocRecordColumnCollection.AddColumn(string, int?, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="586">In member 'DocRecordColumnCollection.AddColumn(string, int?, bool, bool)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="586">In member 'DocRecordColumnCollection.AddColumn(string, int?, bool, bool)', correct the casing of 'Max' in parameter name 'MaxSize' by changing it to 'max'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddMapping(System.Collections.Generic.Dictionary`2&lt;System.Int32,SEIDR.Doc.DocRecordColumnInfo&gt;,SEIDR.Doc.DocRecordColumnInfo,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="780">Replace method 'DocRecordColumnCollection.AddMapping(Dictionary&lt;int, DocRecordColumnInfo&gt;, DocRecordColumnInfo, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="780">In member 'DocRecordColumnCollection.AddMapping(Dictionary&lt;int, DocRecordColumnInfo&gt;, DocRecordColumnInfo, string, string)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="782">In externally visible method 'DocRecordColumnCollection.AddMapping(Dictionary&lt;int, DocRecordColumnInfo&gt;, DocRecordColumnInfo, string, string)', validate parameter 'map' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyColumnIntoCollection(SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="685">In externally visible method 'DocRecordColumnCollection.CopyColumnIntoCollection(DocRecordColumnInfo)', validate parameter 'toCopy' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FixedWidthMode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_FixedWidthMode(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="LineEndDelimiter" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="440">Correct the spelling of the unrecognized token 'LineEndDelimiter' in the literal '"LineEndDelimiter must have a value in Delimited mode."'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetBestMatch(System.String,System.String,System.Int32,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="533">Replace method 'DocRecordColumnCollection.GetBestMatch(string, string, int, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="533">In member 'DocRecordColumnCollection.GetBestMatch(string, string, int, bool?)', correct the casing of 'Column' in parameter name 'Column' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasColumn(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="556">Replace method 'DocRecordColumnCollection.HasColumn(string, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="556">In member 'DocRecordColumnCollection.HasColumn(string, string, int)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Position" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="556">In member 'DocRecordColumnCollection.HasColumn(string, string, int)', correct the casing of 'Position' in parameter name 'Position' by changing it to 'position'.</Issue>
            </Message>
            <Message Id="Specific" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="556">In member 'DocRecordColumnCollection.HasColumn(string, string, int)', correct the casing of 'Specific' in parameter name 'SpecificAlias' by changing it to 'specific'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String,System.String,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="508">In member 'DocRecordColumnCollection.this[string, string, int]', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Position" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="508">In member 'DocRecordColumnCollection.this[string, string, int]', correct the casing of 'Position' in parameter name 'Position' by changing it to 'position'.</Issue>
            </Message>
            <Message Id="Specific" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="508">In member 'DocRecordColumnCollection.this[string, string, int]', correct the casing of 'Specific' in parameter name 'SpecificAlias' by changing it to 'specific'.</Issue>
            </Message>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="508">Redesign indexer 'DocRecordColumnCollection.this[string, string, int]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
               <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="508">Replace method 'DocRecordColumnCollection.this.get(string, string, int)' with an overload that supplies all default arguments.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="497">In member 'DocRecordColumnCollection.this[string]', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Merge(SEIDR.Doc.DocRecordColumnCollection,SEIDR.Doc.DocRecordColumnCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="56">In externally visible method 'DocRecordColumnCollection.Merge(DocRecordColumnCollection, DocRecordColumnCollection)', validate parameter 'left' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="68">In externally visible method 'DocRecordColumnCollection.Merge(DocRecordColumnCollection, DocRecordColumnCollection)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseRecord(System.Boolean,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="190">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocRecordColumnCollection.ParseRecord(bool, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseRecord(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="128">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocRecordColumnCollection.ParseRecord(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseRecord`1(System.Boolean,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="231">On method 'DocRecordColumnCollection.ParseRecord&lt;ReadType&gt;(bool, string)', prefix generic type parameter name 'ReadType' with 'T'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="252">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'DocRecordColumnCollection.ParseRecord&lt;ReadType&gt;(bool, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveColumnInfo(System.Collections.Generic.IEnumerable`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="633">In externally visible method 'DocRecordColumnCollection.RemoveColumnInfo(IEnumerable&lt;DocRecordColumnInfo&gt;)', validate parameter 'columnsToRemove' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenameColumn(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="New" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="301">In member 'DocRecordColumnCollection.RenameColumn(int, string)', correct the casing of 'New' in parameter name 'NewName' by changing it to 'new'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDelimiter(System.Char)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Delimiter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="455">In member 'DocRecordColumnCollection.SetDelimiter(char)', correct the casing of 'Delimiter' in parameter name 'Delimiter' by changing it to 'delimiter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetFormat()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="400">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocRecordColumnCollection.SetFormat()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="400">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocRecordColumnCollection.SetFormat()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="407">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocRecordColumnCollection.SetFormat()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateColumn(System.String,System.String,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="708">Replace method 'DocRecordColumnCollection.UpdateColumn(string, string, int?, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="708">In member 'DocRecordColumnCollection.UpdateColumn(string, string, int?, bool?)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="708">In member 'DocRecordColumnCollection.UpdateColumn(string, string, int?, bool?)', correct the casing of 'Max' in parameter name 'MaxSize' by changing it to 'max'.</Issue>
            </Message>
            <Message Id="nullIfEmpty" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="708">Parameter 'nullIfEmpty' of 'DocRecordColumnCollection.UpdateColumn(string, string, int?, bool?)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateColumn(System.String,System.String,System.String,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="718">Replace method 'DocRecordColumnCollection.UpdateColumn(string, string, string, int?, bool?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Alias" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="718">In member 'DocRecordColumnCollection.UpdateColumn(string, string, string, int?, bool?)', correct the casing of 'Alias' in parameter name 'Alias' by changing it to 'alias'.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="718">In member 'DocRecordColumnCollection.UpdateColumn(string, string, string, int?, bool?)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="718">In member 'DocRecordColumnCollection.UpdateColumn(string, string, string, int?, bool?)', correct the casing of 'Max' in parameter name 'MaxSize' by changing it to 'max'.</Issue>
            </Message>
            <Message Id="Null" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnCollection.cs" Line="718">In member 'DocRecordColumnCollection.UpdateColumn(string, string, string, int?, bool?)', correct the casing of 'Null' in parameter name 'NullIfEmpty' by changing it to 'null'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocRecordColumnInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Alias" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="47">In member 'DocRecordColumnInfo.DocRecordColumnInfo(string, string, int)', correct the casing of 'Alias' in parameter name 'Alias' by changing it to 'alias'.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="47">In member 'DocRecordColumnInfo.DocRecordColumnInfo(string, string, int)', correct the casing of 'Column' in parameter name 'Column' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateColumns(System.String,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Alias" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="211">In member 'DocRecordColumnInfo.CreateColumns(string, params string[])', correct the casing of 'Alias' in parameter name 'Alias' by changing it to 'alias'.</Issue>
            </Message>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="211">In member 'DocRecordColumnInfo.CreateColumns(string, params string[])', correct the casing of 'Column' in parameter name 'ColumnList' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="212">In externally visible method 'DocRecordColumnInfo.CreateColumns(string, params string[])', validate parameter 'ColumnList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Equality(SEIDR.Doc.DocRecordColumnInfo,SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="160">In method 'DocRecordColumnInfo.operator ==(DocRecordColumnInfo, DocRecordColumnInfo)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="160">In method 'DocRecordColumnInfo.operator ==(DocRecordColumnInfo, DocRecordColumnInfo)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocRecordColumnInfo):System.Int32" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="34">In externally visible method 'DocRecordColumnInfo.implicit operator int(DocRecordColumnInfo)', validate parameter 'column' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocRecordColumnInfo):System.String" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="42">In externally visible method 'DocRecordColumnInfo.implicit operator string(DocRecordColumnInfo)', validate parameter 'column' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Inequality(SEIDR.Doc.DocRecordColumnInfo,SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="170">In method 'DocRecordColumnInfo.operator !=(DocRecordColumnInfo, DocRecordColumnInfo)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocRecordColumnInfo.cs" Line="170">In method 'DocRecordColumnInfo.operator !=(DocRecordColumnInfo, DocRecordColumnInfo)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocSorter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'DocSorter' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DocSorter`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="G" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On type 'DocSorter&lt;G&gt;', consider providing a more meaningful name than generic type parameter name 'G'.</Issue>
          </Message>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'DocSorter&lt;G&gt;', prefix generic type parameter name 'G' with 'T'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'DocSorter&lt;G&gt;' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocReader`1&lt;!0&gt;,System.Int32,System.Boolean,System.Boolean,SEIDR.Doc.DuplicateHandling,SEIDR.Doc.IRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="89">In externally visible method 'DocSorter&lt;G&gt;.DocSorter(DocReader&lt;G&gt;, int, bool, bool, DuplicateHandling, params IRecordColumnInfo[])', validate parameter 'source' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="89">In externally visible method 'DocSorter&lt;G&gt;.DocSorter(DocReader&lt;G&gt;, int, bool, bool, DuplicateHandling, params IRecordColumnInfo[])', validate parameter 'mainSort' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(SEIDR.Doc.DocReader`1&lt;!0&gt;,System.Int32,System.Int32,System.Boolean,System.Boolean,SEIDR.Doc.DuplicateHandling,SEIDR.Doc.IRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="120">In externally visible method 'DocSorter&lt;G&gt;.DocSorter(DocReader&lt;G&gt;, int, int, bool, bool, DuplicateHandling, params IRecordColumnInfo[])', validate parameter 'source' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#addSortCols(SEIDR.Doc.DocMetaData)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="584">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.addSortCols(DocMetaData)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSortIndex(SEIDR.Doc.DuplicateHandling)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="25">Replace method 'DocSorter&lt;G&gt;.CreateSortIndex(DuplicateHandling)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="31">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.CreateSortIndex(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="47">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.CreateSortIndex(DuplicateHandling)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="48">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.CreateSortIndex(DuplicateHandling)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="70">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.CreateSortIndex(DuplicateHandling)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="71">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.CreateSortIndex(DuplicateHandling)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="NotCalledWithFinalizer" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="408">Change 'DocSorter&lt;G&gt;.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int32,System.Int32,SEIDR.Doc.IRecordColumnInfo]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="224">Redesign indexer 'DocSorter&lt;G&gt;.this[int, int, IRecordColumnInfo]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.Int32,System.Int32,SEIDR.Doc.IRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="231">In externally visible method 'DocSorter&lt;G&gt;.this.get(int, int, IRecordColumnInfo)', validate parameter 'columnInfo' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.Int32,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="208">Redesign indexer 'DocSorter&lt;G&gt;.this[int, int]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int64,SEIDR.Doc.IRecordColumnInfo]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="253">Redesign indexer 'DocSorter&lt;G&gt;.this[long, IRecordColumnInfo]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Item(System.Int64,SEIDR.Doc.IRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="260">In externally visible method 'DocSorter&lt;G&gt;.this.get(long, IRecordColumnInfo)', validate parameter 'columnInfo' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MergeIndexFiles(SEIDR.Doc.DuplicateHandling)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="142">'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="186">Modify 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="205">Modify 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="227">Modify 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="152">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="153">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="153">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="162">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="162">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="190">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="190">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="241">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.MergeIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SortIndexFiles(SEIDR.Doc.DuplicateHandling)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="267">Modify 'DocSorter&lt;G&gt;.SortIndexFiles(DuplicateHandling)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="245">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.SortIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="253">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.SortIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="253">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.SortIndexFiles(DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sortPage(System.Int32,SEIDR.Doc.DuplicateHandling)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="85">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.sortPage(int, DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="85">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.sortPage(int, DuplicateHandling)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="96">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.sortPage(int, DuplicateHandling)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="135">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.sortPage(int, DuplicateHandling)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SortPositions(System.Collections.Generic.IList`1&lt;System.Int32&gt;,System.Collections.Generic.IList`1&lt;System.Int32&gt;,System.Collections.Generic.List`1&lt;!0&gt;,SEIDR.Doc.DuplicateHandling)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="414">'DocSorter&lt;G&gt;.SortPositions(IList&lt;int&gt;, IList&lt;int&gt;, List&lt;G&gt;, DuplicateHandling)' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteToFile(SEIDR.Doc.DocMetaData,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="594">Replace method 'DocSorter&lt;G&gt;.WriteToFile(DocMetaData, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="pageInfo" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.SortIndex.cs" Line="610">'DocSorter&lt;G&gt;.WriteToFile(DocMetaData, int)' declares a variable, 'pageInfo', of type 'DocReader&lt;G&gt;.PageHelper', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocSorter`1+sortInfo" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Configure(SEIDR.Doc.DocRecordColumnCollection,System.Nullable`1&lt;System.Boolean&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="355">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.sortInfo.Configure(DocRecordColumnCollection, bool?, IList&lt;string&gt;)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="356">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'DocSorter&lt;G&gt;.sortInfo.Configure(DocRecordColumnCollection, bool?, IList&lt;string&gt;)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocSorter.cs" Line="355">In externally visible method 'DocSorter&lt;G&gt;.sortInfo&lt;G&gt;.Configure(DocRecordColumnCollection, bool?, IList&lt;string&gt;)', validate parameter 'parsedContent' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocWriter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocMetaData,System.Boolean,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="metaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="288">In member 'DocWriter.DocWriter(DocMetaData, bool, int)', the compound word 'metaData' in parameter name 'metaData' exists as a discrete term. If your usage is intended to be single word, case it as 'metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="288">Replace method 'DocWriter.DocWriter(DocMetaData, bool, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Append" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="288">In member 'DocWriter.DocWriter(DocMetaData, bool, int)', correct the casing of 'Append' in parameter name 'AppendIfExists' by changing it to 'append'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="50">In externally visible method 'DocWriter.DocWriter(DocMetaData, bool, int)', validate parameter 'metaData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRecord`1(!!0,SEIDR.Doc.DocWriterMap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="150">On method 'DocWriter.AddRecord&lt;RecordType&gt;(RecordType, DocWriterMap)', prefix generic type parameter name 'RecordType' with 'T'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="151">In externally visible method 'DocWriter.AddRecord&lt;RecordType&gt;(RecordType, DocWriterMap)', validate parameter 'columnMapping' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRecord`1(!!0,System.Collections.Generic.IDictionary`2&lt;System.Int32,SEIDR.Doc.DocRecordColumnInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="163">Replace method 'DocWriter.AddRecord&lt;RecordType&gt;(RecordType, IDictionary&lt;int, DocRecordColumnInfo&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="163">On method 'DocWriter.AddRecord&lt;RecordType&gt;(RecordType, IDictionary&lt;int, DocRecordColumnInfo&gt;)', prefix generic type parameter name 'RecordType' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulkAdd(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="277">In member 'DocWriter.BulkAdd(IEnumerable&lt;string&gt;)', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="278">In externally visible method 'DocWriter.BulkAdd(IEnumerable&lt;string&gt;)', validate parameter 'Lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulkAdd(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="286">In member 'DocWriter.BulkAdd(params string[])', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulkWrite(System.Collections.Generic.IEnumerable`1&lt;SEIDR.Doc.DocRecord&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="221">In externally visible method 'DocWriter.BulkWrite(IEnumerable&lt;DocRecord&gt;)', validate parameter 'toWrite' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulkWrite(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="241">In member 'DocWriter.BulkWrite(IEnumerable&lt;string&gt;)', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="242">In externally visible method 'DocWriter.BulkWrite(IEnumerable&lt;string&gt;)', validate parameter 'Lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulkWrite(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="256">In member 'DocWriter.BulkWrite(params string[])', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="257">In externally visible method 'DocWriter.BulkWrite(params string[])', validate parameter 'Lines' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="323">Change 'DocWriter.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocWriter):SEIDR.Doc.DocMetaData" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="21">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'DocWriter.implicit operator DocMetaData(DocWriter)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="23">In externally visible method 'DocWriter.implicit operator DocMetaData(DocWriter)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocWriter):SEIDR.Doc.DocRecordColumnCollection" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="29">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'DocWriter.implicit operator DocRecordColumnCollection(DocWriter)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="30">In externally visible method 'DocWriter.implicit operator DocRecordColumnCollection(DocWriter)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetJustification(System.Boolean,System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="132">In externally visible method 'DocWriter.SetJustification(bool, params int[])', validate parameter 'columnsToJustify' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetJustification(System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="120">In externally visible method 'DocWriter.SetJustification(bool, params string[])', validate parameter 'columnsToJustify' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTextQualify(System.Boolean,System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="108">In externally visible method 'DocWriter.SetTextQualify(bool, params int[])', validate parameter 'columnsToQualify' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTextQualify(System.Boolean,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriter.cs" Line="96">In externally visible method 'DocWriter.SetTextQualify(bool, params string[])', validate parameter 'columnsToQualify' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocWriterMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddMapping(System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriterMap.cs" Line="84">Replace method 'DocWriterMap.AddMapping(string, string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="To" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriterMap.cs" Line="84">In member 'DocWriterMap.AddMapping(string, string, string, string)', correct the casing of 'To' in parameter name 'ToColumnName' by changing it to 'to'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'DocWriterMap.MapData' or change the field to one that is an immutable reference type. If the reference type 'Dictionary&lt;int, DocRecordColumnInfo&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DocWriterMap.MapData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMapping(System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriterMap.cs" Line="97">Replace method 'DocWriterMap.SetMapping(string, string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="To" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DocWriterMap.cs" Line="97">In member 'DocWriterMap.SetMapping(string, string, string, string)', correct the casing of 'To' in parameter name 'ToColumnName' by changing it to 'to'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DuplicateRecordException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'DuplicateRecordException': protected DuplicateRecordException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'DuplicateRecordException': public DuplicateRecordException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'DuplicateRecordException': public DuplicateRecordException(String, Exception).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'DuplicateRecordException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FAttModder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Att" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Att' in type name 'FAttModder'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddAttribute(System.String,System.IO.FileAttributes[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileAttributeModifier.cs" Line="37">'FAttModder.AddAttribute(string, params FileAttributes[])' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileAttributeModifier.cs" Line="39">In externally visible method 'FAttModder.AddAttribute(string, params FileAttributes[])', validate parameter 'toAdd' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveAttribute(System.String,System.IO.FileAttributes[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileAttributeModifier.cs" Line="20">'FAttModder.RemoveAttribute(string, params FileAttributes[])' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileAttributeModifier.cs" Line="22">In externally visible method 'FAttModder.RemoveAttribute(string, params FileAttributes[])', validate parameter 'toRemove' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="283">In method 'FileReader.FileReader(string)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="267">In method 'FileReader.FileReader(string, bool)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Write" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="162">In member 'FileReader.FileReader(string, bool)', correct the casing of 'Write' in parameter name 'WriteLock' by changing it to 'write'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Char)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="226">In method 'FileReader.FileReader(string, char)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Char,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="249">In method 'FileReader.FileReader(string, char, bool)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="readlock" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="162">In method 'FileReader.FileReader(string, char, bool)', correct the spelling of 'readlock' in parameter name 'readlock' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#block" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="block" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="177">Correct the casing of 'block' in member name 'FileReader.block' by changing it to 'Block'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CleanInvisibles" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FileReader.CleanInvisibles' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CleanLine(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Newlines" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="441">In member 'FileReader.CleanLine(string, bool)', the discrete term 'Newlines' in parameter name 'combineNewlines' should be expressed as a compound word, 'NewLines'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#defaultBlock" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FileReader.defaultBlock' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="disposing" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="464">Parameter 'disposing' of 'FileReader.Dispose(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GuessDelimiter(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="426">In externally visible method 'FileReader.GuessDelimiter(string)', validate parameter 'line' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseDate(System.String,System.String,System.DateTime)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="34">'FileReader.ParseDate(string, string, DateTime)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="104">Modify 'FileReader.ParseDate(string, string, DateTime)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="69">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileReader.ParseDate(string, string, DateTime)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="48">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'FileReader.ParseDate(string, string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="58">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'FileReader.ParseDate(string, string, DateTime)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="56">Replace the call to 'string.operator !=(string, string)' in 'FileReader.ParseDate(string, string, DateTime)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="45">Replace the call to 'string.operator ==(string, string)' in 'FileReader.ParseDate(string, string, DateTime)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#path" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileReader.path' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="395">Consider a design that does not require that 'moreWork' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="410">Consider a design that does not require that 'work' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(System.Int32&amp;,System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="302">Consider a design that does not require that 'work' be an out parameter.</Issue>
            </Message>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="302">Consider a design that does not require that 'moreWork' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="311">'FileReader.Read(out int, out bool)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="start" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="326">'FileReader.Read(out int, out bool)' declares a variable, 'start', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitOutsideQuotes(System.String,System.Char)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="118">'FileReader.SplitOutsideQuotes(string, char)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitOutsideQuotes(System.String,System.Char,System.Char)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="149">'FileReader.SplitOutsideQuotes(string, char, char)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#splitter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="splitter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="FileReader.cs" Line="205">Correct the casing of 'splitter' in member name 'FileReader.splitter' by changing it to 'Splitter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrimQuotes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FileReader.TrimQuotes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GroupOn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,SEIDR.Doc.GroupOn+GroupType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Group" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="102">In member 'GroupOn.GroupOn(string, GroupOn.GroupType)', correct the casing of 'Group' in parameter name 'GroupName' by changing it to 'group'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,SEIDR.Doc.GroupOn+GroupType,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Group" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="102">In member 'GroupOn.GroupOn(string, GroupOn.GroupType, string)', correct the casing of 'Group' in parameter name 'GroupDescription' by changing it to 'group'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="102">In member 'GroupOn.GroupOn(string, GroupOn.GroupType, string)', correct the casing of 'Group' in parameter name 'GroupName' by changing it to 'group'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddData(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="119">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'GroupOn.AddData(string, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="119">In externally visible method 'GroupOn.AddData(string, string)', validate parameter 'key' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="124">In externally visible method 'GroupOn.AddData(string, string)', validate parameter 'fieldData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Compare(SEIDR.Doc.GroupOn,SEIDR.Doc.GroupOn)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="61">In method 'GroupOn.Compare(GroupOn, GroupOn)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="61">In method 'GroupOn.Compare(GroupOn, GroupOn)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="62">In externally visible method 'GroupOn.Compare(GroupOn, GroupOn)', validate parameter 'a' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Matches(SEIDR.Doc.GroupOn)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="22">In method 'GroupOn.Matches(GroupOn)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="23">In externally visible method 'GroupOn.Matches(GroupOn)', validate parameter 'g' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ModifyData(System.String,SEIDR.Doc.GroupOn+dataObj)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="data" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="134">'data', a parameter declared in 'GroupOn.ModifyData(string, GroupOn.dataObj)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewData(System.String,SEIDR.Doc.GroupOn+dataObj)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="data" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="213">'data', a parameter declared in 'GroupOn.NewData(string, GroupOn.dataObj)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="296">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'GroupOn.ToString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="GroupOn.cs" Line="95">Correct the casing of 'type' in member name 'GroupOn.type' by changing it to 'Type'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GroupOn+GroupType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dateType" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'date' in member name 'GroupOn.GroupType.dateType' by changing it to 'Date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NumRange" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Num' in member name 'GroupOn.GroupType.NumRange' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NumSign" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Num' in member name 'GroupOn.GroupType.NumSign' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#varchar" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="varchar" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'varchar' in member name 'GroupOn.GroupType.varchar' by changing it to 'Varchar'.</Issue>
            </Message>
            <Message Id="varchar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'varchar' in member name 'GroupOn.GroupType.varchar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IRecord" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetPartialHash(System.Boolean,System.Boolean,System.Boolean,SEIDR.Doc.DocRecordColumnInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Exclude" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IRecord.GetPartialHash(bool, bool, bool, params DocRecordColumnInfo[])', correct the casing of 'Exclude' in parameter name 'ExcludeEmpty' by changing it to 'exclude'.</Issue>
            </Message>
            <Message Id="Rolling" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IRecord.GetPartialHash(bool, bool, bool, params DocRecordColumnInfo[])', correct the casing of 'Rolling' in parameter name 'RollingHash' by changing it to 'rolling'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasColumn(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IRecord.HasColumn(string, string)', correct the casing of 'Column' in parameter name 'Column' by changing it to 'column'.</Issue>
            </Message>
            <Message Id="Alias" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In virtual/interface member 'IRecord.HasColumn(string, string)', rename parameter 'alias' so that it no longer conflicts with the reserved language keyword 'Alias'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String,System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Alias" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In virtual/interface member 'IRecord.this[string, string]', rename parameter 'alias' so that it no longer conflicts with the reserved language keyword 'Alias'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Redesign indexer 'IRecord.this[string, string]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IRecordColumnInfo" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SortASC" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ASC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ASC' in member name 'IRecordColumnInfo.SortASC' by changing it to 'Asc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MissingColumnException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MissingColumnException': protected MissingColumnException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MissingColumnException': public MissingColumnException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MissingColumnException': public MissingColumnException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MissingColumnException': public MissingColumnException(String, Exception).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'MissingColumnException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Processor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'ReInit' and 'Reinit' so that they differ by more than case.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Processor' because it creates members of the following IDisposable types: 'FileReader'. If 'Processor' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="555">Initialize all static fields in 'Processor' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="55">In member 'Processor.Processor(string)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="396">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Processor.Processor(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="426">In externally visible method 'Processor.Processor(string, DataTable)', validate parameter 'outputFile' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Append" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="55">In member 'Processor.Processor(string, string, bool)', correct the casing of 'Append' in parameter name 'Append' by changing it to 'append'.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="55">In member 'Processor.Processor(string, string, bool)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="55">In member 'Processor.Processor(string, string, bool)', correct the casing of 'Output' in parameter name 'OutputPath' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="383">In externally visible method 'Processor.Processor(string, string, bool)', validate parameter 'OutputPath' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="414">In externally visible method 'Processor.Processor(string, params string[])', validate parameter 'outputFile' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="406">In externally visible method 'Processor.Processor(string, params string[])', validate parameter 'inputFiles' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddOn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.AddOn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRunTimeInformation" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RunTime" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'RunTime' in member name 'Processor.AddRunTimeInformation' exists as a discrete term. If your usage is intended to be single word, case it as 'Runtime' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.AddRunTimeInformation' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeOutputFolder(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="49">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'Processor.ChangeOutputFolder(string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="49">In externally visible method 'Processor.ChangeOutputFolder(string)', validate parameter 'directory' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#defaultGet" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="247">Correct the casing of 'default' in member name 'Processor.defaultGet' by changing it to 'Default'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileHasHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.FileHasHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finish()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="561">'Processor.Finish()' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="588">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Processor.Finish()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="576">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Processor.Finish()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="570">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.Finish()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="577">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.Finish()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="577">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.Finish()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="581">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.Finish()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="574">Replace the call to 'string.operator !=(string, string)' in 'Processor.Finish()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="607">Replace the call to 'string.operator !=(string, string)' in 'Processor.Finish()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="623">Replace the call to 'string.operator !=(string, string)' in 'Processor.Finish()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="638">Replace the call to 'string.operator !=(string, string)' in 'Processor.Finish()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatValue(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="661">The 'this' parameter (or 'Me' in Visual Basic) of 'Processor.FormatValue(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDate(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="265">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'Processor.GetDate(string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInt(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="238">Consider replacing the language-specific data type identifier 'Int' in member name 'Processor.GetInt(string)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="242">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Processor.GetInt(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLong(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="226">Consider replacing the language-specific data type identifier 'Long' in member name 'Processor.GetLong(string)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt64(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="230">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'Processor.GetLong(string)' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRunTimeInfo()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="698">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Processor.GetRunTimeInfo()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="704">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.GetRunTimeInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="704">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.GetRunTimeInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="704">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'Processor.GetRunTimeInfo()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.TimeSpan.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="709">Because the behavior of 'TimeSpan.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Processor.GetRunTimeInfo()' with a call to 'TimeSpan.ToString(string, IFormatProvider)'. If the result of 'TimeSpan.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Reference" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="129">In member 'Processor.GetString(string)', correct the casing of 'Reference' in parameter name 'ReferenceName' by changing it to 'reference'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Reference" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="82">In member 'Processor.this[string]', correct the casing of 'Reference' in parameter name 'ReferenceName' by changing it to 'reference'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lineLength" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Processor.lineLength' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Name" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="66">Because property 'Processor.Name' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NameLength" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Processor.NameLength' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostProcess" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.PostProcess' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostProcessData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.PostProcessData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Process" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.Process' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.ProcessData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.ProcessHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessorName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.ProcessorName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reinit(System.String,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Reinit" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="454">Correct the spelling of 'Reinit' in member name 'Processor.Reinit(string, DataTable)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="458">In externally visible method 'Processor.Reinit(string, DataTable)', validate parameter 'outputFile' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReInit(System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Re" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="435">Correct the casing of 'Re' in member name 'Processor.ReInit(string, params string[])' by changing it to 'RE'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="444">In externally visible method 'Processor.ReInit(string, params string[])', validate parameter 'outputFile' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="436">In externally visible method 'Processor.ReInit(string, params string[])', validate parameter 'inputFiles' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#reportHead" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_reportHead()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="342">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'Processor.reportHead.get()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="347">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'Processor.reportHead.get()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ReportHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Processor.ReportHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Run()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="483">'Processor.Run()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="498">Replace the call to 'string.operator ==(string, string)' in 'Processor.Run()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunDataSet()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="530">'Processor.RunDataSet()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="ProcessData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="530">Correct the spelling of the unrecognized token 'ProcessData' in the literal '"ProcessData does not point to a valid method."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetAggregates(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Reference" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="202">In member 'Processor.SetAggregates(params string[])', correct the casing of 'Reference' in parameter name 'ReferenceNames' by changing it to 'reference'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="203">In externally visible method 'Processor.SetAggregates(params string[])', validate parameter 'ReferenceNames' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateNote(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Note" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="292">In member 'Processor.UpdateNote(string, string)', correct the casing of 'Note' in parameter name 'NoteText' by changing it to 'note'.</Issue>
            </Message>
            <Message Id="Reference" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="Processor.cs" Line="292">In member 'Processor.UpdateNote(string, string)', correct the casing of 'Reference' in parameter name 'ReferenceName' by changing it to 'reference'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReadonlyLines" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in type name 'ReadonlyLines' should be expressed as a compound word, 'ReadOnly'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lines" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="DelimitedDocumentReader.cs" Line="454">In member 'ReadonlyLines.ReadonlyLines(string[])', correct the casing of 'Lines' in parameter name 'Lines' by changing it to 'lines'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SortColumn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="SortColumn.cs" Line="18">Replace method 'SortColumn.SortColumn(int, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="asc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="SortColumn.cs" Line="18">In method 'SortColumn.SortColumn(int, bool)', correct the spelling of 'asc' in parameter name 'ascOrder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ValueHolder" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#FormatNewNote(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc" File="ValueHolder.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'ValueHolder.FormatNewNote(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.Doc.DocQuery">
       <Types>
        <Type Name="Aggregation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetMoney(SEIDR.Doc.DocQuery.AggregationType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="op" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="118">Parameter 'op' of 'Aggregation.GetMoney(AggregationType)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNum(SEIDR.Doc.DocQuery.AggregationType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="129">Correct the spelling of 'Num' in member name 'Aggregation.GetNum(AggregationType)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="op" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="129">Parameter 'op' of 'Aggregation.GetNum(AggregationType)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNumAverage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="133">Correct the spelling of 'Num' in member name 'Aggregation.GetNumAverage()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="133">Change 'Aggregation.GetNumAverage()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update(SEIDR.Doc.DocQuery.AggregationType,SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="203">The 'this' parameter (or 'Me' in Visual Basic) of 'Aggregation.Update(AggregationType, TransformedData)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="content" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="203">Parameter 'content' of 'Aggregation.Update(AggregationType, TransformedData)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="op" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="203">Parameter 'op' of 'Aggregation.Update(AggregationType, TransformedData)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateDate(SEIDR.Doc.DocQuery.AggregationType,SEIDR.Doc.DocQuery.TransformedDate)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="136">In externally visible method 'Aggregation.UpdateDate(AggregationType, TransformedDate)', validate parameter 'content' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMoney(SEIDR.Doc.DocQuery.AggregationType,SEIDR.Doc.DocQuery.TransformedMoney)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="174">In externally visible method 'Aggregation.UpdateMoney(AggregationType, TransformedMoney)', validate parameter 'content' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateNumber(SEIDR.Doc.DocQuery.AggregationType,SEIDR.Doc.DocQuery.TransformedNum)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="209">In externally visible method 'Aggregation.UpdateNumber(AggregationType, TransformedNum)', validate parameter 'content' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#valueS" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Aggregation.valueS' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AggregationArg" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ColumnMetaData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="256">The compound word 'MetaData' in member name 'AggregationArg.ColumnMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#operation" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="operation" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="254">Correct the casing of 'operation' in member name 'AggregationArg.operation' by changing it to 'Operation'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AggregationInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Item[SEIDR.Doc.DocRecordColumnInfo]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="77">Use an integral value or string as the parameter to indexer 'AggregationInfo.this[DocRecordColumnInfo]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#owner" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AggregationInfo.owner' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AggregationType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#COUNT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="COUNT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'COUNT' in member name 'AggregationType.COUNT' by changing it to 'Count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'AggregationType.MAX' by changing it to 'Max'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'AggregationType.MIN' by changing it to 'Min'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MOVING_AVERAGE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVERAGE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AVERAGE' in member name 'AggregationType.MOVING_AVERAGE' by changing it to 'Average'.</Issue>
            </Message>
            <Message Id="MOVING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MOVING' in member name 'AggregationType.MOVING_AVERAGE' by changing it to 'Moving'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'AggregationType.MOVING_AVERAGE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SUM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SUM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUM' in member name 'AggregationType.SUM' by changing it to 'Sum'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Aggregator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;SEIDR.Doc.DocRecordColumnInfo&gt;,System.Collections.Generic.IEnumerable`1&lt;SEIDR.Doc.DocQuery.AggregationArg&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="35">In externally visible method 'Aggregator.Aggregator(IEnumerable&lt;DocRecordColumnInfo&gt;, IEnumerable&lt;AggregationArg&gt;)', validate parameter 'groupBy' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Aggregate(SEIDR.Doc.DocRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="19">In externally visible method 'Aggregator.Aggregate(DocRecord)', validate parameter 'add' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Check(SEIDR.Doc.DocRecord,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="43">Replace method 'Aggregator.Check(DocRecord, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Aggregator.cs" Line="46">In externally visible method 'Aggregator.Check(DocRecord, bool)', validate parameter 'compare' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Condition" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.ConditionType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="11">'Condition.Condition(TransformedColumnMetaData, TransformedColumnMetaData, ConditionType)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.TransformedData,SEIDR.Doc.DocQuery.ConditionType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="11">'Condition.Condition(TransformedColumnMetaData, TransformedData, ConditionType)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.TransformedData,SEIDR.Doc.DocQuery.TransformedData,SEIDR.Doc.DocQuery.ConditionType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="11">'Condition.Condition(TransformedData, TransformedData, ConditionType)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddHashColumnPair(SEIDR.Doc.DocRecordColumnInfo,SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="14">'Condition.AddHashColumnPair(DocRecordColumnInfo, DocRecordColumnInfo)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToHashJoin()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="205">'Condition.ConvertToHashJoin()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyHashColumns(SEIDR.Doc.DocRecordColumnInfo[]&amp;,SEIDR.Doc.DocRecordColumnInfo[]&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="19">'Condition.CopyHashColumns(out DocRecordColumnInfo[], out DocRecordColumnInfo[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNULLCondition(SEIDR.Doc.DocQuery.TransformedColumnMetaData,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="55">'Condition.GetNULLCondition(TransformedColumnMetaData, bool)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Matches(SEIDR.Doc.IRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="135">'Condition.Matches(IRecord)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConditionNode" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AddSiblingConditions(SEIDR.Doc.DocQuery.Condition[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="331">'ConditionNode.AddSiblingConditions(params Condition[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckConditions(SEIDR.Doc.IRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="278">'ConditionNode.CheckConditions(IRecord)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConditionCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ConditionCount()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="227">'ConditionNode.ConditionCount.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Item(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="236">'ConditionNode.this.get(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Siblings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Siblings()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="400">'ConditionNode.Siblings.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ConditionTree" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.Condition)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="407">'ConditionTree.ConditionTree(Condition)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCondition(SEIDR.Doc.DocQuery.Condition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="424">'ConditionTree.AddCondition(Condition)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckJoinedConditions(SEIDR.Doc.IRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="443">'ConditionTree.CheckJoinedConditions(IRecord)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConditionCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ConditionCount()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="448">'ConditionTree.ConditionCount.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Optimize()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="Condition.cs" Line="410">'ConditionTree.Optimize()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConditionType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EQUAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EQUAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EQUAL' in member name 'ConditionType.EQUAL' by changing it to 'Equal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GREATER_OR_EQUAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EQUAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EQUAL' in member name 'ConditionType.GREATER_OR_EQUAL' by changing it to 'Equal'.</Issue>
            </Message>
            <Message Id="GREATER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GREATER' in member name 'ConditionType.GREATER_OR_EQUAL' by changing it to 'Greater'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.GREATER_OR_EQUAL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GREATER_THAN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GREATER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GREATER' in member name 'ConditionType.GREATER_THAN' by changing it to 'Greater'.</Issue>
            </Message>
            <Message Id="THAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THAN' in member name 'ConditionType.GREATER_THAN' by changing it to 'Than'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.GREATER_THAN'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HASH_EQUAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EQUAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EQUAL' in member name 'ConditionType.HASH_EQUAL' by changing it to 'Equal'.</Issue>
            </Message>
            <Message Id="HASH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HASH' in member name 'ConditionType.HASH_EQUAL' by changing it to 'Hash'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.HASH_EQUAL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IS_NOT_NULL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'ConditionType.IS_NOT_NULL' by changing it to 'Not'.</Issue>
            </Message>
            <Message Id="NULL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULL' in member name 'ConditionType.IS_NOT_NULL' by changing it to 'Null'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.IS_NOT_NULL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IS_NULL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NULL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULL' in member name 'ConditionType.IS_NULL' by changing it to 'Null'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.IS_NULL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LESS_THAN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LESS' in member name 'ConditionType.LESS_THAN' by changing it to 'Less'.</Issue>
            </Message>
            <Message Id="THAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THAN' in member name 'ConditionType.LESS_THAN' by changing it to 'Than'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.LESS_THAN'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LESS_THAN_OR_EQUAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EQUAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EQUAL' in member name 'ConditionType.LESS_THAN_OR_EQUAL' by changing it to 'Equal'.</Issue>
            </Message>
            <Message Id="LESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LESS' in member name 'ConditionType.LESS_THAN_OR_EQUAL' by changing it to 'Less'.</Issue>
            </Message>
            <Message Id="THAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THAN' in member name 'ConditionType.LESS_THAN_OR_EQUAL' by changing it to 'Than'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.LESS_THAN_OR_EQUAL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NOT_EQUAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EQUAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EQUAL' in member name 'ConditionType.NOT_EQUAL' by changing it to 'Equal'.</Issue>
            </Message>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'ConditionType.NOT_EQUAL' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ConditionType.NOT_EQUAL'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DATE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DATE' in member name 'DataType.DATE' by changing it to 'Date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DBNULL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DBNULL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DBNULL' in member name 'DataType.DBNULL' by changing it to 'Dbnull'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MONEY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MONEY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MONEY' in member name 'DataType.MONEY' by changing it to 'Money'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NUMBER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NUMBER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NUMBER' in member name 'DataType.NUMBER' by changing it to 'Number'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VARCHAR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="VARCHAR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VARCHAR' in member name 'DataType.VARCHAR' by changing it to 'Varchar'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedJoin" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocMetaData,SEIDR.Doc.DocQuery.ConditionTree,SEIDR.Doc.DocQuery.JoinType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedJoin.cs" Line="18">'DelimitedJoin.DelimitedJoin(DocMetaData, ConditionTree, JoinType)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnmatched()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'DelimitedJoin.GetUnmatched()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedQuery" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#doSelect(SEIDR.Doc.DelimitedRecord)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="78">'DelimitedQuery.doSelect(DelimitedRecord)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'DelimitedQuery.Execute()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute(System.String,System.Char)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="42">'DelimitedQuery.Execute(string, char)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="joined" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="46">'DelimitedQuery.Execute(string, char)' declares a variable, 'joined', of type 'IRecord', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Header" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Header()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="36">'DelimitedQuery.Header.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Optimize()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="465">'DelimitedQuery.Optimize()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="465">The 'this' parameter (or 'Me' in Visual Basic) of 'DelimitedQuery.Optimize()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="186">'DelimitedQuery.Parse(string)' has a cyclomatic complexity of 44. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="186">'DelimitedQuery.Parse(string)' has 70 local variables, 42 of which were generated by the compiler. Refactor 'DelimitedQuery.Parse(string)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="186">'DelimitedQuery.Parse(string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="443">'DelimitedQuery.Parse(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="constRight" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="327">'DelimitedQuery.Parse(string)' declares a variable, 'constRight', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="right" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="374">'DelimitedQuery.Parse(string)' declares a variable, 'right', of type 'TransformedColumnMetaData', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="x2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="324">'DelimitedQuery.Parse(string)' declares a variable, 'x2', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="199">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="232">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="239">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="288">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="292">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="330">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="332">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedQuery.cs" Line="415">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DelimitedQuery.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DelimitedRecordHashTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="HashTable" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'HashTable' in type name 'DelimitedRecordHashTable' exists as a discrete term. If your usage is intended to be single word, case it as 'Hashtable'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Columns" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="30">In member 'DelimitedRecordHashTable.DelimitedRecordHashTable(IEnumerable&lt;string&gt;)', correct the casing of 'Columns' in parameter name 'Columns' by changing it to 'columns'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Columns" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="18">In member 'DelimitedRecordHashTable.DelimitedRecordHashTable(params string[])', correct the casing of 'Columns' in parameter name 'Columns' by changing it to 'columns'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Add(System.Collections.Generic.IEnumerable`1&lt;SEIDR.Doc.DelimitedRecord&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="171">In externally visible method 'DelimitedRecordHashTable.Add(IEnumerable&lt;DelimitedRecord&gt;)', validate parameter 'newRecordList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckCount(SEIDR.Doc.DelimitedRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="129">In member 'DelimitedRecordHashTable.CheckCount(DelimitedRecord)', correct the casing of 'Value' in parameter name 'Value' by changing it to 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckCount(System.UInt64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="117">In member 'DelimitedRecordHashTable.CheckCount(ulong)', correct the casing of 'Value' in parameter name 'Value' by changing it to 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckHash(SEIDR.Doc.DelimitedRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="59">In externally visible method 'DelimitedRecordHashTable.CheckHash(DelimitedRecord)', validate parameter 'record' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[SEIDR.Doc.DelimitedRecord]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="41">Use an integral value or string as the parameter to indexer 'DelimitedRecordHashTable.this[DelimitedRecord]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.UInt64,System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="100">Redesign indexer 'DelimitedRecordHashTable.this[ulong, int]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.UInt64]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DelimitedRecordHashTable.cs" Line="69">Use an integral value or string as the parameter to indexer 'DelimitedRecordHashTable.this[ulong]'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocQuery" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'DocQuery' conflicts in whole or in part with the namespace name 'SEIDR.Doc.DocQuery'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.DocQuerySettings)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQuery.cs" Line="13">In method 'DocQuery.DocQuery(DocQuerySettings)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Files" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQuery.cs" Line="12">Change 'List&lt;DocMetaData&gt;' in 'DocQuery.Files' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Files(System.Collections.Generic.List`1&lt;SEIDR.Doc.DocMetaData&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQuery.cs" Line="12">'DocQuery.Files.set(List&lt;DocMetaData&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DocQueryParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Parse(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Query" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQueryParser.cs" Line="25">In member 'DocQueryParser.Parse(string)', correct the casing of 'Query' in parameter name 'QueryText' by changing it to 'query'.</Issue>
            </Message>
            <Message Id="LastKeyWord" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQueryParser.cs" Line="29">'DocQueryParser.Parse(string)' declares a variable, 'LastKeyWord', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="p" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQueryParser.cs" Line="27">'DocQueryParser.Parse(string)' declares a variable, 'p', of type 'ConditionParser', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQueryParser.cs" Line="34">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'DocQueryParser.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocQuerySettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetExceptionOnParseFailure(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="DocQuerySettings.cs" Line="22">Replace method 'DocQuerySettings.SetExceptionOnParseFailure(bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JoinType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FULL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FULL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FULL' in member name 'JoinType.FULL' by changing it to 'Full'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INNER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INNER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INNER' in member name 'JoinType.INNER' by changing it to 'Inner'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INNER_EXPLICIT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXPLICIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXPLICIT' in member name 'JoinType.INNER_EXPLICIT' by changing it to 'Explicit'.</Issue>
            </Message>
            <Message Id="INNER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INNER' in member name 'JoinType.INNER_EXPLICIT' by changing it to 'Inner'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'JoinType.INNER_EXPLICIT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LEFT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LEFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LEFT' in member name 'JoinType.LEFT' by changing it to 'Left'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NOT_A_JOIN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="JOIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'JOIN' in member name 'JoinType.NOT_A_JOIN' by changing it to 'Join'.</Issue>
            </Message>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'JoinType.NOT_A_JOIN' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'JoinType.NOT_A_JOIN'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RIGHT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RIGHT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RIGHT' in member name 'JoinType.RIGHT' by changing it to 'Right'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TCNull" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.DataType)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="51">'TCNull.TCNull(DataType)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="d" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="51">Parameter 'd' of 'TCNull.TCNull(DataType)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedColumn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="metaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="22">In member 'TransformedColumn.TransformedColumn(TransformedColumnMetaData, TransformedData)', the compound word 'metaData' in parameter name 'metaData' exists as a discrete term. If your usage is intended to be single word, case it as 'metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Evaluate(SEIDR.Doc.DocQuery.TransformedColumn,SEIDR.Doc.DocQuery.TransformedColumn,SEIDR.Doc.DocQuery.ConditionType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="13">In externally visible method 'TransformedColumn.Evaluate(TransformedColumn, TransformedColumn, ConditionType)', validate parameter 'left' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="13">In externally visible method 'TransformedColumn.Evaluate(TransformedColumn, TransformedColumn, ConditionType)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MetaData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="32">The compound word 'MetaData' in member name 'TransformedColumn.MetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedColumnMetaData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MetaData' in type name 'TransformedColumnMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ColumnName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TransformedColumnMetaData.ColumnName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetColumn(SEIDR.Doc.IRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="147">In externally visible method 'TransformedColumnMetaData.GetColumn(IRecord)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Matches(SEIDR.Doc.DocRecordColumnInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="116">In externally visible method 'TransformedColumnMetaData.Matches(DocRecordColumnInfo)', validate parameter 'column' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(SEIDR.Doc.DocQuery.TransformedColumnMetaData):SEIDR.Doc.DocRecordColumnInfo" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="123">In method 'TransformedColumnMetaData.implicit operator DocRecordColumnInfo(TransformedColumnMetaData)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="123">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'TransformedColumnMetaData.implicit operator DocRecordColumnInfo(TransformedColumnMetaData)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="124">In externally visible method 'TransformedColumnMetaData.implicit operator DocRecordColumnInfo(TransformedColumnMetaData)', validate parameter 'a' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OwnerAlias" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TransformedColumnMetaData.OwnerAlias' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transform" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TransformedColumnMetaData.Transform' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TransformedColumnMetaData.Type' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedColumnMetaDataCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MetaData' in type name 'TransformedColumnMetaDataCollection' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'TransformedColumnMetaDataCollection' so that it does not end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.TransformedColumnMetaData[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="metaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="73">In member 'TransformedColumnMetaDataCollection.TransformedColumnMetaDataCollection(params TransformedColumnMetaData[])', the compound word 'metaData' in parameter name 'metaData' exists as a discrete term. If your usage is intended to be single word, case it as 'metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddMetaData(SEIDR.Doc.DocQuery.TransformedColumnMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="38">In member 'TransformedColumnMetaDataCollection.AddMetaData(TransformedColumnMetaData)', the compound word 'MetaData' in parameter name 'newMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="38">The compound word 'MetaData' in member name 'TransformedColumnMetaDataCollection.AddMetaData(TransformedColumnMetaData)' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetColumn(System.String,System.String,SEIDR.Doc.IRecord)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="88">In member 'TransformedColumnMetaDataCollection.GetColumn(string, string, IRecord)', correct the casing of 'Column' in parameter name 'ColumnName' by changing it to 'column'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String,System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Column" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="23">In member 'TransformedColumnMetaDataCollection.this[string, string]', correct the casing of 'Column' in parameter name 'Column' by changing it to 'column'.</Issue>
            </Message>
            <Message TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="23">Redesign indexer 'TransformedColumnMetaDataCollection.this[string, string]' to use a single string or integer value as its index.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveMetaData(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="54">In member 'TransformedColumnMetaDataCollection.RemoveMetaData(string, string)', the compound word 'MetaData' in parameter name 'oldMetaDataColumn' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="54">The compound word 'MetaData' in member name 'TransformedColumnMetaDataCollection.RemoveMetaData(string, string)' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Owner" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="54">In member 'TransformedColumnMetaDataCollection.RemoveMetaData(string, string)', correct the casing of 'Owner' in parameter name 'OwnerAlias' by changing it to 'owner'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMetaData(SEIDR.Doc.DocQuery.TransformedColumnMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="65">In member 'TransformedColumnMetaDataCollection.UpdateMetaData(TransformedColumnMetaData)', the compound word 'MetaData' in parameter name 'newMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="65">The compound word 'MetaData' in member name 'TransformedColumnMetaDataCollection.UpdateMetaData(TransformedColumnMetaData)' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumnMetaDataCollection.cs" Line="66">In externally visible method 'TransformedColumnMetaDataCollection.UpdateMetaData(TransformedColumnMetaData)', validate parameter 'newMetaData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'TransformedData' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.DataType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="90">In method 'TransformedData.TransformedData(DataType)', consider providing a more meaningful name than parameter name 'd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equal(SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'TransformedData.Equal(TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Greater(SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'TransformedData.Greater(TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GreaterEqual(SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'TransformedData.GreaterEqual(TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Less(SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'TransformedData.Less(TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LessEqual(SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'TransformedData.LessEqual(TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NiX(SEIDR.Doc.DocQuery.TransformedData,SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Ni" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="100">Correct the casing of 'Ni' in member name 'TransformedData.NiX(TransformedData, TransformedData)' by changing it to 'NI'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="100">In method 'TransformedData.NiX(TransformedData, TransformedData)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="100">In method 'TransformedData.NiX(TransformedData, TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="101">In externally visible method 'TransformedData.NiX(TransformedData, TransformedData)', validate parameter 'a' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="101">In externally visible method 'TransformedData.NiX(TransformedData, TransformedData)', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotEqual(SEIDR.Doc.DocQuery.TransformedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'TransformedData.NotEqual(TransformedData)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="90">The property name 'TransformedData.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedDate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BasicTransform(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="117">In member 'TransformedDate.BasicTransform(string, string)', correct the casing of 'Format' in parameter name 'Format' by changing it to 'format'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BasicTransformAddDays(System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="124">In member 'TransformedDate.BasicTransformAddDays(string, string, int)', correct the casing of 'Format' in parameter name 'Format' by changing it to 'format'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BasicTransformAddMinutes(System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="131">In member 'TransformedDate.BasicTransformAddMinutes(string, string, int)', correct the casing of 'Format' in parameter name 'Format' by changing it to 'format'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BasicTransformAddMonths(System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="145">In member 'TransformedDate.BasicTransformAddMonths(string, string, int)', correct the casing of 'Format' in parameter name 'Format' by changing it to 'format'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BasicTransformAddWeeks(System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="138">In member 'TransformedDate.BasicTransformAddWeeks(string, string, int)', correct the casing of 'Format' in parameter name 'Format' by changing it to 'format'.</Issue>
            </Message>
            <Message Id="weeks*7" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="141">Correct the potential overflow in the operation 'weeks*7' in 'TransformedDate.BasicTransformAddWeeks(string, string, int)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BasicTransformAddYears(System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="152">In member 'TransformedDate.BasicTransformAddYears(string, string, int)', correct the casing of 'Format' in parameter name 'Format' by changing it to 'format'.</Issue>
            </Message>
            <Message Id="Years" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="152">In member 'TransformedDate.BasicTransformAddYears(string, string, int)', correct the casing of 'Years' in parameter name 'Years' by changing it to 'years'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedNum" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Num' in type name 'TransformedNum'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BasicTransformMultiply(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mult" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="318">In method 'TransformedNum.BasicTransformMultiply(string, int)', correct the spelling of 'mult' in parameter name 'mult' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformedVarchar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Varchar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Varchar' in type name 'TransformedVarchar'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BasicTransform(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Trim" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="396">In member 'TransformedVarchar.BasicTransform(string, bool)', correct the casing of 'Trim' in parameter name 'Trim' by changing it to 'trim'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckChars(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery" File="TransformedColumn.cs" Line="422">The 'this' parameter (or 'Me' in Visual Basic) of 'TransformedVarchar.CheckChars(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.Doc.DocQuery.Predicates">
       <Types>
        <Type Name="BinaryCondition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'BinaryCondition' to protected.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ConditionParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Parse(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="84">'ConditionParser.Parse(string)' has a cyclomatic complexity of 41. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="168">'work', a variable, is cast to type 'BasicLeaf' multiple times in method 'ConditionParser.Parse(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="109">'work', a variable, is cast to type 'JoinCondition' multiple times in method 'ConditionParser.Parse(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="114">'work', a variable, is cast to type 'MergedJoinCondition' multiple times in method 'ConditionParser.Parse(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="93">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ConditionParser.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="158">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ConditionParser.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="161">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ConditionParser.Parse(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseLeafExpression(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="ConditionParser.cs" Line="40">'ConditionParser.ParseLeafExpression(string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="iCondition" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="i" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'i' in type name 'iCondition' by changing it to 'I'.</Issue>
          </Message>
          <Message Id="I" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Interface" Certainty="95" Level="Error">Prefix interface name 'iCondition' with 'I'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SetNext(SEIDR.Doc.DocQuery.Predicates.iCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Next" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In virtual/interface member 'iCondition.SetNext(iCondition)', rename parameter 'next' so that it no longer conflicts with the reserved language keyword 'Next'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IsNullCondition" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.TransformedColumnMetaData,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="IsNullCondition.cs" Line="15">'IsNullCondition.IsNullCondition(TransformedColumnMetaData, bool)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JoinCondition" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.ConditionType,SEIDR.Doc.DocQuery.Predicates.LeafCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="45">'JoinCondition.JoinCondition(ConditionType, LeafCondition)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.ConditionType,SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.TransformedColumnMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="54">'JoinCondition.JoinCondition(ConditionType, TransformedColumnMetaData, TransformedColumnMetaData)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Merge(SEIDR.Doc.DocQuery.Predicates.JoinCondition,SEIDR.Doc.DocQuery.Predicates.JoinCondition,SEIDR.Doc.DocQuery.Predicates.MergedJoinCondition&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="73">'JoinCondition.Merge(JoinCondition, JoinCondition, ref MergedJoinCondition)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetNext(SEIDR.Doc.DocQuery.Predicates.iCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="67">'next', a parameter, is cast to type 'LeafCondition' multiple times in method 'JoinCondition.SetNext(iCondition)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRightSide(SEIDR.Doc.DocQuery.Predicates.LeafCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="51">'JoinCondition.SetRightSide(LeafCondition)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MergedJoinCondition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.Doc.DocQuery.ConditionType,SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.TransformedColumnMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="121">In externally visible method 'MergedJoinCondition.MergedJoinCondition(ConditionType, TransformedColumnMetaData, TransformedColumnMetaData)', validate parameter 'initLeft' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="121">In externally visible method 'MergedJoinCondition.MergedJoinCondition(ConditionType, TransformedColumnMetaData, TransformedColumnMetaData)', validate parameter 'initRight' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddPair(SEIDR.Doc.DocQuery.TransformedColumnMetaData,SEIDR.Doc.DocQuery.TransformedColumnMetaData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="127">In externally visible method 'MergedJoinCondition.AddPair(TransformedColumnMetaData, TransformedColumnMetaData)', validate parameter 'leftNew' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="JoinCondition.cs" Line="127">In externally visible method 'MergedJoinCondition.AddPair(TransformedColumnMetaData, TransformedColumnMetaData)', validate parameter 'rightNew' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RootCondition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MergeWithRoot(SEIDR.Doc.DocQuery.Predicates.RootCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="RootCondition.cs" Line="55">In method 'RootCondition.MergeWithRoot(RootCondition)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\DocQuery\Predicates" File="RootCondition.cs" Line="56">In externally visible method 'RootCondition.MergeWithRoot(RootCondition)', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnaryCondition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'UnaryCondition' to protected.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.Doc.FileQuery">
       <Types>
        <Type Name="FileJoinCondition" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'FileJoinCondition' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ColumnLeft" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileJoinCondition.ColumnLeft' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColumnRight" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileJoinCondition.ColumnRight' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Relation" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileJoinCondition.Relation' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileJoinConditionGroup" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'FileJoinConditionGroup' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#And(SEIDR.Doc.FileQuery.FileJoinConditionGroup,SEIDR.Doc.FileQuery.FileJoinConditionGroup)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\FileQuery" File="FileJoinConditionGroup.cs" Line="15">'FileJoinConditionGroup.And(FileJoinConditionGroup, FileJoinConditionGroup)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConditionGroups" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileJoinConditionGroup.ConditionGroups' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Or(SEIDR.Doc.FileQuery.FileJoinConditionGroup,SEIDR.Doc.FileQuery.FileJoinConditionGroup)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\FileQuery" File="FileJoinConditionGroup.cs" Line="27">'FileJoinConditionGroup.Or(FileJoinConditionGroup, FileJoinConditionGroup)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="a" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\FileQuery" File="FileJoinConditionGroup.cs" Line="27">Parameter 'a' of 'FileJoinConditionGroup.Or(FileJoinConditionGroup, FileJoinConditionGroup)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="b" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Doc\FileQuery" File="FileJoinConditionGroup.cs" Line="27">Parameter 'b' of 'FileJoinConditionGroup.Or(FileJoinConditionGroup, FileJoinConditionGroup)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.META">
       <Types>
        <Type Name="NestedTokenCondition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Match(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Token" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenCondition.cs" Line="14">In member 'NestedTokenCondition.Match(string)', correct the casing of 'Token' in parameter name 'Token' by changing it to 'token'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnNestToken" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Un" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenCondition.cs" Line="12">Correct the casing of 'Un' in member name 'NestedTokenCondition.UnNestToken' by changing it to 'UN'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NestedTokenCondition+NestDirection" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UnNest" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Un" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Un' in member name 'NestedTokenCondition.NestDirection.UnNest' by changing it to 'UN'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NestedTokenizer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tokenizer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tokenizer' in type name 'NestedTokenizer'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#NestingConditions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenizer.cs" Line="11">Change 'List&lt;NestedTokenCondition&gt;' in 'NestedTokenizer.NestingConditions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_NestingConditions(System.Collections.Generic.List`1&lt;SEIDR.META.NestedTokenCondition&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenizer.cs" Line="11">'NestedTokenizer.NestingConditions.set(List&lt;NestedTokenCondition&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#TokenTree" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_TokenTree(SEIDR.META.NestedTokenNode)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenizer.cs" Line="12">'NestedTokenizer.TokenTree.set(NestedTokenNode)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Working" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'NestedTokenizer.Working' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NestedTokenNode" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddChild(System.String,SEIDR.META.NestedTokenCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Token" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="75">In member 'NestedTokenNode.AddChild(string, NestedTokenCondition)', correct the casing of 'Token' in parameter name 'TokenValue' by changing it to 'token'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckConditions(System.Collections.Generic.IList`1&lt;SEIDR.META.NestedTokenCondition&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Conditions" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="64">In member 'NestedTokenNode.CheckConditions(IList&lt;NestedTokenCondition&gt;, string)', correct the casing of 'Conditions' in parameter name 'Conditions' by changing it to 'conditions'.</Issue>
            </Message>
            <Message Id="Token" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="64">In member 'NestedTokenNode.CheckConditions(IList&lt;NestedTokenCondition&gt;, string)', correct the casing of 'Token' in parameter name 'Token' by changing it to 'token'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckTokenConditions(SEIDR.META.NestedTokenCondition,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Picked" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="41">In member 'NestedTokenNode.CheckTokenConditions(NestedTokenCondition, string)', correct the casing of 'Picked' in parameter name 'PickedToken' by changing it to 'picked'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Children" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Children(System.Collections.Generic.List`1&lt;SEIDR.META.NestedTokenNode&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="84">'NestedTokenNode.Children.set(List&lt;NestedTokenNode&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetChildren()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="80">Change 'NestedTokenNode.GetChildren()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRoot()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="NestedTokenNode.cs" Line="86">Change 'NestedTokenNode.GetRoot()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateDataRow`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Record" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="80">In member 'ObjectExtensions.CreateDataRow&lt;RT&gt;(RT)', correct the casing of 'Record' in parameter name 'Record' by changing it to 'record'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="80">On method 'ObjectExtensions.CreateDataRow&lt;RT&gt;(RT)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataRowView`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="91">In method 'ObjectExtensions.CreateDataRowView&lt;RT&gt;(RT)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Record" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="90">In member 'ObjectExtensions.CreateDataRowView&lt;RT&gt;(RT)', correct the casing of 'Record' in parameter name 'Record' by changing it to 'record'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="90">On method 'ObjectExtensions.CreateDataRowView&lt;RT&gt;(RT)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="91">Be sure to set the DataTable Locale property wherever 'ObjectExtensions.CreateDataRowView&lt;RT&gt;(RT)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateInstance`1(System.Data.DataRow)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="60">On method 'ObjectExtensions.CreateInstance&lt;RT&gt;(DataRow)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToTable(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.String,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="24">In method 'ObjectExtensions.ToTable(this IEnumerable&lt;object&gt;, string, params string[])', object 'new DataTable()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new DataTable()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="22">In member 'ObjectExtensions.ToTable(this IEnumerable&lt;object&gt;, string, params string[])', correct the casing of 'Name' in parameter name 'Name' by changing it to 'name'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="32">Method 'ObjectExtensions.ToTable(this IEnumerable&lt;object&gt;, string, params string[])' passes 'propertyList limits properties too much - No properties remain to add to the Table' as the 'paramName' argument to a 'ArgumentOutOfRangeException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="24">Be sure to set the DataTable Locale property wherever 'ObjectExtensions.ToTable(this IEnumerable&lt;object&gt;, string, params string[])' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="ObjectExtensions.cs" Line="23">In externally visible method 'ObjectExtensions.ToTable(this IEnumerable&lt;object&gt;, string, params string[])', validate parameter 'obj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Tokenizer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tokenizer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tokenizer' in type name 'Tokenizer'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'Tokenizer' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetNextToken()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="109">Change 'Tokenizer.GetNextToken()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTokens(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="77">In method 'Tokenizer.GetTokens(string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTokens(System.String,System.Char[],System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="93">Replace method 'Tokenizer.GetTokens(string, char[], bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="93">In method 'Tokenizer.GetTokens(string, char[], bool)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="98">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Tokenizer.GetTokens(string, char[], bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'Tokenizer.GetTokens(string, char[], bool)', validate parameter 'specialTokens' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MergeUntil(System.String&amp;,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="25">Replace method 'Tokenizer.MergeUntil(ref string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="25">Consider a design that does not require that 'combineString' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Peek(System.String&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="117">Consider a design that does not require that 'Token' be an out parameter.</Issue>
            </Message>
            <Message Id="Token" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\META" File="Tokenizer.cs" Line="117">In member 'Tokenizer.Peek(out string)', correct the casing of 'Token' in parameter name 'Token' by changing it to 'token'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.OperationServiceModels">
       <Types>
        <Type Name="Batch" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,SEIDR.DataBase.DatabaseManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="19">Replace method 'Batch.Batch(int, DatabaseManager)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="19">In member 'Batch.Batch(int, DatabaseManager)', correct the casing of 'Batch' in parameter name 'BatchProfileID' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="19">In member 'Batch.Batch(int, DatabaseManager)', correct the casing of 'ID' in parameter name 'BatchProfileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddFile(System.IO.FileInfo,System.Nullable`1&lt;System.DateTime&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="156">Replace method 'Batch.AddFile(FileInfo, DateTime?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="156">In member 'Batch.AddFile(FileInfo, DateTime?)', correct the casing of 'File' in parameter name 'FileDate' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="157">In externally visible method 'Batch.AddFile(FileInfo, DateTime?)', validate parameter 'file' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddFile(System.String,System.Nullable`1&lt;System.DateTime&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="149">Replace method 'Batch.AddFile(string, DateTime?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="149">In member 'Batch.AddFile(string, DateTime?)', correct the casing of 'File' in parameter name 'FileDate' by changing it to 'file'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="149">In member 'Batch.AddFile(string, DateTime?)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AttemptCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_AttemptCount(System.Int16)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="58">'Batch.AttemptCount.set(short)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BatchDate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_BatchDate(System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="44">'Batch.BatchDate.set(DateTime)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BatchID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="19">Correct the casing of 'ID' in member name 'Batch.BatchID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_BatchID(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="19">'Batch.BatchID.set(int?)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BatchProfileID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="42">Correct the casing of 'ID' in member name 'Batch.BatchProfileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BatchTypeCode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_BatchTypeCode(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="25">'Batch.BatchTypeCode.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DeleteFile(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="168">In member 'Batch.DeleteFile(string)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="168">The 'this' parameter (or 'Me' in Visual Basic) of 'Batch.DeleteFile(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FailureNotification" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_FailureNotification(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="61">'Batch.FailureNotification.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FileXML" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="137">Correct the casing of 'XML' in member name 'Batch.FileXML' by changing it to 'Xml'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="137">The 'this' parameter (or 'Me' in Visual Basic) of 'Batch.FileXML' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForceOperationSequence" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ForceOperationSequence(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="32">'Batch.ForceOperationSequence.set(bool)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#IgnoreParents" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_IgnoreParents(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="31">'Batch.IgnoreParents.set(bool)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Operation" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Operation(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="66">'Batch.Operation.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OperationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="64">Correct the casing of 'ID' in member name 'Batch.OperationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_OperationID(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="64">'Batch.OperationID.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OperationSchema" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_OperationSchema(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="67">'Batch.OperationSchema.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Profile_OperationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="63">Correct the casing of 'ID' in member name 'Batch.Profile_OperationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="63">Remove the underscores from member name 'Batch.Profile_OperationID'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Profile_OperationID(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="63">'Batch.Profile_OperationID.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Register(SEIDR.DataBase.DatabaseManager,System.Int32,System.Collections.Generic.List`1&lt;SEIDR.OperationServiceModels.Batch_File&gt;,System.Collections.Generic.IEnumerable`1&lt;SEIDR.OperationServiceModels.Batch_File&gt;&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="86">Consider a design that does not require that 'rejected' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="86">Change 'List&lt;Batch_File&gt;' in 'Batch.Register(DatabaseManager, int, List&lt;Batch_File&gt;, out IEnumerable&lt;Batch_File&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="86">In member 'Batch.Register(DatabaseManager, int, List&lt;Batch_File&gt;, out IEnumerable&lt;Batch_File&gt;)', correct the casing of 'Batch' in parameter name 'BatchProfileID' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="86">In member 'Batch.Register(DatabaseManager, int, List&lt;Batch_File&gt;, out IEnumerable&lt;Batch_File&gt;)', correct the casing of 'ID' in parameter name 'BatchProfileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="mgr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="86">In method 'Batch.Register(DatabaseManager, int, List&lt;Batch_File&gt;, out IEnumerable&lt;Batch_File&gt;)', correct the spelling of 'mgr' in parameter name 'mgr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="92">In externally visible method 'Batch.Register(DatabaseManager, int, List&lt;Batch_File&gt;, out IEnumerable&lt;Batch_File&gt;)', validate parameter 'mgr' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMissingThreadID(System.Byte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="38">Correct the casing of 'ID' in member name 'Batch.SetMissingThreadID(byte)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="38">In member 'Batch.SetMissingThreadID(byte)', correct the casing of 'ID' in parameter name 'ID' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Step" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Step(System.Int16)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="48">'Batch.Step.set(short)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SuccessNotification" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_SuccessNotification(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="60">'Batch.SuccessNotification.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ThreadID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="30">Correct the casing of 'ID' in member name 'Batch.ThreadID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Version" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Version(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch.cs" Line="72">'Batch.Version.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Batch_File" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Batch_File'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Batch_FileID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="13">Correct the casing of 'ID' in member name 'Batch_File.Batch_FileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="13">Remove the underscores from member name 'Batch_File.Batch_FileID'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Batch_FileID(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="13">'Batch_File.Batch_FileID.set(int?)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BatchID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="14">Correct the casing of 'ID' in member name 'Batch_File.BatchID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyTo(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Full" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="103">In member 'Batch_File.CopyTo(string, bool)', correct the casing of 'Full' in parameter name 'FullPath' by changing it to 'full'.</Issue>
            </Message>
            <Message Id="Update" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="103">In member 'Batch_File.CopyTo(string, bool)', correct the casing of 'Update' in parameter name 'UpdatePath' by changing it to 'update'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromFileInfo(System.IO.FileInfo,System.Nullable`1&lt;System.DateTime&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="59">In externally visible method 'Batch_File.FromFileInfo(FileInfo, DateTime?)', validate parameter 'file' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveTo(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Full" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="87">In member 'Batch_File.MoveTo(string)', correct the casing of 'Full' in parameter name 'FullPath' by changing it to 'full'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToXML(System.Collections.Generic.IEnumerable`1&lt;SEIDR.OperationServiceModels.Batch_File&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="71">Correct the casing of 'XML' in member name 'Batch_File.ToXML(IEnumerable&lt;Batch_File&gt;)' by changing it to 'Xml'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="79">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Batch_File.ToXML(IEnumerable&lt;Batch_File&gt;)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="Batch_File.cs" Line="79">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Batch_File.ToXML(IEnumerable&lt;Batch_File&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BatchProfile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BatchProfileID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="19">Correct the casing of 'ID' in member name 'BatchProfile.BatchProfileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_BatchProfileID(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="19">'BatchProfile.BatchProfileID.set(int?)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BatchTypeCode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_BatchTypeCode(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="20">'BatchProfile.BatchTypeCode.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DayOffset" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_DayOffset(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="30">'BatchProfile.DayOffset.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ExecutionThread" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ExecutionThread(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="23">'BatchProfile.ExecutionThread.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FileMask" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_FileMask(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="25">'BatchProfile.FileMask.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#InputFileDateFormat" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_InputFileDateFormat(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="31">'BatchProfile.InputFileDateFormat.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#InputFolder" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_InputFolder(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="24">'BatchProfile.InputFolder.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MaximumFileCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_MaximumFileCount(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="33">'BatchProfile.MaximumFileCount.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MinimumFileCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_MinimumFileCount(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="32">'BatchProfile.MinimumFileCount.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MultiFile" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="37">Correct the spelling of 'Multi' in member name 'BatchProfile.MultiFile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepFileInfo(System.IO.FileInfo[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="42">Change 'List&lt;Batch_File&gt;' in 'BatchProfile.PrepFileInfo(FileInfo[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScheduleID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="29">Correct the casing of 'ID' in member name 'BatchProfile.ScheduleID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_ScheduleID(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="BatchProfile.cs" Line="29">'BatchProfile.ScheduleID.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="BATCHSTATUS" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="BATCHSTATUS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'BATCHSTATUS' in type name 'BATCHSTATUS' by changing it to 'Batchstatus'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'BATCHSTATUS' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#COMPLETE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="COMPLETE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'COMPLETE' in member name 'BATCHSTATUS.COMPLETE' by changing it to 'Complete'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#COMPLETE_INVAlID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Al" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Al' in member name 'BATCHSTATUS.COMPLETE_INVAlID' by changing it to 'AL'.</Issue>
            </Message>
            <Message Id="COMPLETE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'COMPLETE' in member name 'BATCHSTATUS.COMPLETE_INVAlID' by changing it to 'Complete'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'BATCHSTATUS.COMPLETE_INVAlID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="INV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INV' in member name 'BATCHSTATUS.COMPLETE_INVAlID' by changing it to 'Inv'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.COMPLETE_INVAlID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INVALID_SEQUENCE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INVALID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INVALID' in member name 'BATCHSTATUS.INVALID_SEQUENCE' by changing it to 'Invalid'.</Issue>
            </Message>
            <Message Id="SEQUENCE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SEQUENCE' in member name 'BATCHSTATUS.INVALID_SEQUENCE' by changing it to 'Sequence'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.INVALID_SEQUENCE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INVALID_STOP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INVALID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INVALID' in member name 'BATCHSTATUS.INVALID_STOP' by changing it to 'Invalid'.</Issue>
            </Message>
            <Message Id="STOP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STOP' in member name 'BATCHSTATUS.INVALID_STOP' by changing it to 'Stop'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.INVALID_STOP'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PARTIAL_SUCCESS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PARTIAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PARTIAL' in member name 'BATCHSTATUS.PARTIAL_SUCCESS' by changing it to 'Partial'.</Issue>
            </Message>
            <Message Id="SUCCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUCCESS' in member name 'BATCHSTATUS.PARTIAL_SUCCESS' by changing it to 'Success'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.PARTIAL_SUCCESS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REGISTERED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="REGISTERED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'REGISTERED' in member name 'BATCHSTATUS.REGISTERED' by changing it to 'Registered'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REGISTERED_FILES" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FILES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FILES' in member name 'BATCHSTATUS.REGISTERED_FILES' by changing it to 'Files'.</Issue>
            </Message>
            <Message Id="REGISTERED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'REGISTERED' in member name 'BATCHSTATUS.REGISTERED_FILES' by changing it to 'Registered'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.REGISTERED_FILES'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SKIP_STEP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SKIP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SKIP' in member name 'BATCHSTATUS.SKIP_STEP' by changing it to 'Skip'.</Issue>
            </Message>
            <Message Id="STEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEP' in member name 'BATCHSTATUS.SKIP_STEP' by changing it to 'Step'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.SKIP_STEP'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STEP_SUCCESS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="STEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEP' in member name 'BATCHSTATUS.STEP_SUCCESS' by changing it to 'Step'.</Issue>
            </Message>
            <Message Id="SUCCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUCCESS' in member name 'BATCHSTATUS.STEP_SUCCESS' by changing it to 'Success'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.STEP_SUCCESS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STOP_ACKNOWLEDGED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ACKNOWLEDGED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ACKNOWLEDGED' in member name 'BATCHSTATUS.STOP_ACKNOWLEDGED' by changing it to 'Acknowledged'.</Issue>
            </Message>
            <Message Id="STOP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STOP' in member name 'BATCHSTATUS.STOP_ACKNOWLEDGED' by changing it to 'Stop'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.STOP_ACKNOWLEDGED'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STOP_FULFILLED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FULFILLED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FULFILLED' in member name 'BATCHSTATUS.STOP_FULFILLED' by changing it to 'Fulfilled'.</Issue>
            </Message>
            <Message Id="STOP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STOP' in member name 'BATCHSTATUS.STOP_FULFILLED' by changing it to 'Stop'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.STOP_FULFILLED'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STOP_REQUESTED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="REQUESTED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'REQUESTED' in member name 'BATCHSTATUS.STOP_REQUESTED' by changing it to 'Requested'.</Issue>
            </Message>
            <Message Id="STOP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STOP' in member name 'BATCHSTATUS.STOP_REQUESTED' by changing it to 'Stop'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.STOP_REQUESTED'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WORKING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WORKING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'WORKING' in member name 'BATCHSTATUS.WORKING' by changing it to 'Working'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WORKING_ERROR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ERROR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ERROR' in member name 'BATCHSTATUS.WORKING_ERROR' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="WORKING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'WORKING' in member name 'BATCHSTATUS.WORKING_ERROR' by changing it to 'Working'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'BATCHSTATUS.WORKING_ERROR'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="iOperation" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="i" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'i' in type name 'iOperation' by changing it to 'I'.</Issue>
          </Message>
          <Message Id="I" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Interface" Certainty="95" Level="Error">Prefix interface name 'iOperation' with 'I'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Execute(SEIDR.OperationServiceModels.Batch,System.Data.DataSet,System.String&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning">Consider a design that does not require that 'BatchStatus' be a reference parameter.</Issue>
            </Message>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'iOperation.Execute(Batch, DataSet, ref string)', correct the casing of 'Batch' in parameter name 'BatchStatus' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'iOperation.Execute(Batch, DataSet, ref string)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetResultNotification(System.Boolean,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'iOperation.GetResultNotification(bool, string)', correct the casing of 'Batch' in parameter name 'BatchStatus' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="Execute" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'iOperation.GetResultNotification(bool, string)', correct the casing of 'Execute' in parameter name 'ExecuteResult' by changing it to 'execute'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Manager" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error">Because property 'iOperation.Manager' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="iOperationMetaData" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MetaData' in type name 'iOperationMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata'.</Issue>
          </Message>
          <Message Id="i" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'i' in type name 'iOperationMetaData' by changing it to 'I'.</Issue>
          </Message>
          <Message Id="I" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Interface" Certainty="95" Level="Error">Prefix interface name 'iOperationMetaData' with 'I'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ThreadID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'iOperationMetaData.ThreadID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IOperatorManager" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DistributeBatches(System.Collections.Generic.IEnumerable`1&lt;SEIDR.OperationServiceModels.Batch&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Batches" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.DistributeBatches(IEnumerable&lt;Batch&gt;)', correct the casing of 'Batches' in parameter name 'Batches' by changing it to 'batches'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileSize(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.GetFileSize(string)', correct the casing of 'File' in parameter name 'FilePath' by changing it to 'file'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOperator(SEIDR.OperationServiceModels.OperatorType,System.Byte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOperatorManager.GetOperator(OperatorType, byte)', correct the casing of 'ID' in parameter name 'ID' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOperatorByBatchID(SEIDR.OperationServiceModels.OperatorType,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.GetOperatorByBatchID(OperatorType, int)', correct the casing of 'Batch' in parameter name 'BatchID' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'IOperatorManager.GetOperatorByBatchID(OperatorType, int)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOperatorManager.GetOperatorByBatchID(OperatorType, int)', correct the casing of 'ID' in parameter name 'BatchID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogBatchError(SEIDR.OperationServiceModels.Batch,System.String,System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IOperatorManager.LogBatchError(Batch, string, string, int?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Batch, string, string, int?)', correct the casing of 'Batch' in parameter name 'Batch_FileID' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="Extra" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Batch, string, string, int?)', correct the casing of 'Extra' in parameter name 'ExtraInfo' by changing it to 'extra'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Batch, string, string, int?)', correct the casing of 'ID' in parameter name 'Batch_FileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Message" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Batch, string, string, int?)', correct the casing of 'Message' in parameter name 'Message' by changing it to 'message'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In member 'IOperatorManager.LogBatchError(Batch, string, string, int?)', remove the underscores from parameter name 'Batch_FileID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogBatchError(SEIDR.OperationServiceModels.Operator,SEIDR.OperationServiceModels.Batch,System.String,System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IOperatorManager.LogBatchError(Operator, Batch, string, string, int?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Batch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Operator, Batch, string, string, int?)', correct the casing of 'Batch' in parameter name 'Batch_FileID' by changing it to 'batch'.</Issue>
            </Message>
            <Message Id="Extra" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Operator, Batch, string, string, int?)', correct the casing of 'Extra' in parameter name 'Extra' by changing it to 'extra'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Operator, Batch, string, string, int?)', correct the casing of 'ID' in parameter name 'Batch_FileID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Message" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogBatchError(Operator, Batch, string, string, int?)', correct the casing of 'Message' in parameter name 'Message' by changing it to 'message'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In member 'IOperatorManager.LogBatchError(Operator, Batch, string, string, int?)', remove the underscores from parameter name 'Batch_FileID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogError(SEIDR.OperationServiceModels.Operator,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Message" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'IOperatorManager.LogError(Operator, string)', correct the casing of 'Message' in parameter name 'Message' by changing it to 'message'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseNameDate(System.IO.FileInfo,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IOperatorManager.ParseNameDate(FileInfo, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OperationModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AsXML()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="44">Correct the casing of 'XML' in member name 'OperationModel.AsXML()' by changing it to 'Xml'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="45">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'OperationModel.AsXML()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AsXML(System.Collections.Generic.List`1&lt;SEIDR.OperationServiceModels.OperationModel&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="75">Change 'List&lt;OperationModel&gt;' in 'OperationModel.AsXML(List&lt;OperationModel&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Operations" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="75">In member 'OperationModel.AsXML(List&lt;OperationModel&gt;)', correct the casing of 'Operations' in parameter name 'Operations' by changing it to 'operations'.</Issue>
            </Message>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="75">Correct the casing of 'XML' in member name 'OperationModel.AsXML(List&lt;OperationModel&gt;)' by changing it to 'Xml'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="77">In externally visible method 'OperationModel.AsXML(List&lt;OperationModel&gt;)', validate parameter 'Operations' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ComputedTableName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ComputedTableName()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="30">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'OperationModel.ComputedTableName.get()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ThreadID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="41">Correct the casing of 'ID' in member name 'OperationModel.ThreadID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValdiateDB(SEIDR.DataBase.DatabaseManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Valdiate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="48">Correct the spelling of 'Valdiate' in member name 'OperationModel.ValdiateDB(DatabaseManager)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dbm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="48">In method 'OperationModel.ValdiateDB(DatabaseManager)', correct the spelling of 'dbm' in parameter name 'dbm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="48">The 'this' parameter (or 'Me' in Visual Basic) of 'OperationModel.ValdiateDB(DatabaseManager)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="dbm" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="OperationModel.cs" Line="48">Parameter 'dbm' of 'OperationModel.ValdiateDB(DatabaseManager)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Operator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'Operator' to protected.</Issue>
          </Message>
          <Message Id="Operator" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Rename type 'Operator' so that it no longer conflicts with the reserved language keyword 'Operator'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.OperationServiceModels.IOperatorManager,SEIDR.OperationServiceModels.OperatorType,System.Byte,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SEIDR.OperationServiceModels.IOperatorManager.LogError(SEIDR.OperationServiceModels.Operator,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="198">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'IOperatorManager.LogError(Operator, string)'. Retrieve the following string(s) from a resource table instead: "Aborted!".</Issue>
            </Message>
            <Message Id="SEIDR.OperationServiceModels.Operator.Sleep(System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="165">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'Operator.Sleep(string, bool)'. Retrieve the following string(s) from a resource table instead: "No Work found".</Issue>
            </Message>
            <Message Id="SEIDR.OperationServiceModels.Status.ThreadStatus.SetStatus(System.String,SEIDR.OperationServiceModels.Status.ThreadStatus+StatusType)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="173">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Aborted".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="149">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Check Pause".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="168">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Check Pause".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="153">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Checking for work".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="216">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Exited Work Loop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="160">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Found work!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="143">Method 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Starting up Thread Work".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="201">Modify 'Operator.Operator(IOperatorManager, OperatorType, byte, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="51">In member 'Operator.Operator(IOperatorManager, OperatorType, byte, string)', correct the casing of 'ID' in parameter name 'ID' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="51">In member 'Operator.Operator(IOperatorManager, OperatorType, byte, string)', correct the casing of 'Name' in parameter name 'Name' by changing it to 'name'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddBatch(SEIDR.OperationServiceModels.Batch)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="81">In method 'Operator.AddBatch(Batch)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckForBatch(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="54">In member 'Operator.CheckForBatch(int)', correct the casing of 'Check' in parameter name 'CheckBatchID' by changing it to 'check'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="54">In member 'Operator.CheckForBatch(int)', correct the casing of 'ID' in parameter name 'CheckBatchID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConditionalReset(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="246">In member 'Operator.ConditionalReset(int)', correct the casing of 'ID' in parameter name 'batchID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="260">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Operator.ConditionalReset(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="40">Correct the casing of 'ID' in member name 'Operator.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myInfo" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="my" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="103">Correct the casing of 'my' in member name 'Operator.myInfo' by changing it to 'My'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reset()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SEIDR.OperationServiceModels.Operator.Sleep(System.String,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="242">Method 'Operator.Reset()' passes a literal string as parameter 'Message' of a call to 'Operator.Sleep(string, bool)'. Retrieve the following string(s) from a resource table instead: "Reset!".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sleep(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="115">Replace method 'Operator.Sleep(string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="SEIDR.OperationServiceModels.Status.ThreadStatus.SetStatus(System.String,SEIDR.OperationServiceModels.Status.ThreadStatus+StatusType)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="122">Method 'Operator.Sleep(string, bool)' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: " - , Sleeping, Sleeping due to failure".</Issue>
            </Message>
            <Message Id="Failure" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="115">In member 'Operator.Sleep(string, bool)', correct the casing of 'Failure' in parameter name 'Failure' by changing it to 'failure'.</Issue>
            </Message>
            <Message Id="Message" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="115">In member 'Operator.Sleep(string, bool)', correct the casing of 'Message' in parameter name 'Message' by changing it to 'message'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stop()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SEIDR.OperationServiceModels.Status.ThreadStatus.SetStatus(System.String,SEIDR.OperationServiceModels.Status.ThreadStatus+StatusType)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="275">Method 'Operator.Stop()' passes a literal string as parameter 'Message' of a call to 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)'. Retrieve the following string(s) from a resource table instead: "Stopping".</Issue>
            </Message>
            <Message Id="Stop" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels" File="IOperator.cs" Line="269">Rename virtual/interface member 'Operator.Stop()' so that it no longer conflicts with the reserved language keyword 'Stop'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.OperationServiceModels.Status">
       <Types>
        <Type Name="ServiceStatus" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Add(SEIDR.OperationServiceModels.Status.ThreadStatus)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ts" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="48">In method 'ServiceStatus.Add(ThreadStatus)', correct the spelling of 'ts' in parameter name 'ts' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="49">In externally visible method 'ServiceStatus.Add(ThreadStatus)', validate parameter 'ts' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FILE_NAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FILE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FILE' in member name 'ServiceStatus.FILE_NAME' by changing it to 'File'.</Issue>
            </Message>
            <Message Id="NAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NAME' in member name 'ServiceStatus.FILE_NAME' by changing it to 'Name'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ServiceStatus.FILE_NAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStatuses(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="76">In method 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', object 'new DataColumn()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new DataColumn()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Error' in parameter name 'Error' by changing it to 'error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Error' in parameter name 'ErrorLate' by changing it to 'error'.</Issue>
            </Message>
            <Message Id="Finish" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Finish' in parameter name 'Finish' by changing it to 'finish'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Finish' in parameter name 'FinishLate' by changing it to 'finish'.</Issue>
            </Message>
            <Message Id="Sleep" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Sleep' in parameter name 'Sleep' by changing it to 'sleep'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Sleep' in parameter name 'SleepLate' by changing it to 'sleep'.</Issue>
            </Message>
            <Message Id="Start" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Start' in parameter name 'Start' by changing it to 'start'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="73">In member 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)', correct the casing of 'Start' in parameter name 'StartLate' by changing it to 'start'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="74">Be sure to set the DataTable Locale property wherever 'ServiceStatus.GetStatuses(string, string, string, string, string, string, string, string)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[SEIDR.OperationServiceModels.Status.ThreadInfo]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="32">Use an integral value or string as the parameter to indexer 'ServiceStatus.this[ThreadInfo]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StatusList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="27">Change 'ServiceStatus.StatusList' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="27">Change 'List&lt;ThreadStatus&gt;' in 'ServiceStatus.StatusList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteToFile(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Directory" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ServiceStatus.cs" Line="17">In member 'ServiceStatus.WriteToFile(string)', correct the casing of 'Directory' in parameter name 'Directory' by changing it to 'directory'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadInfo" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="16">In member 'ThreadInfo.ThreadInfo(string, string, int)', correct the casing of 'ID' in parameter name 'ID' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="16">In member 'ThreadInfo.ThreadInfo(string, string, int)', correct the casing of 'Name' in parameter name 'Name' by changing it to 'name'.</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="16">In member 'ThreadInfo.ThreadInfo(string, string, int)', correct the casing of 'Type' in parameter name 'Type' by changing it to 'type'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="14">Correct the casing of 'ID' in member name 'ThreadInfo.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Equality(SEIDR.OperationServiceModels.Status.ThreadInfo,SEIDR.OperationServiceModels.Status.ThreadInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="30">In method 'ThreadInfo.operator ==(ThreadInfo, ThreadInfo)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="30">In method 'ThreadInfo.operator ==(ThreadInfo, ThreadInfo)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Inequality(SEIDR.OperationServiceModels.Status.ThreadInfo,SEIDR.OperationServiceModels.Status.ThreadInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="34">In method 'ThreadInfo.operator !=(ThreadInfo, ThreadInfo)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="34">In method 'ThreadInfo.operator !=(ThreadInfo, ThreadInfo)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadInfo.cs" Line="12">The property name 'ThreadInfo.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadStatus" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="20">In member 'ThreadStatus.ThreadStatus(string, string, int)', correct the casing of 'Name' in parameter name 'Name' by changing it to 'name'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMostRecentStatusTime(System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="40">Consider a design that does not require that 'oldStatus' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="22">Correct the casing of 'ID' in member name 'ThreadStatus.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetStatus(System.String,SEIDR.OperationServiceModels.Status.ThreadStatus+StatusType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="49">Replace method 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Message" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="49">In member 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)', correct the casing of 'Message' in parameter name 'Message' by changing it to 'message'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="49">In member 'ThreadStatus.SetStatus(string, ThreadStatus.StatusType)', correct the casing of 'Message' in parameter name 'MessageStatusType' by changing it to 'message'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#startTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="start" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\OperationServiceModels\Status" File="ThreadStatus.cs" Line="21">Correct the casing of 'start' in member name 'ThreadStatus.startTime' by changing it to 'Start'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.Serialization">
       <Types>
        <Type Name="TYPE_REFERENCE" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="REFERENCE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'REFERENCE' in type name 'TYPE_REFERENCE' by changing it to 'Reference'.</Issue>
          </Message>
          <Message Id="TYPE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'TYPE' in type name 'TYPE_REFERENCE' by changing it to 'Type'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'TYPE_REFERENCE'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'TYPE_REFERENCE' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UBJsonDocument" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'UBJsonDocument' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UBJsonReader" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'UBJsonReader' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Read()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\Serialization" File="UBJsonReader.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'UBJsonReader.Read()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UBJsonWriter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'UBJsonWriter' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SEIDR.ThreadManaging">
       <Types>
        <Type Name="Lock" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Exclusive_Intent" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lock.Exclusive_Intent'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Shared_Exclusive_Intent" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lock.Shared_Exclusive_Intent'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LockHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SEIDR.ThreadManaging.Lock,SEIDR.ThreadManaging.LockManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="57">In externally visible method 'LockHelper.LockHelper(Lock, LockManager)', validate parameter 'manager' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(SEIDR.ThreadManaging.Lock,System.String,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="145">Replace method 'LockHelper.LockHelper(Lock, string, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="79">In method 'LockHelper.LockHelper(Lock, string, int, int)', object 'new LockManager(target)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new LockManager(target)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Exclusive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="145">In member 'LockHelper.LockHelper(Lock, string, int, int)', correct the casing of 'Exclusive' in parameter name 'ExclusiveIntentTimeout' by changing it to 'exclusive'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="145">In member 'LockHelper.LockHelper(Lock, string, int, int)', correct the casing of 'Exclusive' in parameter name 'ExclusiveTimeout' by changing it to 'exclusive'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="77">Method 'LockHelper.LockHelper(Lock, string, int, int)' passes parameter name 'lockLevel' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="77">Method 'LockHelper.LockHelper(Lock, string, int, int)' passes 'Lock Level Exclusive Intent is not valid if a LockManager is not passed to the helper' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="173">Change 'LockHelper.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExlusiveLockTimeout" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Exlusive" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="115">Correct the spelling of 'Exlusive' in member name 'LockHelper.ExlusiveLockTimeout' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LockHelper`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'LockHelper&lt;RT&gt;', prefix generic type parameter name 'RT' with 'T'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.ThreadManaging.Lock,System.Int32,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TimeOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="12">In member 'LockHelper&lt;RT&gt;.LockHelper(Lock, int, int, string)', the compound word 'TimeOut' in parameter name 'exclusiveTimeOut' exists as a discrete term. If your usage is intended to be single word, case it as 'Timeout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="12">Replace method 'LockHelper&lt;RT&gt;.LockHelper(Lock, int, int, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Exclusive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="12">In member 'LockHelper&lt;RT&gt;.LockHelper(Lock, int, int, string)', correct the casing of 'Exclusive' in parameter name 'ExclusiveIntentTimeout' by changing it to 'exclusive'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckTarget(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockHelper.cs" Line="24">Remove 'LockHelper&lt;RT&gt;.CheckTarget(string)' from 'LockHelper&lt;RT&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LockManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="58">Initialize all static fields in 'LockManager' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="42">Replace method 'LockManager.LockManager(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="TARGET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="42">In member 'LockManager.LockManager(string)', correct the casing of 'TARGET' in parameter name 'TARGET' by changing it to 'target'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="127">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'LockManager.LockManager(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_acquire(SEIDR.ThreadManaging.Lock,System.Object,System.Object,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="431">'LockManager._acquire(Lock, object, object, bool, bool)' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="LockManager" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="499">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="511">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="554">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="572">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="581">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Timed out attempting to acquire exclusive lock on LockManager ID "'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="581">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'LockManager._acquire(Lock, object, object, bool, bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="550">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'LockManager._acquire(Lock, object, object, bool, bool)' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Acquire(SEIDR.ThreadManaging.Lock,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="699">Replace method 'LockManager.Acquire(Lock, bool, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="LockManager" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="715">Correct the spelling of the unrecognized token 'LockManager' in the literal '"LockManager has had Dispose called already."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="732">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Trying to acquire a lock, but this LockManager is already attempting to acquire ..."'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="702">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LockManager.Acquire(Lock, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="744">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'LockManager.Acquire(Lock, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckLock(System.Object,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="266">The 'this' parameter (or 'Me' in Visual Basic) of 'LockManager.CheckLock(object, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugName" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_DebugName()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="281">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'LockManager.DebugName.get()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#EXCLUSIVE_INTENT_EXPIRATION_SECONDS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXCLUSIVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCLUSIVE' in member name 'LockManager.EXCLUSIVE_INTENT_EXPIRATION_SECONDS' by changing it to 'Exclusive'.</Issue>
            </Message>
            <Message Id="EXPIRATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXPIRATION' in member name 'LockManager.EXCLUSIVE_INTENT_EXPIRATION_SECONDS' by changing it to 'Expiration'.</Issue>
            </Message>
            <Message Id="INTENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INTENT' in member name 'LockManager.EXCLUSIVE_INTENT_EXPIRATION_SECONDS' by changing it to 'Intent'.</Issue>
            </Message>
            <Message Id="SECONDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SECONDS' in member name 'LockManager.EXCLUSIVE_INTENT_EXPIRATION_SECONDS' by changing it to 'Seconds'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'LockManager.EXCLUSIVE_INTENT_EXPIRATION_SECONDS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExclusiveIntent(SEIDR.ThreadManaging.Lock,System.Object,System.Object,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="LockManager" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="622">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="639">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="658">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="670">Correct the spelling of the unrecognized token 'LockManager' in the literal '"Attempting to acquire lock, but LockManager Dispose is being called"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LockManagementID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="49">Correct the casing of 'ID' in member name 'LockManager.LockManagementID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Release()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LockManager" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="162">Correct the spelling of the unrecognized token 'LockManager' in the literal '"LockManager has been disposed already."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#release(System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="232">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'LockManager.release(object, object)' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransitionLock(SEIDR.ThreadManaging.Lock)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LockManager" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="387">Correct the spelling of the unrecognized token 'LockManager' in the literal '"LockManager has had Dispose called already."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wait(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="320">Modify 'LockManager.Wait(int)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wait(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="339">Replace method 'LockManager.Wait(string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManager.cs" Line="360">Modify 'LockManager.Wait(string, int)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LockManagerException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'LockManagerException': public LockManagerException(String, Exception).</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Accessibility" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="12">Change the accessibility of 'LockManagerException.LockManagerException(SerializationInfo, StreamingContext)' to protected.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LockManagerSynchronizationException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'LockManagerSynchronizationException': public LockManagerSynchronizationException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'LockManagerSynchronizationException': public LockManagerSynchronizationException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'LockManagerSynchronizationException': public LockManagerSynchronizationException(String, Exception).</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="21">In member 'LockManagerSynchronizationException.LockManagerSynchronizationException(int, int)', correct the casing of 'ID' in parameter name 'callerID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="21">In member 'LockManagerSynchronizationException.LockManagerSynchronizationException(int, int)', correct the casing of 'ID' in parameter name 'expectedThreadID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="ThreadID" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="21">Correct the spelling of the unrecognized token 'ThreadID' in the literal '". Actual Calling ThreadID: "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="21">Correct the spelling of the unrecognized token 'ThreadID' in the literal '"Expected Calling ThreadID: "'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="21">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'LockManagerSynchronizationException.LockManagerSynchronizationException(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="21">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'LockManagerSynchronizationException.LockManagerSynchronizationException(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="Accessibility" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockManagerException.cs" Line="22">Change the accessibility of 'LockManagerSynchronizationException.LockManagerSynchronizationException(SerializationInfo, StreamingContext)' to protected.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LockMangerExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetLockHelper`1(!!0,SEIDR.ThreadManaging.Lock)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="12">On method 'LockMangerExtensions.GetLockHelper&lt;RT&gt;(this RT, Lock)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="12">Parameter 'obj' of 'LockMangerExtensions.GetLockHelper&lt;RT&gt;(this RT, Lock)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLockHelper`1(!!0,SEIDR.ThreadManaging.Lock,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Alias" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="16">In member 'LockMangerExtensions.GetLockHelper&lt;RT&gt;(this RT, Lock, string)', correct the casing of 'Alias' in parameter name 'Alias' by changing it to 'alias'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="16">On method 'LockMangerExtensions.GetLockHelper&lt;RT&gt;(this RT, Lock, string)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="16">Parameter 'obj' of 'LockMangerExtensions.GetLockHelper&lt;RT&gt;(this RT, Lock, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wait`1(!!0,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="27">Replace method 'LockMangerExtensions.Wait&lt;RT&gt;(this RT, string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Alias" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="27">In member 'LockMangerExtensions.Wait&lt;RT&gt;(this RT, string, int)', correct the casing of 'Alias' in parameter name 'Alias' by changing it to 'alias'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="27">On method 'LockMangerExtensions.Wait&lt;RT&gt;(this RT, string, int)', prefix generic type parameter name 'RT' with 'T'.</Issue>
            </Message>
            <Message Id="obj" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="LockMangerExtensions.cs" Line="27">Parameter 'obj' of 'LockMangerExtensions.Wait&lt;RT&gt;(this RT, string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultiLockHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiLockHelper'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(SEIDR.ThreadManaging.Lock,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="40">Replace method 'MultiLockHelper.MultiLockHelper(Lock, IEnumerable&lt;string&gt;, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Exclusive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="40">In member 'MultiLockHelper.MultiLockHelper(Lock, IEnumerable&lt;string&gt;, int, int)', correct the casing of 'Exclusive' in parameter name 'ExclusiveIntentTimeout' by changing it to 'exclusive'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="71">In externally visible method 'MultiLockHelper.MultiLockHelper(Lock, IEnumerable&lt;string&gt;, int, int)', validate parameter 'targetList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="40">Replace method 'MultiLockHelper.MultiLockHelper(IEnumerable&lt;string&gt;, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Exclusive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="40">In member 'MultiLockHelper.MultiLockHelper(IEnumerable&lt;string&gt;, int, int)', correct the casing of 'Exclusive' in parameter name 'ExclusiveIntentTimeout' by changing it to 'exclusive'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="54">In externally visible method 'MultiLockHelper.MultiLockHelper(IEnumerable&lt;string&gt;, int, int)', validate parameter 'targetList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="178">Change 'MultiLockHelper.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Item(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="MultiLock" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="99">Correct the spelling of the unrecognized token 'MultiLock' in the literal '"MultiLock Helper instance has already been disposed."'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Item(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="MultiLock" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="90">Correct the spelling of the unrecognized token 'MultiLock' in the literal '"MultiLock Helper instance has already been disposed."'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SetExclusiveIntentTimeout(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLock" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="120">Correct the spelling of the unrecognized token 'MultiLock' in the literal '"MultiLock Helper instance has already been disposed."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetExclusiveTimeout(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiLock" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="110">Correct the spelling of the unrecognized token 'MultiLock' in the literal '"MultiLock Helper instance has already been disposed."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transition(SEIDR.ThreadManaging.Lock,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="130">Replace method 'MultiLockHelper.Transition(Lock, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="MultiLock" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="132">Correct the spelling of the unrecognized token 'MultiLock' in the literal '"MultiLock Helper instance has already been disposed."'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultiLockHelper`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiLockHelper&lt;RT&gt;'.</Issue>
          </Message>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'MultiLockHelper&lt;RT&gt;', prefix generic type parameter name 'RT' with 'T'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,SEIDR.ThreadManaging.Lock,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="24">Replace method 'MultiLockHelper&lt;RT&gt;.MultiLockHelper(IEnumerable&lt;string&gt;, Lock, int, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Exclusive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-04 05:56:12Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\MetrixGitNew\metrix_git\SEIDR\SEIDR\ThreadManaging" File="MultiLockHelper.cs" Line="24">In member 'MultiLockHelper&lt;RT&gt;.MultiLockHelper(IEnumerable&lt;string&gt;, Lock, int, int)', correct the casing of 'Exclusive' in parameter name 'ExclusiveIntentTimeout' by changing it to 'exclusive'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809">
   <Name>Avoid excessive locals</Name>
   <Description>Method implementations should not contain more than 64 local variables. In order for the run-time to enregister local variables most efficiently, there should be 64 or fewer of them. Enregistering based on flow analysis will not occur for locals in excess of 64, which may result in slower performance.</Description>
   <Resolution Name="Compiler">{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182263.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Resolution Name="NotCalledWithFinalizer">Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="NamespaceShouldBeDiscreteTerm">The compound word '{0}' in namespace name '{1}' exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019">
   <Name>Define accessors for attribute arguments</Name>
   <Description>Provide accessors for both named and positional arguments. Each positional argument on an attribute should declare a read-only property with the same name (but different casing). Each named argument should provide a read/write property with the same name (but different casing).</Description>
   <Resolution Name="Default">Add a public read-only property accessor for positional argument {0} of Attribute {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182136.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1100</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>Do not declare static members on generic types</Name>
   <Description>The syntax for calling static members on generic types is complex as the type parameter has to be specified for each call.</Description>
   <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="StringCreation">{0} calls {1} but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="NoAllowedExceptions">{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
   <Name>Generic methods should provide type parameter</Name>
   <Description>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182150.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="MethodTypeParameterMoreMeaningfulName">On method {0}, consider providing a more meaningful name than generic type parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Resolution Name="TypeTypeParameterMoreMeaningfulName">On type {0}, consider providing a more meaningful name than generic type parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>Identifiers should differ by more than case</Name>
   <Description>Do not use names that require case sensitivity for uniqueness. Components must be fully usable from both case-sensitive and case-insensitive languages. Since case-insensitive languages cannot distinguish between two names within the same context that differ only by case, components must avoid this situation.</Description>
   <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
   <Name>Identifiers should have correct prefix</Name>
   <Description>Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</Description>
   <Resolution Name="Interface">Prefix interface name {0} with 'I'.</Resolution>
   <Resolution Name="MethodTypeParameter">On method {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Resolution Name="TypeTypeParameter">On type {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182243.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Resolution Name="MemberParameter">In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Resolution Name="Type">Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>Implement standard exception constructors</Name>
   <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
   <Resolution Name="Accessibility">Change the accessibility of {0} to {1}.</Resolution>
   <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IndexersShouldNotBeMultidimensional" Category="Microsoft.Design" CheckId="CA1023">
   <Name>Indexers should not be multidimensional</Name>
   <Description>Indexers (indexed properties) should use a single value (either an integer or string types) for indexing values. Multidimensional indexers can significantly reduce the usability of the library. For example, public object this [int index1, int index2] is a non-intuitive indexer.</Description>
   <Resolution Name="Default">Redesign indexer {0} to use a single string or integer value as its index.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182152.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
   <Name>Mark attributes with AttributeUsageAttribute</Name>
   <Description>The AttributeUsage attribute specifies the targets that are valid for the attribute (see System.AttributeTargets), whether an attribute can appear on a target more than once, and whether the attribute is inheritable.</Description>
   <Resolution Name="Default">Specify AttributeUsage on {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182158.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>Mark ISerializable types with SerializableAttribute</Name>
   <Description>The System.Runtime.Serialization.ISerializable interface allows the type to customize its serialization, while the Serializable attribute enables the runtime to recognize the type as being serializable.</Description>
   <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
   <Name>Operations should not overflow</Name>
   <Description>Arithmetic operations should not be done without first validating the operands to prevent overflow.</Description>
   <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182354.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225">
   <Name>Operator overloads have named alternates</Name>
   <Description>When redefining operators, implement named methods to provide access to the operator functionality from languages that do not support operator overloading. For example, the functionality of the '+' operator should also be accessible using an 'Add' method.</Description>
   <Resolution Name="Multiple">Provide a method named '{0}' or '{1}' as an alternate for operator {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182355.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
   <Name>Parameter names should not match member names</Name>
   <Description>Parameter names should be distinct from member names.</Description>
   <Resolution Name="Default">Change either member or parameter name {0} so that one differs from the other.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182252.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
   <Name>Properties should not be write only</Name>
   <Description>Write-only properties usually indicate a flawed design.</Description>
   <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182165.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Resolution Name="SameType">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="Default">The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043">
   <Name>Use integral or string argument for indexers</Name>
   <Description>Indexers (indexed properties) should use either integer or string types for indexing values. These types are easy to use and commonly used for indexing data structures; using other types can significantly reduce the usability of the library. For example, public char this [int index] is the C# signature for the String type's indexer.</Description>
   <Resolution Name="Default">Use an integral value or string as the parameter to indexer {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182180.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="TypeNoAlternate">Replace the term '{0}' in type name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
